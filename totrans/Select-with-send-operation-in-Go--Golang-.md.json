["```\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n    ch1 := make(chan string)\n    ch2 := make(chan string)\n    go goOne(ch1)\n    go goTwo(ch2)\n    select {\n\n    case msg1 := <-ch1:\n        fmt.Println(msg1)\n    case ch2 <- \"To goTwo goroutine\":\n    }\n}\n\nfunc goOne(ch chan string) {\n    ch <- \"From goOne goroutine\"\n}\n\nfunc goTwo(ch chan string) {\n    msg := <-ch\n    fmt.Println(msg)\n}\n```", "```\nTo goTwo goroutine\n```", "```\nTo goTwo goroutine\n```", "```\nFrom goOne goroutine\n```", "```\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n)\n\nfunc main() {\n    ch1 := make(chan string)\n    ch2 := make(chan string)\n    go goOne(ch1)\n    go goTwo(ch2)\n    select {\n    case ch1 <- \"To goOne goroutine\":\n    case ch2 <- \"To goTwo goroutine\":\n    }\n    time.Sleep(time.Second * 1)\n}\n\nfunc goOne(ch chan string) {\n    msg := <-ch\n    fmt.Println(msg)\n}    \n\nfunc goTwo(ch chan string) {\n    msg := <-ch\n    fmt.Println(msg)\n}\n```", "```\nTo goTwo goroutine\n```", "```\nTo goOne goroutine\n```", "```\nTo goTwo goroutine\n```", "```\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n    ch1 := make(chan string)\n    ch2 := make(chan string)\n\n    go goOne(ch1)\n    go goTwo(ch2)\n\n    select {\n    case msg1 := <-ch1:\n        fmt.Println(msg1)\n    case msg2 := <-ch2:\n        fmt.Println(msg2)\n    }\n}\nfunc goOne(ch chan string) {\n    ch <- \"From goOne goroutine\"\n}\nfunc goTwo(ch chan string) {\n    ch <- \"From goTwo goroutine\"\n}\n```", "```\nFrom goOne goroutine\n```"]