["```\nfunc Copy(dst Writer, src Reader) (written int64, err error)\n```", "```\npackage main\n\nimport (\n    \"fmt\"\n    \"io\"\n    \"log\"\n    \"os\"\n)\n\n// Copy a file\nfunc main() {\n    // Open original file\n    original, err := os.Open(\"original.txt\")\n    if err != nil {\n        log.Fatal(err)\n    }\n    defer original.Close()\n\n    // Create new file\n    new, err := os.Create(\"new.txt\")\n    if err != nil {\n        log.Fatal(err)\n    }\n    defer new.Close()\n\n    //This will copy\n    bytesWritten, err := io.Copy(new, original)\n    if err != nil {\n        log.Fatal(err)\n    }\n    fmt.Printf(\"Bytes Written: %d\\n\", bytesWritten)\n}\n```", "```\nBytes Written: \n```", "```\npackage main\nimport (\n    \"io/ioutil\"\n    \"log\"\n)\n\n// Copy a file\nfunc main() {\n    //Read all the contents of the  original file\n    bytesRead, err := ioutil.ReadFile(\"original.txt\")\n    if err != nil {\n        log.Fatal(err)\n    }\n\n    //Copy all the contents to the desitination file\n    err = ioutil.WriteFile(\"new.txt\", bytesRead, 0755)\n    if err != nil {\n        log.Fatal(err)\n    }\n}\n```", "```\nnew.txt file will have same content as original.txt\n```"]