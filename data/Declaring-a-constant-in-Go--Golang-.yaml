- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 分类：未分类
- en: 'date: 2024-10-13 06:28:02'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-10-13 06:28:02
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Declaring a constant in Go (Golang)
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Go（Golang）中声明常量
- en: 来源：[https://golangbyexample.com/declaring-constant-go/](https://golangbyexample.com/declaring-constant-go/)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://golangbyexample.com/declaring-constant-go/](https://golangbyexample.com/declaring-constant-go/)
- en: A constant is anything that doesn’t change its value. In Go const can be either
    of type string, numeric, boolean, and characters.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 常量是指任何不会改变其值的东西。在Go中，const可以是字符串、数字、布尔值和字符类型。
- en: A constant can be declared using the **const** keyword. An important point to
    be noted is that the value has to be assigned while declaring a constant. It is
    unlike variables where value can be assigned later.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 常量可以使用**const**关键字声明。需要注意的重要一点是，值必须在声明常量时赋值。这与变量不同，变量的值可以稍后赋值。
- en: Declaring a **const** along with specifying the type – It starts with a **const**
    keyword, followed by the name and then the type. The value must also be assigned
    right away as discussed above
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 声明**const**并指定类型 – 它以**const**关键字开头，后接名称，然后是类型。值也必须立即赋值，如上所述。
- en: '[PRE0]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Declaring a const without specifying type – A const declared without type is
    an untyped constant. We will learn more about typed and untyped constant later
    on. For now, it’s important to know that const declared without type has a default
    hidden type. The constant will be given a type once it is assigned to a variable
    in any way (direct initialization, passing to a function, etc).
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不指定类型声明常量 – 没有类型声明的const是无类型常量。我们稍后会深入了解有类型和无类型常量。目前，重要的是要知道，无类型声明的const具有默认的隐藏类型。常量在以任何方式（直接初始化、传递给函数等）赋值给变量时会被赋予一个类型。
- en: '[PRE1]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Declaring multiple const together
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一起声明多个const
- en: '[PRE2]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[go](https://golangbyexample.com/tag/go/)*   [golang](https://golangbyexample.com/tag/golang/)'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[go](https://golangbyexample.com/tag/go/)*   [golang](https://golangbyexample.com/tag/golang/)'
