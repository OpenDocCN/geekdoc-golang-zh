- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 分类：未分类
- en: 'date: 2024-10-13 06:40:06'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-10-13 06:40:06
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Create Slice or Array of Integers in Go (Golang)
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Go中创建整数的切片或数组（Golang）
- en: 来源：[https://golangbyexample.com/slice-array-integers-golang/](https://golangbyexample.com/slice-array-integers-golang/)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://golangbyexample.com/slice-array-integers-golang/](https://golangbyexample.com/slice-array-integers-golang/)
- en: Table of Contents
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 目录
- en: '**   [Overview](#Overview "Overview")'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**   [概述](#Overview "Overview")**'
- en: '[Slice of Int](#Slice_of_Int "Slice of Int")'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[整数切片](#Slice_of_Int "Slice of Int")'
- en: '[Array of Integers](#Array_of_Integers "Array of Integers")*  *## **Overview**'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[整数数组](#Array_of_Integers "Array of Integers")*  *## **概述**'
- en: It is possible to create a slice or array of **int** data type in Golang as
    well. In fact, a slice or array can be created of any data type in Go. This tutorial
    contains simple examples to create a slice or array of int data type in golang.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在Golang中也可以创建**int**数据类型的切片或数组。实际上，Go中可以创建任何数据类型的切片或数组。本教程包含简单的示例，演示如何在Golang中创建int数据类型的切片或数组。
- en: Just to add here that in golang array is of fixed size and slice can have variable
    size. More details here
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 这里补充一下，在Golang中数组是固定大小的，而切片可以有可变大小。更多细节在这里
- en: Array – [https://golangbyexample.com/understanding-array-golang-complete-guide/](https://golangbyexample.com/understanding-array-golang-complete-guide/)
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 数组 – [https://golangbyexample.com/understanding-array-golang-complete-guide/](https://golangbyexample.com/understanding-array-golang-complete-guide/)
- en: Slice – [https://golangbyexample.com/slice-in-golang/](https://golangbyexample.com/slice-in-golang/)
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 切片 – [https://golangbyexample.com/slice-in-golang/](https://golangbyexample.com/slice-in-golang/)
- en: '**Slice of Int**'
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**整数切片**'
- en: '[PRE0]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '**Output**'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出**'
- en: '[PRE1]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: We have two ways of creating a slice of integer. The first way is
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有两种创建整数切片的方法。第一种方法是
- en: '[PRE2]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: In the second way, we use make command to create a slice of integers
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在第二种方法中，我们使用make命令来创建整数切片
- en: '[PRE3]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Either way works. This is how we can create a slice of integers
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 无论哪种方法都可以。这就是我们如何创建整数切片
- en: '**Array of Integers**'
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**整数数组**'
- en: '[PRE4]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '**Output**'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出**'
- en: '[PRE5]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: We have two ways of creating an array. The first way is
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有两种创建数组的方法。第一种方法是
- en: '[PRE6]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: In second way we directly initialize the array with created integers
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 在第二种方法中，我们直接用创建的整数初始化数组
- en: '[PRE7]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Check out our Golang Advanced Tutorial. The tutorials in this series are elaborative
    and we have tried to cover all concepts with examples. This tutorial is for those
    who are looking to gain expertise and a solid understanding of golang – [Golang
    Advance Tutorial](https://golangbyexample.com/golang-comprehensive-tutorial/)
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 查看我们的Golang高级教程。本系列教程详尽，我们努力覆盖所有概念及示例。本教程适合那些希望获得专业知识和扎实理解Golang的人 – [Golang高级教程](https://golangbyexample.com/golang-comprehensive-tutorial/)
- en: Also if you are interested in understanding how all design patterns can be implemented
    in Golang. If yes, then this post is for you –[All Design Patterns Golang](https://golangbyexample.com/all-design-patterns-golang/)
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有兴趣了解所有设计模式如何在Golang中实现。如果是的话，这篇文章适合你 –[所有设计模式Golang](https://golangbyexample.com/all-design-patterns-golang/)
- en: '[go](https://golangbyexample.com/tag/go/)*   [golang](https://golangbyexample.com/tag/golang/)*'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[go](https://golangbyexample.com/tag/go/)*   [golang](https://golangbyexample.com/tag/golang/)*'
