["```\nrequest.ParseMultipartForm()\n```", "```\ntype Form struct {\n\tValue map[string][]string\n\tFile  map[string][]*FileHeader\n}\n```", "```\nmap[string][]string\n```", "```\nmap[string][]string\n```", "```\nrequest.Form[\"name\"]\nrequest.PostForm[\"name\"] \nrequest.MultipartForm.Value[\"name\"]\n```", "```\n[\"John\"]\n```", "```\nrequest.PostFormValue(\"name\") \n```", "```\nJohn\n```", "```\nrequest.Form[\"age\"]\nrequest.PostForm[\"age\"] \nrequest.MultipartForm.Value[\"age\"]\n```", "```\n[\"21\"]\n```", "```\nrequest.PostFormValue(\"age\") \n```", "```\n21\n```", "```\nrequest.MultipartForm.File[\"photo\"]\n```", "```\n[FileHeader_object_of_the_image]\n```", "```\nrequest.FormFile(\"photo\") \n```", "```\nFileHeader_object_of_the_image\n```", "```\npackage main\nimport (\n\t\"fmt\"\n\t\"io\"\n\t\"mime/multipart\"\n\t\"net/http\"\n\t\"os\"\n)\nfunc main() {\n\tcreateEmployeeHanlder := http.HandlerFunc(createEmployee)\n\thttp.Handle(\"/employee\", createEmployeeHanlder)\n\thttp.ListenAndServe(\":8080\", nil)\n}\nfunc createEmployee(w http.ResponseWriter, request *http.Request) {\n\terr := request.ParseMultipartForm(32 << 20) // maxMemory 32MB\n\tif err != nil {\n\t\tw.WriteHeader(http.StatusBadRequest)\n\t\treturn\n\t}\n\t//Access the name key - First Approach\n\tfmt.Println(request.Form[\"name\"])\n\t//Access the name key - Second Approach\n\tfmt.Println(request.PostForm[\"name\"])\n\t//Access the name key - Third Approach\n\tfmt.Println(request.MultipartForm.Value[\"name\"])\n\t//Access the name key - Fourth Approach\n\tfmt.Println(request.PostFormValue(\"name\"))\n\t//Access the age key - First Approach\n\tfmt.Println(request.Form[\"age\"])\n\t//Access the age key - Second Approach\n\tfmt.Println(request.PostForm[\"age\"])\n\t//Access the age key - Third Approach\n\tfmt.Println(request.MultipartForm.Value[\"age\"])\n\t//Access the age key - Fourth Approach\n\tfmt.Println(request.PostFormValue(\"age\"))\n\t//Access the photo key - First Approach\n\t_, h, err := request.FormFile(\"photo\")\n\tif err != nil {\n\t\tw.WriteHeader(http.StatusBadRequest)\n\t\treturn\n\t}\n\tsaveFile(h, \"formfile\")\n\t//Access the photo key - Second Approach\n\tfor _, h := range request.MultipartForm.File[\"photo\"] {\n\t\terr := saveFile(h, \"mapaccess\")\n\t\tif err != nil {\n\t\t\tw.WriteHeader(http.StatusBadRequest)\n\t\t\treturn\n\t\t}\n\t}\n\tw.WriteHeader(200)\n\treturn\n}\n```", "```\n//Access the name key - First Approach\nfmt.Println(request.Form[\"name\"])\n//Access the name key - Second Approach\nfmt.Println(request.PostForm[\"name\"])\n//Access the name key - Third Approach\nfmt.Println(request.MultipartForm.Value[\"name\"])\n//Access the name key - Fourth Approach\nfmt.Println(request.PostFormValue(\"name\"))\n```", "```\ncurl --location --request PUT 'http://localhost:8080/employee' \\\n--header 'Content-Type: multipart/form-data' \\\n--form 'name=John' \\\n--form 'age=23' \\\n--form 'photo=@test.png'\n```", "```\n[John] \n[John] \n[John] \nJohn \n[23] \n[23] \n[23] \n23\n```", "```\nformfile-test.png\nmapaccess-test.png\n```", "```\ncurl --location --request PUT 'http://localhost:8080/employee' \\\n--header 'Content-Type: multipart/form-data' \\\n--form 'name=John' \\\n--form 'age=23' \\\n--form 'photo=@test1.png' \\\n--form 'photo=@test2.png'\n```", "```\n[John] \n[John] \n[John] \nJohn \n[23] \n[23] \n[23] \n23\n```", "```\nformfile-test1.png\nmapaccess-test2.png\nmapaccess-test2.png\n```", "```\ncurl --location --request PUT 'http://localhost:8080/employee' \\\n--header 'Content-Type: multipart/form-data' \\\n--form 'name=John' \\\n--form 'name=John2' \\\n--form 'age=23' \\\n--form 'photo=@test.png'\n```", "```\n[John John2] \n[John John2] \n[John John2] \nJohn \n[23] \n[23] \n[23]\n23\n```", "```\nJohn\n```", "```\n[John John2]\n```", "```\nwriter := multipart.NewWriter(body)\n```", "```\npackage main\nimport (\n    \"bytes\"\n    \"io\"\n    \"log\"\n    \"mime/multipart\"\n    \"net/http\"\n    \"os\"\n    \"strings\"\n    \"time\"\n)\nfunc main() {\n    call(\"http://localhost:8080/employee\", \"POST\")\n}\nfunc call(urlPath, method string) error {\n    client := &http.Client{\n        Timeout: time.Second * 10,\n    }\n    // New multipart writer.\n    body := &bytes.Buffer{}\n    writer := multipart.NewWriter(body)\n    fw, err := writer.CreateFormField(\"name\")\n    if err != nil {\n    }\n    _, err = io.Copy(fw, strings.NewReader(\"John\"))\n    if err != nil {\n        return err\n    }\n    fw, err = writer.CreateFormField(\"age\")\n    if err != nil {\n    }\n    _, err = io.Copy(fw, strings.NewReader(\"23\"))\n    if err != nil {\n        return err\n    }\n    fw, err = writer.CreateFormFile(\"photo\", \"test.png\")\n    if err != nil {\n    }\n    file, err := os.Open(\"test.png\")\n    if err != nil {\n        panic(err)\n    }\n    _, err = io.Copy(fw, file)\n    if err != nil {\n        return err\n    }\n    // Close multipart writer.\n    writer.Close()\n    req, err := http.NewRequest(\"POST\", \"http://localhost:8080/employee\", bytes.NewReader(body.Bytes()))\n    if err != nil {\n        return err\n    }\n    req.Header.Set(\"Content-Type\", writer.FormDataContentType())\n    rsp, _ := client.Do(req)\n    if rsp.StatusCode != http.StatusOK {\n        log.Printf(\"Request failed with response code: %d\", rsp.StatusCode)\n    }\n    return nil\n}\n```", "```\n[John] \n[John] \n[John] \nJohn \n[23] \n[23] \n[23] \n23\n```", "```\nformfile-test.png\nmapaccess-test.png\n```"]