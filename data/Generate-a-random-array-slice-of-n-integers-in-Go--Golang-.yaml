- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '类别: 未分类'
- en: 'date: 2024-10-13 06:16:35'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '日期: 2024-10-13 06:16:35'
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Generate a random array/slice of n integers in Go (Golang)
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Go (Golang) 中生成 n 个整数的随机数组/切片
- en: 来源：[https://golangbyexample.com/generate-random-array-slice-golang/](https://golangbyexample.com/generate-random-array-slice-golang/)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://golangbyexample.com/generate-random-array-slice-golang/](https://golangbyexample.com/generate-random-array-slice-golang/)
- en: Table of Contents
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 目录
- en: '**   [Overview](#Overview "Overview")'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**   [概述](#Overview "概述")'
- en: '[Code:](#Code "Code:")*  *# **Overview**'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[代码:](#Code "代码:")*  *# **概述**'
- en: '**math/rand** package of GO provides a **Perm** method that can be used generate
    the pseudo-random slice of n integers. The array will be pseudo-random permutation
    of the integers in the range [0,n).'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: GO 的 **math/rand** 包提供了一个 **Perm** 方法，可以用来生成 n 个整数的伪随机切片。数组将是范围 [0,n) 内整数的伪随机排列。
- en: To know more about what pseudo-random number means, checkout this post – [https://golangbyexample.com/generate-random-number-golang](https://golangbyexample.com/generate-random-number-golang)
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于伪随机数的含义，请查看这篇文章 – [https://golangbyexample.com/generate-random-number-golang](https://golangbyexample.com/generate-random-number-golang)
- en: Below is the signature of the function. It takes a number n as input and returns
    the permuted slice.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是该函数的签名。它接受一个数字 n 作为输入并返回排列后的切片。
- en: '[PRE0]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '**Code:**'
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**代码:**'
- en: '[PRE1]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**Output:**'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出:**'
- en: '[PRE2]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[array](https://golangbyexample.com/tag/array/)*   [go](https://golangbyexample.com/tag/go/)*   [golang](https://golangbyexample.com/tag/golang/)*   [random](https://golangbyexample.com/tag/random/)*   [slice](https://golangbyexample.com/tag/slice/)*'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数组](https://golangbyexample.com/tag/array/)*   [go](https://golangbyexample.com/tag/go/)*   [golang](https://golangbyexample.com/tag/golang/)*   [随机](https://golangbyexample.com/tag/random/)*   [切片](https://golangbyexample.com/tag/slice/)*'
