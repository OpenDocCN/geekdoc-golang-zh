["```\ntype cancelCtx struct {\n    Context\n    mu       sync.Mutex            // protects following fields\n    done     chan struct{}         // created lazily, closed by first cancel call\n    children map[canceler]struct{} // set to nil by the first cancel call\n    err      error                 // set to non-nil by the first cancel call\n}\n```", "```\npackage main\n\nimport (\n    \"fmt\"\n    \"time\"\n)\n\nfunc main() {\n    done := make(chan struct{}, 4)\n    for i := 0; i < 4; i++ {\n        go runasync(done)\n    }\n    for i := 0; i < 4; i++ {\n        <-done\n    }\n    close(done)\n    fmt.Printf(\"Finish\")\n}\n\nfunc runasync(done chan<- struct{}) {\n    time.Sleep(1 * time.Second)\n    done <- struct{}{}\n    return\n}\n```"]