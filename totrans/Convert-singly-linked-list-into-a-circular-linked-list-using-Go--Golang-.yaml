- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 分类：未分类
- en: 'date: 2024-10-13 06:36:17'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-10-13 06:36:17
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Convert singly linked list into a circular linked list using Go (Golang)
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Go (Golang) 将单链表转换为循环链表
- en: 来源：[https://golangbyexample.com/single-linked-list-circular-golang/](https://golangbyexample.com/single-linked-list-circular-golang/)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://golangbyexample.com/single-linked-list-circular-golang/](https://golangbyexample.com/single-linked-list-circular-golang/)
- en: '![](img/2bc3aa339263d40466019d041011a04e.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2bc3aa339263d40466019d041011a04e.png)'
- en: Table of Contents
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 目录
- en: '**   [Overview](#Overview "Overview")'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**   [概述](#Overview "Overview")'
- en: '[Program](#Program "Program")*  *## **Overview**'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[程序](#Program "Program")*  *## **概述**'
- en: Convert singly linked list into a circular linked list using Golang
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Golang 将单链表转换为循环链表
- en: '**Input singly linked list: **'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**输入单链表：**'
- en: '[PRE0]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '**Output list that should be a circular linked list:**'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出应该是一个循环链表：**'
- en: '[PRE1]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**Program**'
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**程序**'
- en: There are two important methods in this program
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 本程序中有两个重要方法
- en: '**ToCircular** – converts a single linked list to a circular linked list'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**ToCircular** – 将单链表转换为循环链表'
- en: '**IsCircular** – checks if a linked list is a circular linked list'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**IsCircular** – 检查一个链表是否为循环链表'
- en: '[PRE2]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**Output**'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出**'
- en: '[PRE3]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[circular linked list](https://golangbyexample.com/tag/circular-linked-list/)*   [go](https://golangbyexample.com/tag/go/)*   [golang](https://golangbyexample.com/tag/golang/)*   [single
    linked list](https://golangbyexample.com/tag/single-linked-list/)*'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[循环链表](https://golangbyexample.com/tag/circular-linked-list/)*   [go](https://golangbyexample.com/tag/go/)*   [golang](https://golangbyexample.com/tag/golang/)*   [单链表](https://golangbyexample.com/tag/single-linked-list/)*'
