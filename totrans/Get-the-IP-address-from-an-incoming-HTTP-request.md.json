["```\npackage main\n\nimport (\n    \"fmt\"\n    \"net\"\n    \"net/http\"\n    \"strings\"\n)\n\nfunc main() {\n    handlerFunc := http.HandlerFunc(handleRequest)\n    http.Handle(\"/getIp\", handlerFunc)\n    http.ListenAndServe(\":8080\", nil)\n}\n\nfunc handleRequest(w http.ResponseWriter, r *http.Request) {\n    ip, err := getIP(r)\n    if err != nil {\n        w.WriteHeader(400)\n        w.Write([]byte(\"No valid ip\"))\n    }\n    w.WriteHeader(200)\n    w.Write([]byte(ip))\n}\n\nfunc getIP(r *http.Request) (string, error) {\n    //Get IP from the X-REAL-IP header\n    ip := r.Header.Get(\"X-REAL-IP\")\n    netIP := net.ParseIP(ip)\n    if netIP != nil {\n        return ip, nil\n    }\n\n    //Get IP from X-FORWARDED-FOR header\n    ips := r.Header.Get(\"X-FORWARDED-FOR\")\n    splitIps := strings.Split(ips, \",\")\n    for _, ip := range splitIps {\n        netIP := net.ParseIP(ip)\n        if netIP != nil {\n            return ip, nil\n        }\n    }\n\n    //Get IP from RemoteAddr\n    ip, _, err := net.SplitHostPort(r.RemoteAddr)\n    if err != nil {\n        return \"\", err\n    }\n    netIP = net.ParseIP(ip)\n    if netIP != nil {\n        return ip, nil\n    }\n    return \"\", fmt.Errorf(\"No valid ip found\")\n}\n```", "```\ncurl -v -X  GET http://localhost:8080/getIp\n```", "```\nOn my machine it outputs ::1 which is actually loopback address for IPV6\n```"]