- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-10-13 06:52:35'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: Delete or Remove a key from a map in Go (Golang)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://golangbyexample.com/delete-key-map-golang/](https://golangbyexample.com/delete-key-map-golang/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Table of Contents
  prefs: []
  type: TYPE_NORMAL
- en: '**   [Overview](#Overview "Overview")'
  prefs: []
  type: TYPE_NORMAL
- en: '[Key exists in the Map](#Key_exists_in_the_Map "Key exists in the Map")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The Key doesn’t exist in the Map](#The_Key_doesnt_exist_in_the_Map "The Key
    doesn’t exist in the Map")*  *# **Overview**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Below is the format to delete a given key from a map
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: There are two cases
  prefs: []
  type: TYPE_NORMAL
- en: The **keyToDelete** exists in the map. In this case, it will simply delete the
    key
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The **keyToDelete** doesn’t exist in the map. In this case, it will do nothing.
    A
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let’s see an example of both the cases
  prefs: []
  type: TYPE_NORMAL
- en: '**Key exists in the Map**'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Below is the program for the case where the key exists in the Map
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '**Output**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Notice in the output that the key “a” got deleted from the map. It is always
    a good practice to check if a key exists in the map and then delete it. Below
    is the code snippet for that.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '**Output**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '**The Key doesn’t exist in the Map**'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this case, also it is a good practice to check if the key exists and then
    delete it. Even if we delete directly without checking, then also it is not a
    problem though. The below code snippet shows both the cases
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '**Output**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '**Note:** Check out our Golang Advanced Tutorial. The tutorials in this series
    are elaborative and we have tried to cover all concepts with examples. This tutorial
    is for those who are looking to gain expertise and a solid understanding of golang
    – [Golang Advance Tutorial](https://golangbyexample.com/golang-comprehensive-tutorial/)'
  prefs: []
  type: TYPE_NORMAL
- en: Also if you are interested in understanding how all design patterns can be implemented
    in Golang. If yes, then this post is for you –
  prefs: []
  type: TYPE_NORMAL
- en: '[All Design Patterns Golang](https://golangbyexample.com/all-design-patterns-golang/)*'
  prefs: []
  type: TYPE_NORMAL
