- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-10-13 06:16:04'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: Generate a random password in Go (Golang)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://golangbyexample.com/generate-random-password-golang/](https://golangbyexample.com/generate-random-password-golang/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Table of Contents
  prefs: []
  type: TYPE_NORMAL
- en: '**   [Overview](#Overview "Overview")'
  prefs: []
  type: TYPE_NORMAL
- en: '[Code](#Code "Code")*  *# **Overview**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**‘math/rand’** package of golang contains an Intn function that can be used
    to generate a pseudo-random number between [0,n). The bracket at the end means
    that n is exclusive. This function can be utilized to generate a random password
    from a character set.'
  prefs: []
  type: TYPE_NORMAL
- en: To know more about what pseudo-random number means, check out this post – [https://golangbyexample.com/generate-random-number-golang](https://golangbyexample.com/generate-random-number-golang)
  prefs: []
  type: TYPE_NORMAL
- en: Below is the signature of this method. It takes input a number n and will return
    a number x in range 0<=x<n.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: In the code below we have first defined the character set from which to generate
    the password
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: The below code also handles the case where the password can have minimum requirement
    of a specific number of special character, numeric or uppercase character.
  prefs: []
  type: TYPE_NORMAL
- en: Also please note once the password is generated with required criteria we shuffle
    it at the end. For shuffling, we convert it to a rune array first. Please refer
    to this article to understand why for shuffling a string – [https://golangbyexample.com/shuffle-string-golang/](https://golangbyexample.com/shuffle-string-golang/)
  prefs: []
  type: TYPE_NORMAL
- en: '**Code**'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**Output**'
  prefs: []
  type: TYPE_NORMAL
- en: Output will be different on your machine
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '[go](https://golangbyexample.com/tag/go/)*   [golang](https://golangbyexample.com/tag/golang/)*   [random
    password](https://golangbyexample.com/tag/random-password/)*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
