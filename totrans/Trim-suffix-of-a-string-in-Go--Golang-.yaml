- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 类别：未分类
- en: 'date: 2024-10-13 06:12:40'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-10-13 06:12:40
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Trim suffix of a string in Go (Golang)
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Go语言中修剪字符串的后缀
- en: 来源：[https://golangbyexample.com/trim-suffix-string-golang/](https://golangbyexample.com/trim-suffix-string-golang/)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://golangbyexample.com/trim-suffix-string-golang/](https://golangbyexample.com/trim-suffix-string-golang/)
- en: Table of Contents
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 目录
- en: '**   [Overview](#Overview "Overview")'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**   [概述](#Overview "Overview")'
- en: '[Code:](#Code "Code:")*  *# **Overview**'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[代码：](#Code "Code:")*  *# **概述**'
- en: In GO string are UTF-8 encoded. **strings** package of GO provides a **TrimSuffix**
    method that can be used to remove a suffix string from the input string. If the
    input string doesn’t end with the given suffix, then the input string remains
    unchanged. Also, note that this function returns the copy of the string.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在GO中，字符串是UTF-8编码的。GO的**strings**包提供了一个**TrimSuffix**方法，可以用来从输入字符串中移除后缀字符串。如果输入字符串不以给定的后缀结尾，那么输入字符串将保持不变。同时，请注意该函数返回的是字符串的副本。
- en: Below is the signature of the function
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是该函数的签名
- en: '[PRE0]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Let’s look at the working code
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看工作代码
- en: '**Code:**'
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**代码：**'
- en: '[PRE1]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**Output:**'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出：**'
- en: '[PRE2]*'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE2]*'
