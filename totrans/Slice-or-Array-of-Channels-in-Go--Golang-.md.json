["```\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\n\tchannel1 := make(chan int)\n\tchannel2 := make(chan int)\n\tchannel3 := make(chan int)\n\n\t//First Way\n\tvar channels_first []chan int\n\tchannels_first = append(channels_first, channel1)\n\tchannels_first = append(channels_first, channel2)\n\tchannels_first = append(channels_first, channel3)\n\n\tfmt.Println(\"\\nOutput for First slice of channels\")\n\tfor _, c := range channels_first {\n\t\tfmt.Println(c)\n\t}\n\n\t//Second Way\n\tchannels_second := make([]chan int, 3)\n\tchannels_second[0] = channel1\n\tchannels_second[1] = channel2\n\tchannels_second[2] = channel3\n\n\tfmt.Println(\"\\nOutput for Second slice of channels\")\n\tfor _, c := range channels_second {\n\t\tfmt.Println(c)\n\t}\n}\n```", "```\nOutput for First slice of channels\n0xc000118000\n0xc000118060\n0xc0001180c0\n\nOutput for Second slice of channels\n0xc000118000\n0xc000118060\n0xc0001180c0\n```", "```\nchannel1 := make(chan int)\nchannel2 := make(chan int)\nchannel3 := make(chan int)\n```", "```\nvar channels_first []chan int\nchannels_first = append(channels_first, channel1)\nchannels_first = append(channels_first, channel2)\nchannels_first = append(channels_first, channel3)\n```", "```\nchannels_second := make([]chan int, 3)\nchannels_second[0] = channel1\nchannels_second[1] = channel2\nchannels_second[2] = channel3\n```", "```\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\tchannel1 := make(chan int)\n\tchannel2 := make(chan int)\n\tchannel3 := make(chan int)\n\n\tvar channels_first [3]chan int\n\n\tchannels_first[0] = channel1\n\tchannels_first[1] = channel2\n\tchannels_first[2] = channel3\n\n\tfmt.Println(\"Output for First Array of channels\")\n\tfor _, c := range channels_first {\n\t\tfmt.Println(c)\n\t}\n\n\tchannel_second := [3]chan int{\n\t\tchannel1,\n\t\tchannel2,\n\t\tchannel3,\n\t}\n\n\tfmt.Println(\"\\nOutput for Second Array of channels\")\n\tfor _, c := range channel_second {\n\t\tfmt.Println(c)\n\t}\n}\n```", "```\nOutput for First Array of channels\n0xc00008c060\n0xc00008c0c0\n0xc00008c120\n\nOutput for Second Array of channels\n0xc00008c060\n0xc00008c0c0\n0xc00008c120\n```", "```\nchannel1 := make(chan int)\nchannel2 := make(chan int)\nchannel3 := make(chan int)\n```", "```\nvar channels_first [3]chan int\nchannels_first[0] = channel1\nchannels_first[1] = channel2\nchannels_first[2] = channel3\n```", "```\nchannel_second := [3]chan int{\n\tchannel1,\n\tchannel2,\n\tchannel3,\n}\n```"]