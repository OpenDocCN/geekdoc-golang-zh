- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 类别：未分类
- en: 'date: 2024-10-13 06:00:21'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-10-13 06:00:21
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: 'Golang: Redis client example'
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Golang：Redis 客户端示例
- en: 来源：[https://golangbyexample.com/golang-redis-client-example/](https://golangbyexample.com/golang-redis-client-example/)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://golangbyexample.com/golang-redis-client-example/](https://golangbyexample.com/golang-redis-client-example/)
- en: First, we will write the Redis layer that will have a function to initialize
    the Redis client. The Redis client will only be created once and used throughout.
    In the below code, initialize function will initialize the Redis.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将编写 Redis 层，该层将具有一个初始化 Redis 客户端的功能。Redis 客户端只会被创建一次，并在整个过程中使用。在下面的代码中，初始化函数将初始化
    Redis。
- en: '[PRE0]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Test the Redis client layer
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 测试 Redis 客户端层
- en: '[PRE1]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**Output:**'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出：**'
- en: '[PRE2]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
