- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 分类：未分类
- en: 'date: 2024-10-13 06:47:53'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-10-13 06:47:53
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Program for Power set of a given array of integers in Go (Golang)
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用Go (Golang)编写的给定整数数组的幂集程序。
- en: 来源：[https://golangbyexample.com/power-set-array-golang/](https://golangbyexample.com/power-set-array-golang/)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://golangbyexample.com/power-set-array-golang/](https://golangbyexample.com/power-set-array-golang/)
- en: Table of Contents
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 目录
- en: '**   [Overview](#Overview "Overview")'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**[概述](#Overview "Overview")**'
- en: '[Program](#Program "Program")*  *## **Overview**'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[程序](#Program "Program")*  *## **概述**'
- en: An integer array is given which has all unique elements. The objective is to
    return the power set of that array
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 给定一个包含所有唯一元素的整数数组。目标是返回该数组的幂集。
- en: '[PRE0]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: If the number of elements in the given array is n, then the number of elements
    in the power set will be pow(2, n). Let’s say n is 3  then the number of elements
    in the power set will be pow(2, n)=8
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 如果给定数组中的元素数量为n，则幂集中的元素数量将为pow(2, n)。假设n为3，则幂集中的元素数量为pow(2, n)=8。
- en: Let’s say we take all binary conversion of numbers from 0 to (8-1) ie from 0
    to 7.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们对数字从0到(8-1)进行所有二进制转换，即从0到7。
- en: '[PRE1]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Each of the binary numbers above represents a power set
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 上面的每个二进制数字表示一个幂集。
- en: Eg
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 例如
- en: '[PRE2]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**Program**'
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**程序**'
- en: Here is the program for the same.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 这是相应的程序。
- en: '[PRE3]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '**Output**'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出**'
- en: '[PRE4]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '**Note:** Check out our Golang Advanced Tutorial. The tutorials in this series
    are elaborative and we have tried to cover all concepts with examples. This tutorial
    is for those who are looking to gain expertise and a solid understanding of golang
    - [Golang Advance Tutorial](https://golangbyexample.com/golang-comprehensive-tutorial/)'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意：** 请查看我们的Golang高级教程。本系列教程详尽，我们尽力涵盖所有概念和示例。本教程适合那些希望获得专业知识和扎实理解golang的人
    - [Golang高级教程](https://golangbyexample.com/golang-comprehensive-tutorial/)'
- en: Also if you are interested in understanding how all design patterns can be implemented
    in Golang. If yes, then this post is for you -[All Design Patterns Golang](https://golangbyexample.com/all-design-patterns-golang/)*
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有兴趣了解所有设计模式如何在Golang中实现。如果是的话，这篇文章适合你 - [所有设计模式 Golang](https://golangbyexample.com/all-design-patterns-golang/)*
