["```\nInput: 14\nOutput: 1\n```", "```\nInput: 17\nOutput: 3\n```", "```\npackage main\n\nimport \"fmt\"\n\nfunc findNthDigit(n int) int {\n\n\tnumDigits := 1\n\ttenIncrement := 1\n\n\tstart := 1\n\tcounter := 9 * tenIncrement * numDigits\n\n\tfor n > counter {\n\t\tn = n - counter\n\t\ttenIncrement = tenIncrement * 10\n\t\tnumDigits++\n\t\tstart = start * 10\n\t\tcounter = 9 * tenIncrement * numDigits\n\t}\n\n\treturn findNthDigitUtil(start, numDigits, n)\n\n}\n\nfunc findNthDigitUtil(start, numDigits, n int) int {\n\tposition := n % numDigits\n\tdigitWhichHasN := 0\n\tif position == 0 {\n\t\tdigitWhichHasN = start - 1 + n/numDigits\n\t\treturn digitWhichHasN % 10\n\t} else {\n\t\tdigitWhichHasN = start + n/numDigits\n\t\tpositionFromBehind := numDigits - position\n\t\tanswer := 0\n\t\tfor positionFromBehind >= 0 {\n\t\t\tanswer = digitWhichHasN % 10\n\t\t\tdigitWhichHasN = digitWhichHasN / 10\n\t\t\tpositionFromBehind--\n\t\t}\n\t\treturn answer\n\t}\n\n\treturn 0\n\n}\n\nfunc main() {\n\toutput := findNthDigit(14)\n\tfmt.Println(output)\n\n\toutput = findNthDigit(17)\n\tfmt.Println(output)\n} \n```", "```\n1\n3\n```"]