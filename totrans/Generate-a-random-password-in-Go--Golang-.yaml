- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-10-13 06:16:04'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: 2024-10-13 06:16:04'
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Generate a random password in Go (Golang)
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Go (Golang)中生成随机密码
- en: 来源：[https://golangbyexample.com/generate-random-password-golang/](https://golangbyexample.com/generate-random-password-golang/)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://golangbyexample.com/generate-random-password-golang/](https://golangbyexample.com/generate-random-password-golang/)
- en: Table of Contents
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 目录
- en: '**   [Overview](#Overview "Overview")'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**   [概述](#Overview "Overview")'
- en: '[Code](#Code "Code")*  *# **Overview**'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[代码](#Code "Code")*  *# **概述**'
- en: '**‘math/rand’** package of golang contains an Intn function that can be used
    to generate a pseudo-random number between [0,n). The bracket at the end means
    that n is exclusive. This function can be utilized to generate a random password
    from a character set.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**‘math/rand’** 包含一个Intn函数，可用于生成[0,n)之间的伪随机数。末尾的括号表示n是不包含的。这个函数可以用来从字符集生成随机密码。'
- en: To know more about what pseudo-random number means, check out this post – [https://golangbyexample.com/generate-random-number-golang](https://golangbyexample.com/generate-random-number-golang)
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解伪随机数的含义，请查看这篇文章 – [https://golangbyexample.com/generate-random-number-golang](https://golangbyexample.com/generate-random-number-golang)
- en: Below is the signature of this method. It takes input a number n and will return
    a number x in range 0<=x<n.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是该方法的签名。它接受一个数字n作为输入，并返回一个范围为0<=x<n的数字。
- en: '[PRE0]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: In the code below we have first defined the character set from which to generate
    the password
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的代码中，我们首先定义了生成密码的字符集
- en: '[PRE1]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The below code also handles the case where the password can have minimum requirement
    of a specific number of special character, numeric or uppercase character.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码也处理密码必须包含特定数量的特殊字符、数字或大写字母的情况。
- en: Also please note once the password is generated with required criteria we shuffle
    it at the end. For shuffling, we convert it to a rune array first. Please refer
    to this article to understand why for shuffling a string – [https://golangbyexample.com/shuffle-string-golang/](https://golangbyexample.com/shuffle-string-golang/)
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 还请注意，一旦生成符合要求的密码，我们会在最后对其进行洗牌。为了洗牌，我们首先将其转换为一个rune数组。请参阅这篇文章以了解为什么需要洗牌字符串 –
    [https://golangbyexample.com/shuffle-string-golang/](https://golangbyexample.com/shuffle-string-golang/)
- en: '**Code**'
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**代码**'
- en: '[PRE2]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**Output**'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出**'
- en: Output will be different on your machine
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 输出在你的机器上会有所不同
- en: '[PRE3]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[go](https://golangbyexample.com/tag/go/)*   [golang](https://golangbyexample.com/tag/golang/)*   [random
    password](https://golangbyexample.com/tag/random-password/)*'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[go](https://golangbyexample.com/tag/go/)*   [golang](https://golangbyexample.com/tag/golang/)*   [随机密码](https://golangbyexample.com/tag/random-password/)*'
