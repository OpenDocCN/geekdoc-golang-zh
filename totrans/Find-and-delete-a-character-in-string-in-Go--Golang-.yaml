- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-10-13 06:13:45'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: Find and delete a character in string in Go (Golang)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://golangbyexample.com/go-find-delete-character-in-string/](https://golangbyexample.com/go-find-delete-character-in-string/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Table of Contents
  prefs: []
  type: TYPE_NORMAL
- en: '**   [Overview](#Overview "Overview")'
  prefs: []
  type: TYPE_NORMAL
- en: '[Code:](#Code "Code:")*  *# **Overview**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**strings** package of GO provides a **ReplaceAll** method that can be used
    to replace all non-overlapping instances of a given substring with a new substring.
    We can use this method to delete a character by providing the replacement of the
    character to be deleted as an empty string'
  prefs: []
  type: TYPE_NORMAL
- en: Below is the signature of the function. The function will replace all non-overlapping
    instances of **old** with **new** in string **s**. To delete a character we can
    supply that character as **old** and **new** as an empty string
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Let’s look at the working code
  prefs: []
  type: TYPE_NORMAL
- en: '**Code:**'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '**Output:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '[golang](https://golangbyexample.com/tag/golang/)*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
