["```\nInput: [1, 4, 5, 6]\nTarget Element: 4\nOutput: 1\n\nTarget element 4 is present at index 1\n```", "```\nInput: [1, 2, 3]\nTarget Element: 4\nOutput: -1\n\nTarget element 4 is present at index 1\n```", "```\npackage main\n\nimport \"fmt\"\n\nfunc search(nums []int, target int) int {\n\treturn binarySearch(nums, 0, len(nums)-1, target)\n}\n\nfunc binarySearch(nums []int, start, end, target int) int {\n\tif start > end {\n\t\treturn -1\n\t}\n\tmid := (start + end) / 2\n\n\tif nums[mid] == target {\n\t\treturn mid\n\t}\n\n\tif target < nums[mid] {\n\t\treturn binarySearch(nums, start, mid-1, target)\n\t} else {\n\t\treturn binarySearch(nums, mid+1, end, target)\n\t}\n}\n\nfunc main() {\n\tindex := search([]int{1, 4, 5, 6}, 4)\n\tfmt.Println(index)\n\n\tindex = search([]int{1, 2, 3, 6}, 4)\n\tfmt.Println(index)\n}\n```", "```\n1\n-1\n```"]