- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-10-13 06:21:22'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: Scope of a variable in Go (Golang)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://golangbyexample.com/scope-of-variable-go/](https://golangbyexample.com/scope-of-variable-go/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**Scope of a Variable (Local and Global Variable)**'
  prefs: []
  type: TYPE_NORMAL
- en: A variable declaration can be done at the package level or a function level
    or a block level. The scope of a variable defines from where that variable can
    be accessed and also the lifetime of the variable. Golang variables can be divided
    into two categories based on the scope.
  prefs: []
  type: TYPE_NORMAL
- en: Local Variable
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Global Variable
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Local Variable:**'
  prefs: []
  type: TYPE_NORMAL
- en: Local variables are variables which are defined within a block or a function
    level
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An example of a block is a for loop or a range loop etc.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: These variables are only be accessed from within their block or function
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: These variables only live till the end of the block or a function in which they
    are declared. After that, they are Garbage Collected.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A local once declared cannot be redeclared within the same block or function.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: See below example
  prefs: []
  type: TYPE_NORMAL
- en: Local or loop variable **i** is not available after the for loop
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Similarly local variable **aaa** is not available outside the function in which
    it is declared.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hence below program will raise a compiler error
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '**Code:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '**Global Variable**'
  prefs: []
  type: TYPE_NORMAL
- en: A variable will be global within a package if it is declared at the top of a
    file outside the scope of any function or block.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If this variable name starts with a lowercase letter then it can be accessed
    from within the package which contains this variable definition.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If the variable name starts with an uppercase letter then it can be accessed
    from an outside different package other than which it is declared.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Global variable are available throughout the lifetime of a program
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For example, in the below program variable aaa will be a global variable available
    throughout the main package. It will be available in any function inside the **main**
    package. Do note that the variable name will not be available outside **main**
    package as its name starts with a lowercase letter.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**Output:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Important Points
  prefs: []
  type: TYPE_NORMAL
- en: A variable declared within an inner scope having the same name as variable declared
    in the outer scope will shadow the variable in the outer scope.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '**Output:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '[go](https://golangbyexample.com/tag/go/)*   [golang](https://golangbyexample.com/tag/golang/)*   [scope](https://golangbyexample.com/tag/scope/)*   [variable](https://golangbyexample.com/tag/variable/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
