["```\ntype Header map[string][]string\n```", "```\nContent-Type\nAccept-Encoding\n```", "```\ntype Response interface {\n    Header() Header\n    ...\n}\n```", "```\nUser-Agent: application/json\nFoo: bar1\nFoo: bar2\n```", "```\nfunc (h Header) Values(key string) []string\n```", "```\nw.Header.Values(key)\n```", "```\nfunc (h Header) Get(key string) string\n```", "```\nw.Header.Get(key)\n```", "```\nmap[Accept:[*/*] Content-Type:[application/json] Foo:[bar1 bar2]\n```", "```\n[application/json]\n```", "```\n[bar1 bar2]\n```", "```\npackage main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"time\"\n)\n\nfunc main() {\n\tcall(\"https://google.com\", \"GET\")\n}\n\nfunc call(url, method string) error {\n\tclient := &http.Client{\n\t\tTimeout: time.Second * 10,\n\t}\n\treq, err := http.NewRequest(method, url, nil)\n\tif err != nil {\n\t\treturn fmt.Errorf(\"Got error %s\", err.Error())\n\t}\n\tres, err := client.Do(req)\n\tif err != nil {\n\t\treturn fmt.Errorf(\"Got error %s\", err.Error())\n\t}\n\tdefer res.Body.Close()\n\n\tcontentTypeValues := res.Header.Values(\"content-type\")\n\tfmt.Printf(\"res.Header.Values(\\\"content-type\\\"):: %s\\n\\n\", contentTypeValues)\n\n\tcontentType := res.Header.Get(\"content-type\")\n\tfmt.Printf(\"res.Header.Get(\\\"content-type\\\"):: %s\\n\\n\", contentType)\n\n\theaders := res.Header\n\tfmt.Printf(\"res.Headers:: %s\\n\\n\", headers)\n\tfmt.Printf(\"res.Headers[\\\"Content-Type\\\"]:: %s\\n\\n\", headers[\"Content-Type\"])\n\treturn nil\n\n}\n```", "```\nres.Header.Values(\"content-type\"):: \n\nres.Header.Get(\"content-type\"):: text/html; charset=ISO-8859-1\n\nres.Headers:: map[Alt-Svc:[h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"] Cache-Control:[private, max-age=0] Content-Type: Date:[Thu, 10 Dec 2020 16:38:03 GMT] Expires:[-1] P3p:[CP=\"This is not a P3P policy! See g.co/p3phelp for more info.\"] Server:[gws] Set-Cookie:[1P_JAR=2020-12-10-16; expires=Sat, 09-Jan-2021 16:38:03 GMT; path=/; domain=.google.com; Secure NID=204=w6zf-xFyVywx7QaClDZuQ5N-Yc-4HqKWBS-JXWp2Tat9kmq0BRsanM35PJHiM2iEn4TbP2HcTUd0KkIuMuIW7xFewD5un2_mc0O4fm2IXzrQyRmPWHJSeQJUUVb0-_lIfJgSnGmJm2MptRsd2egrPsbZJQBZWd97o7KlFBI3CIE; expires=Fri, 11-Jun-2021 16:38:03 GMT; path=/; domain=.google.com; HttpOnly] X-Frame-Options:[SAMEORIGIN] X-Xss-Protection:[0]]\n\nres.Headers[\"Content-Type\"]:: \n```", "```\nres.Header.Values(\"content-type\"):\n```", "````while    ``` res.Header.Get(\"content-type\") ```    outputs    ``` text/html; charset=ISO-8859-1 ```    Also    ``` res.Headers ```    outputs the entire header map. Notice that each key is in the canonical format    ``` map[Alt-Svc:[h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"] Cache-Control:[private, max-age=0] Content-Type: Date:[Thu, 10 Dec 2020 16:38:03 GMT] Expires:[-1] P3p:[CP=\"This is not a P3P policy! See g.co/p3phelp for more info.\"] Server:[gws] Set-Cookie:[1P_JAR=2020-12-10-16; expires=Sat, 09-Jan-2021 16:38:03 GMT; path=/; domain=.google.com; Secure NID=204=w6zf-xFyVywx7QaClDZuQ5N-Yc-4HqKWBS-JXWp2Tat9kmq0BRsanM35PJHiM2iEn4TbP2HcTUd0KkIuMuIW7xFewD5un2_mc0O4fm2IXzrQyRmPWHJSeQJUUVb0-_lIfJgSnGmJm2MptRsd2egrPsbZJQBZWd97o7KlFBI3CIE; expires=Fri, 11-Jun-2021 16:38:03 GMT; path=/; domain=.google.com; HttpOnly] X-Frame-Options:[SAMEORIGIN] X-Xss-Protection:[0]] ```  *   [golang](https://golangbyexample.com/tag/golang/)````"]