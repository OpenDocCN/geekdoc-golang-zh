["```\npackage main\n\nimport \"fmt\"\n\n//Person struct\ntype Person struct {\n    Name string\n    age  int\n}\n\n//GetAge of person\nfunc (p *Person) GetAge() int {\n    return p.age\n}\n\nfunc (p *Person) getName() string {\n    return p.Name\n}\n\ntype company struct {\n}\n```", "```\npackage main\n\nimport \"fmt\"\n\n//Test function\nfunc Test() {\n    //STRUCTURE IDENTIFIER\n    p := &Person{\n        Name: \"test\",\n        age:  21,\n    }\n    fmt.Println(p)\n    c := &company{}\n    fmt.Println(c)\n\n    //STRUCTURE'S FIELDS\n    fmt.Println(p.Name)\n    fmt.Println(p.age)\n\n    //STRUCTURE'S METHOD\n    fmt.Println(p.GetAge())\n    fmt.Println(p.getName())\n\n}\n```", "```\n&{test 21}\n&{}\ntest\n21\n21\ntest\n```", "```\npackage model\n\n//Person struct\ntype Person struct {\n\tName string\n\tage  int\n}\n\nfunc (p *Person) GetAge() int {\n    return p.age\n}\n\nfunc (p *Person) getName() string {\n    return p.Name\n}\n\ntype company struct {\n}\n```", "```\npackage main\n\nimport (\n\t\"fmt\"\n        //This will path of your model package\n\t\"<somepath>/model\"\n)\n\n//Test function\nfunc main() {\n\t//STRUCTURE IDENTIFIER\n\tp := &model.Person{\n\t\tName: \"test\",\n\t\tage:  21,\n\t}\n\tfmt.Println(p)\n\tc := &model.company{}\n\tfmt.Println(c)\n\n\t//STRUCTURE'S FIELDS\n\tfmt.Println(p.Name)\n\tfmt.Println(p.age)\n\n        //STRUCTURE'S METHOD\n        fmt.Println(p.GetAge())\n        fmt.Println(p.getName())\n\n}</somepath>\n```", "```\nunknown field 'age' in struct literal of type model.Person\ncannot refer to unexported name model.company\nundefined: model.company\np.age undefined (cannot refer to unexported field or method age)\np.getName undefined (cannot refer to unexported field or method model.(*Person).getName)\n```"]