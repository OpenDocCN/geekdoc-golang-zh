- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 分类：未分类
- en: 'date: 2024-10-13 06:12:48'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-10-13 06:12:48
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Count instances of substring in a string in Go (Golang)
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Go（Golang）中计算字符串中子字符串的实例
- en: 来源：[https://golangbyexample.com/instances-substring-string-go/](https://golangbyexample.com/instances-substring-string-go/)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://golangbyexample.com/instances-substring-string-go/](https://golangbyexample.com/instances-substring-string-go/)
- en: Table of Contents
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 目录
- en: '**   [Overview](#Overview "Overview")'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**   [概述](#Overview "概述")**'
- en: '[Code:](#Code " Code:")*  *# **Overview**'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[代码：](#Code "Code:")*  *# **概述**'
- en: In GO string are UTF-8 encoded. **strings** package of GO provides a **Count**
    method that can be used to get the number of non-overlapping instances of a substring
    in a particular string.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在GO中，字符串采用UTF-8编码。GO的**strings**包提供了一个**Count**方法，可以用来获取特定字符串中非重叠子字符串的数量。
- en: Below is the signature of the function
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是该函数的签名
- en: '[PRE0]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Also note that if the **substr** supplied to the function is an empty string,
    then return value will be 1+ count of Unicode Code points in the given string.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 另外请注意，如果传递给函数的**substr**是一个空字符串，则返回值将为1加上给定字符串中的Unicode字符点数。
- en: Let’s look at the working code
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一下工作代码
- en: '**Code:**'
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**代码：**'
- en: '[PRE1]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**Output:**'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出：**'
- en: '[PRE2]*'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE2]*'
