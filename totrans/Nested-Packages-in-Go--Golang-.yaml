- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-10-13 06:30:40'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: Nested Packages in Go (Golang)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://golangbyexample.com/nested-packages-golang/](https://golangbyexample.com/nested-packages-golang/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Table of Contents
  prefs: []
  type: TYPE_NORMAL
- en: '**   [Overview](#Overview "Overview")'
  prefs: []
  type: TYPE_NORMAL
- en: '[Example](#Example "Example")*  *# **Overview**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In GO it is possible to create nested packages.  Nested packages are those packages
    that lie within another package. Let’s see an example
  prefs: []
  type: TYPE_NORMAL
- en: '**Example**'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Create a directory named **learn**. Let’s create a module with import path as
    **“sample.com/learn”** in the learn directory.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: It will create a go.mod file
  prefs: []
  type: TYPE_NORMAL
- en: '**go.mod**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Let’s create below files and directories
  prefs: []
  type: TYPE_NORMAL
- en: learn/main.go
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: learn/math/math.go
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: learn/math/advanced/advanced.go
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You can see that **advanced** is a nested package inside the **math** package.
  prefs: []
  type: TYPE_NORMAL
- en: '**learn/math/math.go**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**learn/math/advanced/advanced.go**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '**learn/main.go**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Let’s run this program
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Points to note about above program
  prefs: []
  type: TYPE_NORMAL
- en: We imported the **advanced** package in main.go with full qualified path i.e, 
    **import “sample.com/learn/math/advanced”**
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Square** function is referred to using **advanced** package i.e, **advanced.Square(2)**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[go](https://golangbyexample.com/tag/go/)*   [golang](https://golangbyexample.com/tag/golang/)*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
