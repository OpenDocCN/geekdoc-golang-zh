["```\ntype Header map[string][]string\n```", "```\nContent-Type\nAccept-Encoding\n```", "```\ncontent-type: applcation/json\nfoo: bar1\nfoo: bar2\n```", "```\nContent-Type: applcation/json\nFoo: bar1\nFoo: bar2\n```", "```\ncontent-type: applcation/json\nfoo: bar1\nfoo: bar2\n```", "```\ntype ResponseWriter interface {\n    Header() Header\n    ...\n}\n```", "```\nfunc (h Header) Add(key, value string)\n```", "```\nw.Header().Add(\"foo\", \"bar1\")\nw.Header().Add(\"foo\", \"bar2\")\n```", "```\nfunc (h Header) Set(key, value string)\n```", "```\npackage main\n\nimport (\n\t\"encoding/json\"\n\t\"net/http\"\n)\n\nfunc main() {\n\thandler := http.HandlerFunc(handleRequest)\n\thttp.Handle(\"/example\", handler)\n\thttp.ListenAndServe(\":8085\", nil)\n}\n\nfunc handleRequest(w http.ResponseWriter, r *http.Request) {\n\tw.Header().Set(\"content-type\", \"application/json\")\n\n\tw.Header().Add(\"foo\", \"bar1\")\n\tw.Header().Add(\"foo\", \"bar2\")\n\n\tresp := make(map[string]string)\n\tresp[\"message\"] = \"success\"\n\tjsonResp, _ := json.Marshal(resp)\n\tw.Write(jsonResp)\n}\n```", "```\nw.Header().Set(\"content-type\", \"application/json\")\n```", "```\nw.Header().Add(\"foo\", \"bar1\")\nw.Header().Add(\"foo\", \"bar2\")\n```", "```\ncurl -v -X POST http://localhost:8085/example\n```", "```\n< HTTP/1.1 200 OK\n< Content-Type: application/json\n< Foo: bar1\n< Foo: bar2\n< Content-Length: 21\n< \n* Connection #0 to host localhost left intact\n{\"message\":\"success\"}\n```"]