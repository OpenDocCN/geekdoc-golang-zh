["```\nInput: ()(()\nOutput: 2\n\nInput: ()()())\nOutput: 6 \n```", "```\npackage main\n\nimport (\n\t\"fmt\"\n\t\"sync\"\n)\n\nfunc main() {\n\tvalid := longestValidParentheses(\"()(()\")\n\tfmt.Println(valid)\n\n\tvalid = longestValidParentheses(\"()()())\")\n\tfmt.Println(valid)\n\n\tvalid = longestValidParentheses(\"(()\")\n\tfmt.Println(valid)\n\n\tvalid = longestValidParentheses(\"(()(()\")\n\tfmt.Println(valid)\n\n\tvalid = longestValidParentheses(\"()()\")\n\tfmt.Println(valid)\n\n\tvalid = longestValidParentheses(\"(()()\")\n\tfmt.Println(valid)\n\n\tvalid = longestValidParentheses(\"((()))(()\")\n\tfmt.Println(valid)\n\n\tvalid = longestValidParentheses(\")(((((()())()()))()(()))(\")\n\tfmt.Println(valid)\n\n\tvalid = longestValidParentheses(\"\")\n\tfmt.Println(valid)\n\n}\n\ntype customStack struct {\n\tstack []int\n\tlock  sync.RWMutex\n}\n\nfunc (c *customStack) Push(name int) {\n\tc.lock.Lock()\n\tdefer c.lock.Unlock()\n\tc.stack = append(c.stack, name)\n}\n\nfunc (c *customStack) Pop() (int, error) {\n\tlen := len(c.stack)\n\tif len > 0 {\n\t\tc.lock.Lock()\n\t\tdefer c.lock.Unlock()\n\t\tval := c.stack[len-1]\n\t\tc.stack = c.stack[:len-1]\n\t\treturn val, nil\n\t}\n\treturn 0, fmt.Errorf(\"Pop Error: Stack is empty\")\n}\n\nfunc (c *customStack) Front() (int, error) {\n\tlen := len(c.stack)\n\tif len > 0 {\n\t\tc.lock.Lock()\n\t\tdefer c.lock.Unlock()\n\t\treturn c.stack[len-1], nil\n\t}\n\treturn 0, fmt.Errorf(\"Peep Error: Stack is empty\")\n}\n\nfunc (c *customStack) Size() int {\n\treturn len(c.stack)\n}\n\nfunc (c *customStack) Empty() bool {\n\treturn len(c.stack) == 0\n}\n\nfunc (c *customStack) Flush() {\n\tc.stack = []int{}\n}\n\nfunc longestValidParentheses(s string) int {\n\n\tcustomStack := &customStack{\n\t\tstack: []int{},\n\t}\n\n\tlongestValidParenthesisLength := 0\n\tcurrentValidParenthesisLength := 0\n\tcustomStack.Push(-1)\n\tfor i, val := range s {\n\n\t\tif val == '(' {\n\t\t\tcustomStack.Push(i)\n\t\t} else if val == ')' {\n\t\t\tcustomStack.Pop()\n\t\t\tif customStack.Size() == 0 {\n\t\t\t\tcustomStack.Push(i)\n\t\t\t} else {\n\t\t\t\tindex, _ := customStack.Front()\n\t\t\t\tcurrentValidParenthesisLength = i - index\n\t\t\t\tif currentValidParenthesisLength > longestValidParenthesisLength {\n\t\t\t\t\tlongestValidParenthesisLength = currentValidParenthesisLength\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tif currentValidParenthesisLength > longestValidParenthesisLength {\n\t\tlongestValidParenthesisLength = currentValidParenthesisLength\n\t}\n\n\treturn longestValidParenthesisLength\n}\n```", "```\n2\n6\n2\n2\n4\n4\n6\n22\n0\n```"]