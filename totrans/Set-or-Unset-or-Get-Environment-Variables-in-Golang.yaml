- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-10-13 06:09:29'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: Set or Unset or Get Environment Variables in Golang
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://golangbyexample.com/set-unset-get-env-variable-golang/](https://golangbyexample.com/set-unset-get-env-variable-golang/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Table of Contents
  prefs: []
  type: TYPE_NORMAL
- en: '**   [Overview](#Overview "Overview")'
  prefs: []
  type: TYPE_NORMAL
- en: '[Setting an env value](#Setting_an_env_value "Setting an env value")'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Get an env value](#Get_an_env_value "Get an env value")'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Unset an env value](#Unset_an_env_value "Unset an env value")'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Lookup for an env variable](#Lookup_for_an_env_variable "Lookup for an env
    variable")'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Code:](#Code "Code:")*  *# **Overview**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**os** package provides a couple of utility methods related to playing around
    env variables in Go.'
  prefs: []
  type: TYPE_NORMAL
- en: Setting an env value
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Get an env value
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The value returned by the **Getenv()** function will be empty if that env variable
    is not present. To differentiate between an unset and empty env variable use LookupEnv()
    function which an additional boolean indicating if the env variable was present
    or not.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Unset an env value
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Lookup for an env variable
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As evident from the below signature, LookupEnv returns additional boolean.
  prefs: []
  type: TYPE_NORMAL
- en: If the environment variable represented by the **key** is present, then its
    value is returned and the bool returned is true.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If the environment variable represented by the key is not present, then the
    value is empty and the bool returned is false.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '**Code:**'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '**Output:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]*'
  prefs: []
  type: TYPE_NORMAL
