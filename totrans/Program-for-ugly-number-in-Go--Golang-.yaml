- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 类别：未分类
- en: 'date: 2024-10-13 06:51:39'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-10-13 06:51:39
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Program for ugly number in Go (Golang)
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Go (Golang) 中的丑数程序
- en: 来源：[https://golangbyexample.com/ugly-number-golang/](https://golangbyexample.com/ugly-number-golang/)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://golangbyexample.com/ugly-number-golang/](https://golangbyexample.com/ugly-number-golang/)
- en: Table of Contents
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 目录
- en: '**   [Overview](#Overview "Overview")'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**   [概述](#Overview "Overview")'
- en: '[Program](#Program "Program")*  *# **Overview**'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[程序](#Program "Program")*  *# **概述**'
- en: An ugly number is a number whose prime factors are limited to 2,3 and 5.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 丑数是其质因数仅限于 2、3 和 5 的数字。
- en: Given a number, n return true if it is an ugly number otherwise return false.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 给定一个数字 n，如果它是一个丑数则返回 true，否则返回 false。
- en: '**Example 1**'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**示例 1**'
- en: '[PRE0]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '**Example 2**'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**示例 2**'
- en: '[PRE1]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Idea is to
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 思路是
- en: While the number is a factor of two keep dividing the number by 2
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当数字是 2 的因数时，不断将数字除以 2。
- en: While the number is a factor of three keep dividing the number by 3
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当数字是 3 的因数时，不断将数字除以 3。
- en: While the number is a factory of five keep dividing the number by 5
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当数字是 5 的因数时，不断将数字除以 5。
- en: In the end, if the number is equal to 1 then return true otherwise return false
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，如果数字等于 1，则返回 true，否则返回 false。
- en: '**Program**'
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**程序**'
- en: Below is the program for the same
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是相同的程序
- en: '[PRE2]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**Output**'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出**'
- en: '[PRE3]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '**Note:** Check out our Golang Advanced Tutorial. The tutorials in this series
    are elaborative and we have tried to cover all concepts with examples. This tutorial
    is for those who are looking to gain expertise and a solid understanding of golang
    – [Golang Advance Tutorial](https://golangbyexample.com/golang-comprehensive-tutorial/)'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意：** 请查看我们的 Golang 高级教程。本系列教程内容详尽，我们尽量涵盖所有概念并配有示例。此教程适合那些希望获得专业知识和对 Golang
    有深入理解的人—— [Golang 高级教程](https://golangbyexample.com/golang-comprehensive-tutorial/)'
- en: Also if you are interested in understanding how all design patterns can be implemented
    in Golang. If yes, then this post is for you – [All Design Patterns Golang](https://golangbyexample.com/all-design-patterns-golang/)
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你对了解所有设计模式如何在 Golang 中实现感兴趣。如果是的话，这篇文章适合你—— [所有设计模式 Golang](https://golangbyexample.com/all-design-patterns-golang/)
- en: Also, check out our system design tutorial series here – [System Design Tutorial
    Series](https://techbyexample.com/system-design-questions/)*
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，请查看我们的系统设计教程系列—— [系统设计教程系列](https://techbyexample.com/system-design-questions/)*
