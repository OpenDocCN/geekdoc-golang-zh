["```\nInput: \"simple\"\nOutput: \"sempli\"\n```", "```\nInput: \"complex\"\nOutput: \"cemplox\"\n```", "```\npackage main\n\nimport \"fmt\"\n\nfunc reverseVowels(s string) string {\n\truneS := []rune(s)\n\tlenS := len(runeS)\n\n\tfor i, j := 0, lenS-1; i < j; {\n\t\tfor i < j {\n\t\t\tif !vowel(runeS[i]) {\n\t\t\t\ti++\n\t\t\t} else {\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\tif i == j {\n\t\t\tbreak\n\t\t}\n\t\tfor i < j {\n\t\t\tif !vowel(runeS[j]) {\n\t\t\t\tj--\n\t\t\t} else {\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\n\t\tif i == j {\n\t\t\tbreak\n\t\t}\n\n\t\truneS[i], runeS[j] = runeS[j], runeS[i]\n\t\ti++\n\t\tj--\n\n\t}\n\n\treturn string(runeS)\n\n}\n\nfunc vowel(s rune) bool {\n\tif s == 'a' || s == 'e' || s == 'i' || s == 'o' || s == 'u' {\n\t\treturn true\n\t}\n\n\tif s == 'A' || s == 'E' || s == 'I' || s == 'O' || s == 'U' {\n\t\treturn true\n\t}\n\n\treturn false\n}\n\nfunc main() {\n\toutput := reverseVowels(\"simple\")\n\tfmt.Println(output)\n\n\toutput = reverseVowels(\"complex\")\n\tfmt.Println(output)\n\n}\n```", "```\nsempli\ncemplox\n```"]