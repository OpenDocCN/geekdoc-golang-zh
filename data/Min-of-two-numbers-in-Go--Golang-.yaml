- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-10-13 06:15:42'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: 2024-10-13 06:15:42'
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Min of two numbers in Go (Golang)
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Go（Golang）中的两个数字的最小值
- en: 来源：[https://golangbyexample.com/min-of-two-numbers-golang/](https://golangbyexample.com/min-of-two-numbers-golang/)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://golangbyexample.com/min-of-two-numbers-golang/](https://golangbyexample.com/min-of-two-numbers-golang/)
- en: Table of Contents
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 目录
- en: '**   [Overview](#Overview "Overview")'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**   [概述](#Overview "Overview")'
- en: '[Code:](#Code "Code:")*  *# **Overview**'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[代码：](#Code "Code:")*  *# **概述**'
- en: '**math** package of GO provides a **Min** method that can be used to get the
    minimum of two numbers. The'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**math** 包提供了一个 **Min** 方法，可以用来获取两个数字的最小值。该'
- en: Below is the signature of the function. It takes input two float numbers and
    returns a float.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是函数的签名。它接受两个浮点数作为输入并返回一个浮点数。
- en: '[PRE0]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Also some special cases of **Min** function are
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，一些 **Min** 函数的特殊情况是
- en: Min(x, +Inf) = Min(+Inf, x) = +Inf
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Min(x, +Inf) = Min(+Inf, x) = +Inf
- en: Min(x, NaN) = Min(NaN, x) = NaN
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Min(x, NaN) = Min(NaN, x) = NaN
- en: Min(+0, ±0) = Min(±0, +0) = +0
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Min(+0, ±0) = Min(±0, +0) = +0
- en: Min(-0, -0) = -0
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Min(-0, -0) = -0
- en: '**Code:**'
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**代码：**'
- en: '[PRE1]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**Output:**'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出：**'
- en: '[PRE2]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[go](https://golangbyexample.com/tag/go/)*   [golang](https://golangbyexample.com/tag/golang/)*   [math](https://golangbyexample.com/tag/math/)*   [min](https://golangbyexample.com/tag/min/)*   [minimum](https://golangbyexample.com/tag/minimum/)*'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[go](https://golangbyexample.com/tag/go/)*   [golang](https://golangbyexample.com/tag/golang/)*   [math](https://golangbyexample.com/tag/math/)*   [min](https://golangbyexample.com/tag/min/)*   [minimum](https://golangbyexample.com/tag/minimum/)*'
