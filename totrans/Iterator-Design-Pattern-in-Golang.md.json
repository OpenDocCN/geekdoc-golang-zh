["```\npackage main\n\ntype collection interface {\n    createIterator() iterator\n}\n```", "```\npackage main\n\ntype userCollection struct {\n    users []*user\n}\n\nfunc (u *userCollection) createIterator() iterator {\n    return &userIterator{\n        users: u.users,\n    }\n}\n```", "```\npackage main\n\ntype iterator interface {\n    hasNext() bool\n    getNext() *user\n}\n```", "```\npackage main\n\ntype userIterator struct {\n    index int\n    users []*user\n}\n\nfunc (u *userIterator) hasNext() bool {\n    if u.index < len(u.users) {\n        return true\n    }\n    return false\n}\n\nfunc (u *userIterator) getNext() *user {\n    if u.hasNext() {\n        user := u.users[u.index]\n        u.index++\n        return user\n    }\n    return nil\n}\n```", "```\npackage main\n\ntype user struct {\n    name string\n    age  int\n}\n```", "```\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n    user1 := &user{\n        name: \"a\",\n        age:  30,\n    }\n    user2 := &user{\n        name: \"b\",\n        age:  20,\n    }\n    userCollection := &userCollection{\n        users: []*user{user1, user2},\n    }\n    iterator := userCollection.createIterator()\n    for iterator.hasNext() {\n        user := iterator.getNext()\n        fmt.Printf(\"User is %+v\\n\", user)\n    }\n}\n```", "```\nUser is &{name:a age:30}\nUser is &{name:b age:20}\n```", "```\npackage main\n\nimport \"fmt\"\n\ntype collection interface {\n    createIterator() iterator\n}\n\ntype userCollection struct {\n    users []*user\n}\n\nfunc (u *userCollection) createIterator() iterator {\n    return &userIterator{\n        users: u.users,\n    }\n}\n\ntype iterator interface {\n    hasNext() bool\n    getNext() *user\n}\n\ntype userIterator struct {\n    index int\n    users []*user\n}\n\nfunc (u *userIterator) hasNext() bool {\n    if u.index < len(u.users) {\n        return true\n    }\n    return false\n}\n\nfunc (u *userIterator) getNext() *user {\n    if u.hasNext() {\n        user := u.users[u.index]\n        u.index++\n        return user\n    }\n    return nil\n}\n\ntype user struct {\n    name string\n    age  int\n}\n\nfunc main() {\n    user1 := &user{\n        name: \"a\",\n        age:  30,\n    }\n    user2 := &user{\n        name: \"b\",\n        age:  20,\n    }\n    userCollection := &userCollection{\n        users: []*user{user1, user2},\n    }\n    iterator := userCollection.createIterator()\n    for iterator.hasNext() {\n        user := iterator.getNext()\n        fmt.Printf(\"User is %+v\\n\", user)\n    }\n}\n```", "```\nUser is &{name:a age:30}\nUser is &{name:b age:20}\n```"]