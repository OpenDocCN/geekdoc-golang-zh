- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-10-13 06:01:35'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: Read a large file Line by Line in Go (Golang)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://golangbyexample.com/read-large-file-line-by-line-go/](https://golangbyexample.com/read-large-file-line-by-line-go/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: When it comes to reading large files, obviously we don’t want to load the entire
    file in memory. bufio package in golang comes to the rescue when reading large
    files. Let’s say we have a sample.txt file with below contents
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Here is the program:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '**Output:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Note however bufio.Scanner has max buffer size 64*1024 bytes which means in
    case you file has any line greater than the size of 64*1024, then it will give
    the error
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '[file](https://golangbyexample.com/tag/file/)*   [go](https://golangbyexample.com/tag/go/)*   [largefile](https://golangbyexample.com/tag/largefile/)*   [line
    by line](https://golangbyexample.com/tag/line-by-line/)*   [linebyline](https://golangbyexample.com/tag/linebyline/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
