- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 分类：未分类
- en: 'date: 2024-10-13 06:13:01'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-10-13 06:13:01
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Replace some instances of a substring with another in Go (Golang)
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Go (Golang)中用另一个子字符串替换一些子字符串的实例
- en: 来源：[https://golangbyexample.com/replace-some-instances-substring-go/](https://golangbyexample.com/replace-some-instances-substring-go/)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://golangbyexample.com/replace-some-instances-substring-go/](https://golangbyexample.com/replace-some-instances-substring-go/)
- en: Table of Contents
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 目录
- en: '**   [Overview](#Overview "Overview")'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**   [概述](#Overview "概述")'
- en: '[Code:](#Code "Code:")*  *# **Overview**'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[代码：](#Code "代码：")*  *# **概述**'
- en: In GO string are UTF-8 encoded. **strings** package of GO provides a **Replace**
    method that can be used to replace some non-overlapping instances of a given substring
    with a new substring. It returns a copy of the string
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在GO中，字符串是UTF-8编码的。GO的**strings**包提供了一个**Replace**方法，可用于将给定子字符串的一些不重叠实例替换为新子字符串。它返回字符串的副本。
- en: Below is the signature of the function.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是函数的签名。
- en: '[PRE0]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The function will replace all non-overlapping instances of **old** with **new**
    in string **s**.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 该函数将在字符串**s**中将所有不重叠的**old**实例替换为**new**。
- en: If **old** is empty then it inserts **new** between it each valid UTF-8 sequence
    of bytes in the string **s**.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果**old**为空，则在字符串**s**中的每个有效UTF-8字节序列之间插入**new**。
- en: If **n** is negative then all instances of **old** will be replaced with **new**
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果**n**为负，则所有**old**的实例将被替换为**new**。
- en: Let’s look at the working code
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看工作代码。
- en: '**Code:**'
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**代码：**'
- en: '[PRE1]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**Output:**'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出：**'
- en: '[PRE2]*'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE2]*'
