- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 分类：未分类
- en: 'date: 2024-10-13 06:07:51'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-10-13 06:07:51
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Current Timestamp in Go (Golang)
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Go语言中的当前时间戳
- en: 来源：[https://golangbyexample.com/current-timestamp-in-golang/](https://golangbyexample.com/current-timestamp-in-golang/)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://golangbyexample.com/current-timestamp-in-golang/](https://golangbyexample.com/current-timestamp-in-golang/)
- en: Table of Contents
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 目录
- en: '**   [Overview](#Overview "Overview")'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**[概述](#Overview "Overview")**'
- en: '[Code](#Code "Code")*  *# **Overview**'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[代码](#Code "Code")*  *# **概述**'
- en: In this tutorial, we will see how to get the current timestamp using the time
    package in Go. The current time can be represented in different ways
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们将看到如何使用Go语言中的time包获取当前时间戳。当前时间可以用不同的方式表示。
- en: '**time.Time** object'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**time.Time**对象'
- en: '[PRE0]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '**Unix Time (Also known as Epoch Time)** – It is the number of seconds elapsed
    since 00:00:00 UTC on 1 January 1970\. This time is also known as the Unix epoch.'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Unix时间（也称为纪元时间）** – 它是自1970年1月1日00:00:00 UTC以来经过的秒数。这个时间也被称为Unix纪元。'
- en: '[PRE1]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**Unix Nano** –  It is number of nanoseconds elapsed since 00:00:00 UTC on
    1 January 1970'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Unix纳秒** – 自1970年1月1日00:00:00 UTC以来经过的纳秒数'
- en: '[PRE2]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**Unix MilliSecond** – It is the number of milliseconds elapsed since 00:00:00
    UTC on 1 January 1970'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Unix毫秒** – 自1970年1月1日00:00:00 UTC以来经过的毫秒数'
- en: '[PRE3]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '**Unix MicroSecond** – It is the number of microseconds elapsed since 00:00:00
    UTC on 1 January 1970'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Unix微秒** – 自1970年1月1日00:00:00 UTC以来经过的微秒数'
- en: '[PRE4]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Code
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 代码
- en: '[PRE5]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '**Output:**'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出：**'
- en: '[PRE6]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[epoch](https://golangbyexample.com/tag/epoch/)*   [miliseconds](https://golangbyexample.com/tag/miliseconds/)*   [nanoseconds](https://golangbyexample.com/tag/nanoseconds/)*   [unix](https://golangbyexample.com/tag/unix/)*'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[纪元](https://golangbyexample.com/tag/epoch/)*   [毫秒](https://golangbyexample.com/tag/miliseconds/)*   [纳秒](https://golangbyexample.com/tag/nanoseconds/)*   [unix](https://golangbyexample.com/tag/unix/)*'
