["```\nabbabcda\n```", "```\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\tlen := lengthOfLongestSubstring(\"abbabcda\")\n\tfmt.Println(len)\n}\n\nfunc lengthOfLongestSubstring(s string) int {\n\tcharLastIndex := make(map[rune]int)\n\n\tlongestSubstringLength := 0\n\tcurrentSubstringLength := 0\n\tstart := 0\n\n\tfor index, character := range s {\n\t\tlastIndex, ok := charLastIndex[character]\n\t\tif !ok || lastIndex < index-currentSubstringLength {\n\t\t\tcurrentSubstringLength++\n\t\t} else {\n\t\t\tif currentSubstringLength > longestSubstringLength {\n\t\t\t\tlongestSubstringLength = currentSubstringLength\n\t\t\t}\n\t\t\tstart = lastIndex + 1\n\t\t\tcurrentSubstringLength = index - start + 1\n\t\t}\n\t\tcharLastIndex[character] = index\n\t}\n\tif currentSubstringLength > longestSubstringLength {\n\t\tlongestSubstringLength = currentSubstringLength\n\t}\n\treturn longestSubstringLength\n}\n```", "```\n4\n```"]