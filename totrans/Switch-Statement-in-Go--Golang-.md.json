["```\nswitch statement; expression {\ncase expression1:\n     //Dosomething\ncase expression2:\n     //Dosomething\ndefault:\n     //Dosomething\n}\n```", "```\nswitch statement; expression {\n   ... \n}\n```", "```\nswitch statement; {\n    ...\n}\n```", "```\nswitch expression {\n   ..\n}\n```", "```\nswitch {\n  ... \n}\n```", "```\ncase expression1_1, expression_2 ...:\n```", "```\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n    switch ch := \"b\"; ch {\n    case \"a\":\n        fmt.Println(\"a\")\n    case \"b\", \"c\":\n        fmt.Println(\"b or c\")    \n    default:\n        fmt.Println(\"No matching character\")    \n    }\n\n    //fmt.Println(ch)\n\n} \n```", "```\nb or c\n```", "```\n case \"b\", \"c\":\n```", "```\nundefined: ch\n```", "```\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n    age := 45\n    switch {\n    case age < 18:\n        fmt.Println(\"Kid\")\n    case age >= 18 && age < 40:\n        fmt.Println(\"Young\")\n    default:\n        fmt.Println(\"Old\")\n    }\n}\n```", "```\nOld\n```", "```\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\n    switch age := 29; {\n    case age < 18:\n        fmt.Println(\"Kid\")\n    case age >= 18 && age < 40:\n        fmt.Println(\"Young\")\n    default:\n        fmt.Println(\"Old\")\n    }\n}\n```", "```\nYoung\n```", "```\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n    char := \"a\"\n    switch char {\n    case \"a\":\n        fmt.Println(\"a\")\n    case \"b\":\n        fmt.Println(\"b\")\n    default:\n        fmt.Println(\"No matching character\")\n    }\n}\n```", "```\na\n```", "```\nduplicate case \"a\" in switch\n```", "```\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n    switch \"a\" {\n    case \"a\":\n        fmt.Println(\"a\")\n    case \"a\":\n        fmt.Println(\"Another a\")\n    case \"b\":\n        fmt.Println(\"b\")\n    default:\n        fmt.Println(\"No matching character\")\n    }\n}\n```", "```\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n    i := 45\n    switch {\n    case i < 10:\n        fmt.Println(\"i is less than 10\")\n        fallthrough\n    case i < 50:\n        fmt.Println(\"i is less than 50\")\n        fallthrough\n    case i < 100:\n        fmt.Println(\"i is less than 100\")\n    }\n}\n```", "```\ni is less than 50\ni is less than 100\n```", "```\nfallthrough statement out of place\n```", "```\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n    i := 45\n    switch {\n    case i < 10:\n        fmt.Println(\"i is less than 10\")\n        fallthrough\n    case i < 50:\n        fmt.Println(\"i is less than 50\")\n        fallthrough\n        fmt.Println(\"Not allowed\")\n    case i < 100:\n        fmt.Println(\"i is less than 100\")\n    }\n}\n```", "```\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n    switch char := \"b\"; char {\n    case \"a\":\n        fmt.Println(\"a\")\n    case \"b\":\n        fmt.Println(\"b\")\n        break\n        fmt.Println(\"after b\")\n    default:\n        fmt.Println(\"No matching character\")\n    }\n}\n```", "```\nb\n```", "```\nfmt.Println(\"after b\")\n```", "```\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n    printType(\"test_string\")\n    printType(2)\n}\n\nfunc printType(t interface{}) {\n    switch v := t.(type) {\n    case string:\n        fmt.Println(\"Type: string\")\n    case int:\n        fmt.Println(\"Type: int\")\n    default:\n        fmt.Printf(\"Unknown Type %T\", v)\n    }\n}\n```", "```\nType: string\nType: int\n```"]