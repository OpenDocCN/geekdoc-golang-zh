- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-10-13 06:10:40'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: Get the IP address from an incoming HTTP request
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://golangbyexample.com/golang-ip-address-http-request/](https://golangbyexample.com/golang-ip-address-http-request/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Table of Contents
  prefs: []
  type: TYPE_NORMAL
- en: '**   [Overview](#Overview "Overview")'
  prefs: []
  type: TYPE_NORMAL
- en: '[Code](#Code "Code")*  *# **Overview**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In this article, we will get the IP address of the client for an incoming HTTP
    request using
  prefs: []
  type: TYPE_NORMAL
- en: '**X-REAL-IP** header'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If **X-REAL-IP** is empty then we will fall back to **X-FORWARDED-FOR** header.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If **X-FORWARDED-FOR** is empty then we will fall back to **RemoteAddr** of
    http.Request struct
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Please do note that
  prefs: []
  type: TYPE_NORMAL
- en: '**X-REAL-IP** header contains only one IP address of the client machine. Some
    of the proxy servers such as Nginx populate this header if empty based upon the
    trust proxies that the request encountered before. Also please note that this
    header can easily be spoofed by the client.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**X-FORWARDED-FOR**  is a list of IP addresses – proxy chaining. Consider it
    as a request hop log. So if the request originates from the client having IP as
    **ip1**, and then hops through a proxy server with **ip2** and then goes through
    a load balancer having IP as **ip3**, then the value of **X-FORWARDED-FOR** will
    be **“ip1,ip2,ip3”** Therefore it is a good idea to split by **“,”**.  Also, note
    that it can also be easily spoofed by the client. You should only use this header
    if you control the proxy which is setting the header'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**RemoteAddr** contains the real IP address of the client. It is the actual
    physical IP address that the web server received the connection from and that
    the response will be sent to. But in case the client is connected through a proxy
    it will give the IP address of the proxy. Also in case, you are using a load balancer
    or a reverse proxy server then it will give the address of them. **RemoteAddr**
    represents the IP port combination.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Please refer to this article for more information on X-REAL-IP and X-FORWARDED-FOR
    header
  prefs: []
  type: TYPE_NORMAL
- en: '[https://distinctplace.com/2014/04/23/story-behind-x-forwarded-for-and-x-real-ip-headers/](https://distinctplace.com/2014/04/23/story-behind-x-forwarded-for-and-x-real-ip-headers/)'
  prefs: []
  type: TYPE_NORMAL
- en: Out of the above 3 values, **RemoteAddr** is the most reliable but it will never
    give correct IP address if the client is behind the proxy or when using a load
    balancer or a reverse proxy server, therefore the order is first  **X-REAL-IP**
    then **X-FORWARDED-FOR**  and then **RemoteAddr.** Although please note that a
    malicious user can still create the fake **X-REAL-IP** and **X-FORWARDED-FOR**
    header
  prefs: []
  type: TYPE_NORMAL
- en: '**Code**'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Let’s see a working code in GOLANG
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Make a curl call
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '**Output:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: On your machine, it will either output 127.0.0.1 for IPV4 or ::1 for IPV6
  prefs: []
  type: TYPE_NORMAL
- en: '[https://en.wikipedia.org/wiki/Localhost](https://en.wikipedia.org/wiki/Localhost)'
  prefs: []
  type: TYPE_NORMAL
- en: '[golang](https://golangbyexample.com/tag/golang/)*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
