["```\npackage main\n\nimport (\n\t\"fmt\"\n)\n\ntype TreeNode struct {\n\tVal   int\n\tLeft  *TreeNode\n\tRight *TreeNode\n}\n\nfunc isSameTree(p *TreeNode, q *TreeNode) bool {\n\tif p == nil && q == nil {\n\t\treturn true\n\t}\n\n\tif p == nil || q == nil {\n\t\treturn false\n\t}\n\n\tif p.Val != q.Val {\n\t\treturn false\n\t}\n\n\treturn isSameTree(p.Left, q.Left) && isSameTree(p.Right, q.Right)\n}\n\nfunc main() {\n\troot1 := TreeNode{Val: 1}\n\troot1.Left = &TreeNode{Val: 2}\n\troot1.Left.Left = &TreeNode{Val: 4}\n\troot1.Right = &TreeNode{Val: 3}\n\troot1.Right.Left = &TreeNode{Val: 5}\n\troot1.Right.Right = &TreeNode{Val: 6}\n\n\troot2 := TreeNode{Val: 1}\n\troot2.Left = &TreeNode{Val: 2}\n\troot2.Left.Left = &TreeNode{Val: 4}\n\troot2.Right = &TreeNode{Val: 3}\n\troot2.Right.Left = &TreeNode{Val: 5}\n\troot2.Right.Right = &TreeNode{Val: 6}\n\n\toutput := isSameTree(&root1, &root2)\n\tfmt.Println(output)\n\n\troot1 = TreeNode{Val: 1}\n\troot1.Left = &TreeNode{Val: 2}\n\n\troot2 = TreeNode{Val: 1}\n\troot2.Left = &TreeNode{Val: 3}\n\n\toutput = isSameTree(&root1, &root2)\n\tfmt.Println(output)\n}\n```", "```\ntrue\nfalse\n```"]