["```\npackage main\n\nimport (\n    \"fmt\"\n    \"reflect\"\n)\n\nfunc main() {\n    var test interface{}\n    test = \"test_string\"\n    fmt.Println(reflect.TypeOf(test))\n}\n```", "```\nstring\n```", "```\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n    var test interface{}\n    test = \"test_string\"\n    val, ok := test.(string)\n    if ok {\n        fmt.Printf(\"Test is of type string with value %s\\n\", val)\n    } else {\n        fmt.Printf(\"Unknown Type %T\", test)\n    }\n    test = 2\n    val2, ok := test.(int)\n    if ok {\n        fmt.Printf(\"Test is of type int with value %d\\n\", val2)\n    } else {\n        fmt.Printf(\"Unknown Type %T\", test)\n    }\n}\n```", "```\nTest is of type string with value test_string\nTest is of type int with value 2\n```", "```\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n    printType(\"test_string\")\n    printType(2)\n}\n\nfunc printType(t interface{}) {\n    switch v := t.(type) {\n    case string:\n        fmt.Println(\"Type: string\")\n    case int:\n        fmt.Println(\"Type: int\")\n    default:\n        fmt.Printf(\"Unknown Type %T\", v)\n    }\n}\n```", "```\nType: string\nType: int\n```", "```\npackage main\n\nimport (\n    \"fmt\"\n)\n\nfunc main() {\n    var test interface{}\n    test = \"test_string\"\n    //Using Sprintf\n    testType := fmt.Sprintf(\"%T\", test)\n    fmt.Println(testType)\n    //Using printf\n    fmt.Printf(\"%T\\n\", test)\n}\n```", "```\nstring\nstring\n```"]