["```\npackage main\nimport (\n    \"fmt\"\n    \"runtime/debug\"\n)\nfunc main() {\n    a := []string{\"a\", \"b\"}\n    checkAndPrint(a, 2)\n    fmt.Println(\"Exiting normally\")\n}\nfunc checkAndPrint(a []string, index int) {\n    defer handleOutOfBounds()\n    if index > (len(a) - 1) {\n        panic(\"Out of bound access for slice\")\n    }\n    fmt.Println(a[index])\n}\nfunc handleOutOfBounds() {\n    if r := recover(); r != nil {\n        fmt.Println(\"Recovering from panic:\", r)\n        fmt.Println(\"Stack Trace:\")\n        debug.PrintStack()\n    }\n}\n```", "```\nRecovering from panic: Out of bound access for slice\nStack Trace:\ngoroutine 1 [running]:\nruntime/debug.Stack(0xd, 0x0, 0x0)\n        stack.go:24 +0x9d\nruntime/debug.PrintStack()\n        stack.go:16 +0x22\nmain.handleOutOfBounds()\n        main.go:27 +0x10f\npanic(0x10ab8c0, 0x10e8f60)\n        /Users/slohia/Documents/goversion/go1.14.1/src/runtime/panic.go:967 +0x166\nmain.checkAndPrint(0xc000104f58, 0x2, 0x2, 0x2)\n        main.go:18 +0x111\nmain.main()\n        main.go:11 +0x81\nExiting normally\n```", "```\nif r := recover(); r != nil {\n    fmt.Println(\"Recovering from panic:\", r)\n}\n```", "```\nRecovering from panic: Out of bound access for slice\n```"]