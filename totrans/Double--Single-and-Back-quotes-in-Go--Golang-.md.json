["```\ninvalid character literal (more than one character)\n```", "```\nr = 'ab'\n```", "```\npackage main\n\nimport (\n    \"fmt\"\n    \"reflect\"\n    \"unsafe\"\n)\n\nfunc main() {\n    //String in double quotes\n    x := \"tit\\nfor\\ttat\"\n    fmt.Println(\"Priting String in Double Quotes:\")\n    fmt.Printf(\"x is: %s\\n\", x)\n\n   //String in back quotes\n    y := `tit\\nfor\\ttat`\n    fmt.Println(\"\\nPriting String in Back Quotes:\")\n    fmt.Printf(\"y is: %s\\n\", y)\n\n    //Declaring a byte with single quotes\n    var b byte = 'a'\n    fmt.Println(\"\\nPriting Byte:\")\n    //Print Size, Type and Character\n    fmt.Printf(\"Size: %d\\nType: %s\\nCharacter: %c\\n\", unsafe.Sizeof(b), reflect.TypeOf(b), b)\n\n    //Declaring a rune with single quotes\n    r := 'Â£'\n    fmt.Println(\"\\nPriting Rune:\")\n    //Print Size, Type, CodePoint and Character\n    fmt.Printf(\"Size: %d\\nType: %s\\nUnicode CodePoint: %U\\nCharacter: %c\\n\", unsafe.Sizeof(r), reflect.TypeOf(r), r, r)\n    //Below will raise a compiler error - invalid character literal (more than one character)\n    //r = 'ab'\n}\n```"]