- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 分类：未分类
- en: 'date: 2024-10-13 06:24:50'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-10-13 06:24:50
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: For-range loop for a channel in Go (Golang)
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Go（Golang）中的通道范围循环
- en: 来源：[https://golangbyexample.com/for-range-loop-channel-go/](https://golangbyexample.com/for-range-loop-channel-go/)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://golangbyexample.com/for-range-loop-channel-go/](https://golangbyexample.com/for-range-loop-channel-go/)
- en: For range loop can be used to receive data from the channel until it is closed. Do
    note that for- range loop will keep receiving from the channel the only way for
    range look to exit is to close the channel.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 范围循环可以用于从通道接收数据，直到它被关闭。请注意，范围循环将持续从通道接收数据，退出的唯一方式是关闭通道。
- en: Let’s see a program to understand it
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看一个程序来理解它。
- en: '[PRE0]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '**Output**'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出**'
- en: '[PRE1]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: In the above program,  we created a channel.  In the main function the send
    three values to the channel and after that, we closed the channel. Then we called
    the sum function and we passed the channel to that function. In the sum function,
    we did a for range loop over the channel.    After iterating over all the values
    in the channel the for range loop will exit  since the channel is closed
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述程序中，我们创建了一个通道。在主函数中发送三个值到通道，然后关闭了通道。接着我们调用了求和函数，并将通道传递给该函数。在求和函数中，我们对通道进行了一个范围循环。在迭代通道中的所有值后，由于通道已关闭，范围循环将退出。
- en: Now the question which comes to the mind is that what happens if you don't close
    a channel in the main function.  Try commenting the line in which they are closing
    the channel. Now run the program.  It will also output  deadlock because  for
    range loop will never finish in the sum function
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 现在脑海中出现的问题是，如果你在主函数中不关闭一个通道会发生什么。尝试注释掉关闭通道的那一行。现在运行这个程序。它也会输出死锁，因为对于范围循环在求和函数中将永远不会结束。
- en: '[PRE2]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[go](https://golangbyexample.com/tag/go/)*   [golang](https://golangbyexample.com/tag/golang/)'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[go](https://golangbyexample.com/tag/go/) *   [golang](https://golangbyexample.com/tag/golang/)'
