["```\nfunc (re *Regexp) ReplaceAllString(src, repl string) string\n```", "```\npackage main\n\nimport (\n\t\"fmt\"\n\t\"regexp\"\n)\n\nfunc main() {\n\tsampleRegexp := regexp.MustCompile(`\\w+:[0-9]\\d{1,3}`)\n\n\tinput := \"The persons are John:21, Simon:23, and Mike:19\"\n\n\tresult := sampleRegexp.ReplaceAllString(input, \"redacted\")\n\tfmt.Println(string(result))\n}\n```", "```\nThe persons are redacted, redacted, and redacted\n```", "```\n`\\w+:[0-9]\\d{1,3}`\n```", "```\nname:age\n```", "```\nThe persons are John:21, Simon:23, Mike:19\n```", "```\nresult := sampleRegexp.ReplaceAllString(input, \"redacted\")\n```", "```\nredacted\n```", "```\npackage main\n\nimport (\n    \"fmt\"\n    \"regexp\"\n)\n\nfunc main() {\n\n    sampleRegexp := regexp.MustCompile(`(\\w+):([0-9]\\d{1,3})`)\n    input := \"The names are John:21, Simon:23, and Mike:19\"\n\n    result := sampleRegexp.ReplaceAllString(input, \"$2:$1\")\n    fmt.Println(string(result))\n}\n```", "```\nThe names are 21:John, 23:Simon, and 19:Mike\n```", "```\n(\\w+):([0-9]\\d{1,3})\n```", "```\n(\\w+):([0-9]\\d{1,3})\n```", "```\n(\\w+)\n```", "```\n([0-9]\\d{1,3})\n```", "```\nThe names are John:21, Simon:23, and Mike:19\n```", "```\nresult := sampleRegexp.ReplaceAllString(input, \"$2:$1\")\n```", "```\nThe names are 21:John, 23:Simon, and 19:Mike\n```", "```\npackage main\n\nimport (\n\t\"fmt\"\n\t\"regexp\"\n)\n\nfunc main() {\n\tsampleRegexp := regexp.MustCompile(`(\\w+):([0-9]\\d{1,3})`)\n\n\tinput := \"The names are John:21, Simon:23, and Mike:19\"\n\n\tresult := sampleRegexp.ReplaceAllString(input, \"$1\")\n\tfmt.Println(string(result))\n}\n```", "```\nThe names are John, Simon, and Mike\n```", "```\n$1\n```", "```\npackage main\n\nimport (\n    \"fmt\"\n    \"regexp\"\n)\n\nfunc main() {\n    sampleRegexp := regexp.MustCompile(`(\\w+):([0-9]\\d{1,3})`)\n    input := \"The names are John:21, Simon:23, and Mike:19\"\n\n    result := sampleRegexp.ReplaceAllString(input, \"-$0-\")\n    fmt.Println(string(result))\n}\n```", "```\nThe names are -John:21-, -Simon:23-, and -Mike:19-\n```", "```\n-$0-\n```", "```\npackage main\n\nimport (\n\t\"fmt\"\n\t\"regexp\"\n)\n\nfunc main() {\n\tsampleRegexp := regexp.MustCompile(`(\\w+):([0-9]\\d{1,3})`)\n\n\tinput := \"The names are John:21, Simon:23, and Mike:19\"\n\n\tresult := sampleRegexp.ReplaceAllLiteralString(input, \"$1\")\n\tfmt.Println(string(result))\n}\n```", "```\nThe names are $1, $1, and $1\n```", "```\npackage main\n\nimport (\n\t\"fmt\"\n\t\"regexp\"\n)\n\nfunc main() {\n\tsampleRegexp := regexp.MustCompile(`(?P<name>\\w+):(?P<age>[0-9]\\d{1,3})`)\n\n\tinput := \"The names are John:21, Simon:23, Mike:19\"\n\n\tresult := sampleRegexp.ReplaceAllString(input, \"$Age:$Name\")\n\tfmt.Println(string(result))\n}</age></name>\n```", "```\nThe names are 21:John, 23:Simon, 19:Mike\n```", "```\n`(?P<name>\\w+):(?P<age>[0-9]\\d{1,3})`</age></name>\n```", "```\n(?P<name>\\w+)</name>\n```", "```\n(?P<age>[0-9]\\d{1,3})</age>\n```", "```\nThe names are John:21, Simon:23 and Mike:19\n```", "```\nresult := sampleRegexp.ReplaceAllString(input, \"$Age:$Name\")\n```", "```\nThe names are 21:John, 23:Simon, 19:Mike\n```"]