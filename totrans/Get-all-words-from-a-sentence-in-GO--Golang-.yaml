- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-10-13 06:12:04'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: Get all words from a sentence in GO (Golang)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://golangbyexample.com/words-from-sentence-golang/](https://golangbyexample.com/words-from-sentence-golang/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Table of Contents
  prefs: []
  type: TYPE_NORMAL
- en: '**   [Overview](#Overview "Overview")'
  prefs: []
  type: TYPE_NORMAL
- en: '[Code:](#Code "Code:")*  *# **Overview**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In GO string are UTF-8 encoded. **strings** package of GO provides a **Fields**
    method that can be used to split a string around an instance of one or more consecutive
    white space character.
  prefs: []
  type: TYPE_NORMAL
- en: Below is the signature of the function
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: As you can notice it returns a slice of substrings of the input string. Also,
    note that if the input string is empty it will return an empty slice if
  prefs: []
  type: TYPE_NORMAL
- en: The input string is empty
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Input string contains only whitespaces
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Code:**'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '**Output:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]*'
  prefs: []
  type: TYPE_NORMAL
