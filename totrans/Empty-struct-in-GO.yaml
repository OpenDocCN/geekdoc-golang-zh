- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-10-13 06:05:23'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: Empty struct in GO
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://golangbyexample.com/empty-struct-in-go/](https://golangbyexample.com/empty-struct-in-go/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Empty struct **struct{}** in GO doesn’t occupy any memory. It is of zero byte.
  prefs: []
  type: TYPE_NORMAL
- en: Below are some of the uses of empty struct
  prefs: []
  type: TYPE_NORMAL
- en: Useful for creating implementations that require no data.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Eg. One example is in while implementing Null Object Design Pattern in Go. The
    Null object doesn’t have any data. See an example of Null Object Design Pattern
    in GO – [https://golangbyexample.com/null-object-design-pattern-golang/](https://golangbyexample.com/null-object-design-pattern-golang/)
  prefs: []
  type: TYPE_NORMAL
- en: Empty struct also a very good use case in a channel when you only want to use
    a channel for notification and not for actually passing in any data.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Eg: In context package of GO we have **cancelCtx** which is represented as
    below. See done channel is using an empty struct as it is only used for notifying
    cancellation and has no data value.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Implementation of Set data structure. A set is a data structure that holds elements
    without any particular order. An element only appears once in a set. We use map[keyType]struct{}
    for set. struct{} is only just to let us know if an element exists in the set
    or not.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: See this link for set implementation in golang – [https://golangbyexample.com/set-implementation-in-golang/](https://golangbyexample.com/set-implementation-in-golang/)
  prefs: []
  type: TYPE_NORMAL
- en: Perfect replacement for a channel of Boolean. A boolean does occupy some space
    as struct does not, hence more efficient to use a channel of struct{}. See below
    example
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
