["```\npackage main\n\ntype component interface {\n    search(string)\n}\n```", "```\npackage main\n\nimport \"fmt\"\n\ntype folder struct {\n    components []component\n    name       string\n}\n\nfunc (f *folder) search(keyword string) {\n    fmt.Printf(\"Serching recursively for keyword %s in folder %s\\n\", keyword, f.name)\n    for _, composite := range f.components {\n        composite.search(keyword)\n    }\n}\n\nfunc (f *folder) add(c component) {\n    f.components = append(f.components, c)\n}\n```", "```\npackage main\n\nimport \"fmt\"\n\ntype file struct {\n    name string\n}\n\nfunc (f *file) search(keyword string) {\n    fmt.Printf(\"Searching for keyword %s in file %s\\n\", keyword, f.name)\n}\n\nfunc (f *file) getName() string {\n    return f.name\n}\n```", "```\npackage main\n\nfunc main() {\n    file1 := &file{name: \"File1\"}\n    file2 := &file{name: \"File2\"}\n    file3 := &file{name: \"File3\"}\n    folder1 := &folder{\n        name: \"Folder1\",\n    }\n    folder1.add(file1)\n    folder2 := &folder{\n        name: \"Folder2\",\n    }\n    folder2.add(file2)\n    folder2.add(file3)\n    folder2.add(folder1)\n    folder2.search(\"rose\")\n}\n```", "```\nSerching recursively for keyword rose in folder Folder2\nSearching for keyword rose in file File2\nSearching for keyword rose in file File3\nSerching recursively for keyword rose in folder Folder1\nSearching for keyword rose in file File1\n```"]