- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '分类: 未分类'
- en: 'date: 2024-10-13 06:52:15'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '日期: 2024-10-13 06:52:15'
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Repeat a string multiple times in Go (Golang)
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Go (Golang) 中重复一个字符串多次
- en: 来源：[https://golangbyexample.com/repeat-string-golang/](https://golangbyexample.com/repeat-string-golang/)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://golangbyexample.com/repeat-string-golang/](https://golangbyexample.com/repeat-string-golang/)
- en: Table of Contents
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 目录
- en: '**   [Overview](#Overview "Overview")'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**   [概述](#Overview "Overview")'
- en: '[Program](#Program "Program")*  *# **Overview**'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[程序](#Program "Program")*  *# **概述**'
- en: '**strings.Repeat** method can be used to repeat a string multiple times in
    Go (Golang)'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**strings.Repeat** 方法可用于在 Go (Golang) 中多次重复一个字符串'
- en: Here is the link to this function in the Go strings package
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这是 Go 字符串包中该函数的链接
- en: '[https://pkg.go.dev/strings#Repeat](https://pkg.go.dev/strings#Repeat)'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://pkg.go.dev/strings#Repeat](https://pkg.go.dev/strings#Repeat)'
- en: Here is the signature of the method
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 这是该方法的签名
- en: '[PRE0]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The first argument is the original string and count is the number of times the
    strings needs to be repeated
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个参数是原始字符串，count 是字符串需要重复的次数
- en: '**Program**'
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**程序**'
- en: Here is the program for the same
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 这是相同内容的程序
- en: '[PRE1]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**Output:**'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出:**'
- en: '[PRE2]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**Note:** Check out our Golang Advanced Tutorial. The tutorials in this series
    are elaborative and we have tried to cover all concepts with examples. This tutorial
    is for those who are looking to gain expertise and a solid understanding of golang
    – [Golang Advance Tutorial](https://golangbyexample.com/golang-comprehensive-tutorial/)'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意:** 请查看我们的 Golang 高级教程。本系列的教程内容详尽，我们努力覆盖所有概念及示例。本教程适合那些希望获得专业知识和深入理解 Golang
    的人 – [Golang 高级教程](https://golangbyexample.com/golang-comprehensive-tutorial/)'
- en: Also if you are interested in understanding how all design patterns can be implemented
    in Golang. If yes, then this post is for you –[All Design Patterns Golang](https://golangbyexample.com/all-design-patterns-golang/)
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有兴趣了解所有设计模式如何在 Golang 中实现。如果是的话，这篇文章就是为你准备的 – [所有设计模式 Golang](https://golangbyexample.com/all-design-patterns-golang/)
- en: '[go](https://golangbyexample.com/tag/go/)*   [golang](https://golangbyexample.com/tag/golang/)*'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[go](https://golangbyexample.com/tag/go/)*   [golang](https://golangbyexample.com/tag/golang/)*'
