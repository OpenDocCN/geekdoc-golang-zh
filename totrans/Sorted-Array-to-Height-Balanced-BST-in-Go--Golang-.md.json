["```\npackage main\n\nimport \"fmt\"\n\ntype TreeNode struct {\n\tVal   int\n\tLeft  *TreeNode\n\tRight *TreeNode\n}\n\nfunc sortedArrayToBST(nums []int) *TreeNode {\n\tlength := len(nums)\n\treturn sortedArrayToBSTUtil(nums, 0, length-1)\n}\n\nfunc sortedArrayToBSTUtil(nums []int, first int, last int) *TreeNode {\n\n\tif first > last {\n\t\treturn nil\n\t}\n\n\tif first == last {\n\t\treturn &TreeNode{\n\t\t\tVal: nums[first],\n\t\t}\n\t}\n\n\tmid := (first + last) / 2\n\n\troot := &TreeNode{\n\t\tVal: nums[mid],\n\t}\n\n\troot.Left = sortedArrayToBSTUtil(nums, first, mid-1)\n\troot.Right = sortedArrayToBSTUtil(nums, mid+1, last)\n\treturn root\n}\n\nfunc traverseInorder(root *TreeNode) {\n\tif root == nil {\n\t\treturn\n\t}\n\n\ttraverseInorder(root.Left)\n\tfmt.Println(root.Val)\n\ttraverseInorder(root.Right)\n}\n\nfunc main() {\n\troot := sortedArrayToBST([]int{1, 2, 3, 4, 5})\n\ttraverseInorder(root)\n\n}\n```", "```\n1\n2\n3\n4\n5\n```"]