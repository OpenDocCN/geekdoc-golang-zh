["```\nOutput: 16\nMaximum Sum Path is: 4->2->1->3->6\n```", "```\nOutput: 14\nMaximum Sum Path is: 5->3->6\n```", "```\npackage main\n\nimport (\n\t\"fmt\"\n\t\"math\"\n)\n\ntype TreeNode struct {\n\tVal   int\n\tLeft  *TreeNode\n\tRight *TreeNode\n}\n\nfunc maxPathSum(root *TreeNode) int {\n\tres := math.MinInt64\n\n\tmaxPathSumUtil(root, &res)\n\treturn res\n}\n\nfunc maxPathSumUtil(root *TreeNode, res *int) int {\n\tif root == nil {\n\t\treturn 0\n\t}\n\n\tl := maxPathSumUtil(root.Left, res)\n\tr := maxPathSumUtil(root.Right, res)\n\n\ta := root.Val\n\tb := root.Val + l\n\tc := root.Val + r\n\td := root.Val + l + r\n\n\tmaxReturnSum := maxOfThree(a, b, c)\n\n\tmaxSumPath := maxOfTwo(maxReturnSum, d)\n\tif maxSumPath > *res {\n\t\t*res = maxSumPath\n\t}\n\n\treturn maxReturnSum\n}\n\nfunc maxOfThree(a, b, c int) int {\n\tif a > b && a > c {\n\t\treturn a\n\t}\n\n\tif b > c {\n\t\treturn b\n\t}\n\n\treturn c\n}\n\nfunc maxOfTwo(a, b int) int {\n\tif a > b {\n\t\treturn a\n\t}\n\treturn b\n}\n\nfunc main() {\n\troot := &TreeNode{Val: 1}\n\troot.Left = &TreeNode{Val: 2}\n\troot.Left.Left = &TreeNode{Val: 4}\n\troot.Right = &TreeNode{Val: 3}\n\troot.Right.Left = &TreeNode{Val: 5}\n\troot.Right.Right = &TreeNode{Val: 6}\n\n\toutput := maxPathSum(root)\n\tfmt.Println(output)\n\n\troot = &TreeNode{Val: -10}\n\troot.Left = &TreeNode{Val: 2}\n\troot.Left.Left = &TreeNode{Val: 4}\n\troot.Right = &TreeNode{Val: 3}\n\troot.Right.Left = &TreeNode{Val: 5}\n\troot.Right.Right = &TreeNode{Val: 6}\n\toutput = maxPathSum(root)\n\tfmt.Println(output)\n\n}\n```", "```\n16\n14\n```"]