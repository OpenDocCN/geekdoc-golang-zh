["```\nInput Array: [0,2,3,-1] Target Sum:6\nOutput: 5 . It can be formed using 0+2+3 \n```", "```\npackage main\n\nimport (\n\t\"fmt\"\n\t\"math\"\n\t\"sort\"\n)\n\nfunc main() {\n\toutput := threeSumClosest([]int{0, 2, 3, -1}, 6)\n\tfmt.Println(output)\n}\n\nfunc threeSumClosest(nums []int, target int) int {\n\n\tnumsLength := len(nums)\n\n\tclosestSum := 0\n\tnearest := 10000\n\n\tsort.Slice(nums, func(i, j int) bool {\n\t\treturn nums[i] < nums[j]\n\t})\n\n\tfor k := 0; k < numsLength-2; k++ {\n\t\ti := k + 1\n\t\tj := numsLength - 1\n\t\tfor i < j {\n\t\t\tsum := nums[k] + nums[i] + nums[j]\n\t\t\tabsSum := int(math.Abs(float64(target - sum)))\n\n\t\t\tif absSum < nearest {\n\t\t\t\tnearest = absSum\n\t\t\t\tclosestSum = sum\n\t\t\t}\n\n\t\t\tif nums[k]+nums[i]+nums[j] > target {\n\t\t\t\tj--\n\t\t\t} else {\n\t\t\t\ti++\n\t\t\t}\n\t\t}\n\t}\n\n\treturn closestSum\n}\n```", "```\n5\n```"]