["```\nInput: [1,5,7,6]\nThe longest subsequence is [1,5,6] which is of length 3\nOutput: 3\n```", "```\nInput: [3,2,1]\nThe longest subsequence is either {3}, {2} or {1}. Each is of length 1\nOutput: 1\n```", "```\npackage main\n\nimport \"fmt\"\n\nfunc lengthOfLIS(nums []int) int {\n\n\tlenNums := len(nums)\n\tlis := make([]int, lenNums)\n\n\tfor i := 0; i < lenNums; i++ {\n\t\tlis[i] = 1\n\t}\n\n\tfor i := 1; i < lenNums; i++ {\n\t\tfor j := 0; j < i; j++ {\n\t\t\tif nums[i] > nums[j] && lis[i] < (lis[j]+1) {\n\t\t\t\tlis[i] = lis[j] + 1\n\t\t\t}\n\t\t}\n\t}\n\n\tmax := 0\n\n\tfor i := 0; i < lenNums; i++ {\n\t\tif lis[i] > max {\n\t\t\tmax = lis[i]\n\t\t}\n\t}\n\n\treturn max\n}\n\nfunc main() {\n\toutput := lengthOfLIS([]int{1, 5, 7, 6})\n\tfmt.Println(output)\n\n\toutput = lengthOfLIS([]int{3, 2, 1})\n\tfmt.Println(output)\n}\n```", "```\n3\n1\n```"]