["```\npackage main\n\nimport \"fmt\"\n\nfunc countUnguarded(m int, n int, guards [][]int, walls [][]int) int {\n\n\toccupancy := make([][]int, m)\n\n\tfor i := 0; i < m; i++ {\n\t\toccupancy[i] = make([]int, n)\n\t}\n\n\tfor _, val := range guards {\n\t\ti := val[0]\n\t\tj := val[1]\n\t\toccupancy[i][j] = 2\n\t}\n\n\tfor _, val := range walls {\n\t\ti := val[0]\n\t\tj := val[1]\n\t\toccupancy[i][j] = -1\n\t}\n\n\tfor i := 0; i < m; i++ {\n\t\tfor j := 0; j < n; j++ {\n\t\t\tif occupancy[i][j] == 2 {\n\t\t\t\tcountUtil(i, j, m, n, &occupancy)\n\t\t\t}\n\n\t\t}\n\t}\n\n\tcount := 0\n\tfor i := 0; i < m; i++ {\n\t\tfor j := 0; j < n; j++ {\n\t\t\tif occupancy[i][j] == 0 {\n\t\t\t\tcount += 1\n\t\t\t}\n\n\t\t}\n\t}\n\n\treturn count\n}\n\nfunc countUtil(x, y, m, n int, occupancy *([][]int)) {\n\n\tfor i := x + 1; i < m; i++ {\n\t\tif (*occupancy)[i][y] == 0 {\n\t\t\t(*occupancy)[i][y] = 1\n\t\t}\n\n\t\tif (*occupancy)[i][y] == -1 || (*occupancy)[i][y] == 2 {\n\t\t\tbreak\n\t\t}\n\t}\n\n\tfor i := x - 1; i >= 0; i-- {\n\t\tif (*occupancy)[i][y] == 0 {\n\t\t\t(*occupancy)[i][y] = 1\n\t\t}\n\n\t\tif (*occupancy)[i][y] == -1 || (*occupancy)[i][y] == 2 {\n\t\t\tbreak\n\t\t}\n\t}\n\n\tfor i := y + 1; i < n; i++ {\n\t\tif (*occupancy)[x][i] == 0 {\n\t\t\t(*occupancy)[x][i] = 1\n\t\t}\n\n\t\tif (*occupancy)[x][i] == -1 || (*occupancy)[x][i] == 2 {\n\t\t\tbreak\n\t\t}\n\t}\n\n\tfor i := y - 1; i >= 0; i-- {\n\n\t\tif (*occupancy)[x][i] == 0 {\n\t\t\t(*occupancy)[x][i] = 1\n\t\t}\n\n\t\tif (*occupancy)[x][i] == -1 || (*occupancy)[x][i] == 2 {\n\t\t\tbreak\n\t\t}\n\t}\n\n}\n\nfunc main() {\n\toutput := countUnguarded(4, 6, [][]int{{0, 0}, {1, 1}, {2, 3}}, [][]int{{0, 1}, {2, 2}, {1, 4}})\n\tfmt.Println(output)\n\n\toutput = countUnguarded(3, 3, [][]int{{1, 1}}, [][]int{{0, 1}, {1, 0}, {2, 1}, {1, 2}})\n\tfmt.Println(output)\n}\n```", "```\n7\n4\n```"]