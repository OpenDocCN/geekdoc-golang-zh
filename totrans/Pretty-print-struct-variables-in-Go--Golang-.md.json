["```\ntype employee struct {\n    name   string\n    age    int\n    salary int\n}\n```", "```\nemp := employee{name: \"Sam\", age: 31, salary: 2000}\n```", "```\nfmt.Printf(\"%v\", emp)  -  {Sam 31 2000}\n```", "```\nfmt.Printf(\"%+v\", emp) - {name:Sam age:31 salary:2000}\n```", "```\nfmt.Printf(\"%#v\", emp) - main.employee{name:\"Sam\", age:31, salary:2000}\n```", "```\nfmt.Println(emp) - {Sam 31 2000}\n```", "```\npackage main\n\nimport \"fmt\"\n\ntype employee struct {\n    name   string\n    age    int\n    salary int\n}\n\nfunc main() {\n    emp := employee{name: \"Sam\", age: 31, salary: 2000}\n    fmt.Printf(\"Emp: %v\\n\", emp)\n    fmt.Printf(\"Emp: %+v\\n\", emp)\n    fmt.Printf(\"Emp: %#v\\n\", emp)\n    fmt.Println(emp)\n}\n```", "```\nEmp: {Sam 31 2000}\nEmp: {name:Sam age:31 salary:2000}\nEmp: main.employee{name:\"Sam\", age:31, salary:2000}\n{Sam 31 2000}\n```", "```\nMarshal(v interface{}) ([]byte, error)\n```", "```\nMarshalIndent(v interface{}, prefix, indent string) ([]byte, error)\n```", "```\npackage main\n\nimport (\n    \"encoding/json\"\n    \"fmt\"\n    \"log\"\n)\n\ntype employee struct {\n    Name   string\n    Age    int\n    salary int\n}\n\nfunc main() {\n    emp := employee{Name: \"Sam\", Age: 31, salary: 2000}\n    //Marshal\n    empJSON, err := json.Marshal(emp)\n    if err != nil {\n        log.Fatalf(err.Error())\n    }\n    fmt.Printf(\"Marshal funnction output %s\\n\", string(empJSON))\n\n    //MarshalIndent\n    empJSON, err = json.MarshalIndent(emp, \"\", \"  \")\n    if err != nil {\n        log.Fatalf(err.Error())\n    }\n    fmt.Printf(\"MarshalIndent funnction output %s\\n\", string(empJSON))\n}\n```", "```\nMarshal funnction output {\"Name\":\"Sam\",\"Age\":31}\n\nMarshalIndent funnction output {\n  \"Name\": \"Sam\",\n  \"Age\": 31\n}\n```", "```\ntype strutName struct{\n   fieldName type `key:value key2:value2`\n}\n```", "```\ntype employee struct {\n    Name   string `json:\"n\"`\n    Age    int    `json:\"a\"`\n    Salary int    `json:\"s\"`\n}\n```", "```\npackage main\n\nimport (\n    \"encoding/json\"\n    \"fmt\"\n    \"log\"\n)\n\ntype employee struct {\n    Name   string `json:\"n\"`\n    Age    int    `json:\"a\"`\n    Salary int    `json:\"s\"`\n}\n\nfunc main() {\n    emp := employee{Name: \"Sam\", Age: 31, Salary: 2000}\n    //Converting to jsonn\n    empJSON, err := json.MarshalIndent(emp, '', '  ')\n    if err != nil {\n        log.Fatalf(err.Error())\n    }\n    fmt.Println(string(empJSON))\n}\n```", "```\n{\n  \"n\": \"Sam\",\n  \"a\": 31,\n  \"s\": 2000\n}\n```", "```\npackage main\n\nimport (\n    \"encoding/json\"\n    \"fmt\"\n    \"log\"\n)\n\ntype address struct {\n    City    string `json:\"city\"`\n    Country string `json:\"country\"`\n}\n\ntype employee struct {\n    Name    string  `json:\"name\"`\n    Age     int     `json:\"age\"`\n    Salary  int     `json:\"salary\"`\n    Address address `json:\"address\"`\n}\n\nfunc main() {\n    address := address{City: \"some_city\", Country: \"some_country\"}\n    emp := employee{Name: \"Sam\", Age: 31, Salary: 2000, Address: address}\n    //Converting to json\n    empJSON, err := json.MarshalIndent(emp, \"\", \"  \")\n    if err != nil {\n        log.Fatalf(err.Error())\n    }\n    fmt.Printf(\"MarshalIndent funnction output\\n %s\\n\", string(empJSON))\n}\n```", "```\nMarshalIndent function output\n {\n  \"name\": \"Sam\",\n  \"age\": 31,\n  \"salary\": 2000,\n  \"address\": {\n    \"city\": \"some_city\",\n    \"country\": \"some_country\"\n  }\n}\n```"]