["```\ntype employee struct {\n\tName string `json:\"name\"`\n\tAge  int    `json:\"age\"`\n}\n```", "```\n{\n  \"name\" : \"John\",\n  \"age\"  : 21\n}\n```", "```\ntype employee struct {\n\tName string `json:\"n\"`\n\tAge  int    `json:\"ag\"`\n}\n```", "```\n{\n  \"n\" : \"John\",\n  \"age\"  : 21\n}\n```", "```\ntype employee struct {\n\tName string \n\tAge  int   \n}\n```", "```\n{\n  \"Name\" : \"John\",\n  \"Age\"  : 21\n}\n```", "```\npackage main\nimport (\n    \"encoding/json\"\n    \"fmt\"\n    \"log\"\n)\ntype employee1 struct {\n    Name   string `json:\"n\"`\n    Age    int    `json:\"a\"`\n    salary int    `json:\"s\"`\n}\ntype employee2 struct {\n    Name   string\n    Age    int\n    salary int\n}\nfunc main() {\n    e1 := employee1{\n        Name:   \"John\",\n        Age:    21,\n        salary: 1000,\n    }\n    j, err := json.Marshal(e1)\n    if err != nil {\n        log.Fatalf(\"Error occured during marshaling. Error: %s\", err.Error())\n    }\n    fmt.Printf(\"employee1 JSON: %s\\n\", string(j))\n    e2 := employee2{\n        Name:   \"John\",\n        Age:    21,\n        salary: 1000,\n    }\n    j, err = json.Marshal(e2)\n    if err != nil {\n        log.Fatalf(\"Error occured during marshaling. Error: %s\", err.Error())\n    }\n    fmt.Printf(\"\\nemployee2 JSON: %s\\n\", string(j))\n}\n```", "```\nemployee1 JSON: {\"n\":\"John\",\"a\":21}\n\nemployee2 JSON: {\"Name\":\"John\",\"Age\":21}\n```", "```\n{\"n\":\"John\",\"a\":21}\n```", "```\n{\"Name\":\"John\",\"Age\":21}\n```", "```\npackage main\n\nimport (\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"log\"\n)\n\ntype employee1 struct {\n\tName   string `json:\"n\"`\n\tAge    int    `json:\"a\"`\n\tsalary int    `json:\"s\"`\n}\n\ntype employee2 struct {\n\tName   string\n\tAge    int\n\tsalary int\n}\n\nfunc main() {\n\te1Json := `{\"n\":\"John\",\"a\":21}`\n\n\tvar e1Converted employee1\n\terr := json.Unmarshal([]byte(e1Json), &e1Converted)\n\tif err != nil {\n\t\tlog.Fatalf(\"Error occured during unmarshaling. Error: %s\", err.Error())\n\t}\n\tfmt.Printf(\"employee1 Struct: %#v\\n\", e1Converted)\n\n\te2Json := `{\"Name\":\"John\",\"Age\":21}`\n\tvar e2Converted employee2\n\terr = json.Unmarshal([]byte(e2Json), &e2Converted)\n\tif err != nil {\n\t\tlog.Fatalf(\"Error occured during unmarshaling. Error: %s\", err.Error())\n\t}\n\tfmt.Printf(\"\\nemployee2 Struct: %#v\\n\", e2Converted)\n}\n```", "```\nemployee1 Struct: main.employee1{Name:\"John\", Age:21, salary:0}\n\nemployee2 Struct: main.employee2{Name:\"John\", Age:21, salary:0}\n```", "```\nerr = json.Unmarshal(j, &e1Converted)\n```", "```\n{\"n\":\"John\",\"a\":21}\n```", "```\nmain.employee1{Name:\"John\", Age:21, salary:0}\n```", "```\n{\"Name\":\"John\",\"Age\":21}\n```", "```\nmain.employee2{Name:\"John\", Age:21, salary:0}\n```", "```\n{\"n\":\"John\",\"a\":21}\n```", "```\n into employee2 struct then the output will be \n```", "```\nmain.employee2{Name:\"\", Age:0, salary:0}\n```", "```\npackage main\nimport (\n    \"encoding/json\"\n    \"fmt\"\n    \"log\"\n)\ntype employee1 struct {\n    Name   string `json:\"n\"`\n    Age    int    `json:\"a\"`\n    salary int    `json:\"s\"`\n}\nfunc main() {\n    e1Json := `{\"n\":\"John\",\"a\":21,\"salary\":1000}`\n    var e1Converted employee1\n    err := json.Unmarshal([]byte(e1Json), &e1Converted)\n    if err != nil {\n        log.Fatalf(\"Error occured during unmarshaling. Error: %s\", err.Error())\n    }\n    fmt.Printf(\"employee1 Struct: %#v\\n\", e1Converted)\n}\n```", "```\nemployee1 Struct: main.employee1{Name:\"John\", Age:21, salary:0}\n```"]