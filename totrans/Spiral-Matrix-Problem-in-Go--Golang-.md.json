["```\n1, 2, 3 \n4, 5, 6 \n7, 8, 9\n```", "```\n1 2 3 6 9 8 7 4 5\n```", "```\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\tmatrix := [][]int{{1, 2, 3}, {4, 5, 6}, {7, 8, 9}}\n\toutput := spiralOrder(matrix)\n\tfmt.Println(output)\n\n\tmatrix = [][]int{{1, 2, 3, 4}, {5, 6, 7, 8}, {9, 10, 11, 12}, {13, 14, 15, 16}}\n\toutput = spiralOrder(matrix)\n\tfmt.Println(output)\n}\n\nfunc spiralOrder(matrix [][]int) []int {\n\n\tvar output []int\n\ttotalRows := len(matrix)\n\ttotalColumns := len(matrix[0])\n\n\tstartRow := 0\n\tendRow := totalRows - 1\n\tstartColumn := 0\n\tendColumn := totalColumns - 1\n\n\tfor startRow <= endRow && startColumn <= endColumn {\n\n\t\tfor i := startColumn; i <= endColumn; i++ {\n\t\t\toutput = append(output, matrix[startRow][i])\n\t\t}\n\n\t\tstartRow++\n\n\t\tfor i := startRow; i <= endRow; i++ {\n\t\t\toutput = append(output, matrix[i][endColumn])\n\t\t}\n\n\t\tendColumn--\n\n\t\tif startRow <= endRow {\n\t\t\tfor i := endColumn; i >= startColumn; i-- {\n\t\t\t\toutput = append(output, matrix[endRow][i])\n\t\t\t}\n\t\t}\n\n\t\tendRow--\n\n\t\tif startColumn <= endColumn {\n\t\t\tfor i := endRow; i >= startRow; i-- {\n\t\t\t\toutput = append(output, matrix[i][startColumn])\n\t\t\t}\n\t\t}\n\t\tstartColumn++\n\t}\n\n\treturn output\n\n}\n```", "```\n[1 2 3 6 9 8 7 4 5]\n[1 2 3 4 8 12 16 15 14 13 9 5 6 7 11 10]\n```"]