- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '类别: 未分类'
- en: 'date: 2024-10-13 06:08:53'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '日期: 2024-10-13 06:08:53'
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: channel as function argument in Go (Golang)
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Go语言中将通道作为函数参数
- en: 来源：[https://golangbyexample.com/channel-function-argument-go/](https://golangbyexample.com/channel-function-argument-go/)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://golangbyexample.com/channel-function-argument-go/](https://golangbyexample.com/channel-function-argument-go/)
- en: Table of Contents
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 目录
- en: '**   [Overview](#Overview "Overview")'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**   [概述](#Overview "概述")'
- en: '[Bidirectional channel](#Bidirectional_channel "Bidirectional channel")'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[双向通道](#Bidirectional_channel "双向通道")'
- en: '[Only Send Channel](#Only_Send_Channel "Only Send Channel")'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[仅发送通道](#Only_Send_Channel "仅发送通道")'
- en: '[Only Receive Channel](#Only_Receive_Channel "Only Receive Channel")'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[仅接收通道](#Only_Receive_Channel "仅接收通道")'
- en: '[Channel Pointer](#Channel_Pointer "Channel Pointer ")*  *# Overview'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[通道指针](#Channel_Pointer "通道指针")*  *# 概述'
- en: There are many ways in which a channel can be passed as a function argument.
    The direction of the arrow for a channel specifies the direction of flow of data
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 通道可以作为函数参数传递的方式有很多。箭头的方向指定数据流的方向
- en: '**chan** : bidirectional channel (Both read and write)'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**chan** : 双向通道（可读可写）'
- en: '**chan <-** : only writing to channel'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**chan <-** : 仅写入通道'
- en: '**<- chan** : only reading from the channel (input channel)'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<- chan** : 仅从通道读取（输入通道）'
- en: '***chan** : channel pointer. Both read and write'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '***chan** : 通道指针。可读可写'
- en: '**Bidirectional channel**'
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**双向通道**'
- en: Signature of such a bidirectional channel will be like below when passed to
    a function as an argument.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 这样的双向通道的签名在作为函数参数传递时如下所示。
- en: '[PRE0]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '**Code:**'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**代码:**'
- en: '[PRE1]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**Output:** 2'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出:** 2'
- en: '**Only Send Channel**'
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**仅发送通道**'
- en: Signature of such a  channel to which only you can send will be like below when
    passed to a function as an argument.
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 只能发送数据的通道的签名在作为函数参数传递时如下所示。
- en: '[PRE2]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: When trying to receive data from such a channel will give below error.
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尝试从这样的通道接收数据时会出现以下错误。
- en: '[PRE3]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Try uncommenting below line in the code to see the above error
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试取消注释代码中的以下行以查看上述错误
- en: '[PRE4]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '**Code:**'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '**代码:**'
- en: '[PRE5]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '**Output:** 2'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出:** 2'
- en: '**Only Receive Channel**'
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**仅接收通道**'
- en: Signature of the such a  channel from which you can only receive data will be
    like below  when passed to a function as an argument
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 仅接收数据的通道的签名在作为函数参数传递时如下所示
- en: '[PRE6]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: When trying to send data to such a channel will give below error.
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尝试向这样的通道发送数据时会出现以下错误。
- en: '[PRE7]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Try uncommenting below line in the code to see the above error
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试取消注释代码中的以下行以查看上述错误
- en: '[PRE8]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '**Code:**'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '**代码:**'
- en: '[PRE9]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '**Output:** 2'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出:** 2'
- en: '**Channel Pointer**'
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**通道指针**'
- en: This way of passing a channel would only make sense if you would want to modify
    the channel. This is very uncommon and not a preferable way to use. Signature
    of the such a channel which is passed as a pointer
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 以这种方式传递通道只有在您想要修改通道时才有意义。这是非常不常见的，且不是一种可取的使用方式。这样的通道作为指针传递的签名。
- en: '[PRE10]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '**Code:**'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '**代码:**'
- en: '[PRE11]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '**Output:** 2*'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出:** 2*'
