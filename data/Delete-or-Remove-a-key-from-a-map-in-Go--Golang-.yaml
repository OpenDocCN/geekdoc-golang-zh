- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 类别：未分类
- en: 'date: 2024-10-13 06:52:35'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-10-13 06:52:35
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Delete or Remove a key from a map in Go (Golang)
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Go (Golang)中删除或移除映射中的键
- en: 来源：[https://golangbyexample.com/delete-key-map-golang/](https://golangbyexample.com/delete-key-map-golang/)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://golangbyexample.com/delete-key-map-golang/](https://golangbyexample.com/delete-key-map-golang/)
- en: Table of Contents
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 目录
- en: '**   [Overview](#Overview "Overview")'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**   [概述](#Overview "概述")'
- en: '[Key exists in the Map](#Key_exists_in_the_Map "Key exists in the Map")'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[键存在于映射中](#Key_exists_in_the_Map "键存在于映射中")'
- en: '[The Key doesn’t exist in the Map](#The_Key_doesnt_exist_in_the_Map "The Key
    doesn’t exist in the Map")*  *# **Overview**'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[键在映射中不存在](#The_Key_doesnt_exist_in_the_Map "键在映射中不存在")*  *# **概述**'
- en: Below is the format to delete a given key from a map
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是从映射中删除给定键的格式
- en: '[PRE0]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: There are two cases
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 有两个情况
- en: The **keyToDelete** exists in the map. In this case, it will simply delete the
    key
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**keyToDelete**在映射中存在。在这种情况下，它将简单地删除该键'
- en: The **keyToDelete** doesn’t exist in the map. In this case, it will do nothing.
    A
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**keyToDelete**在映射中不存在。在这种情况下，它将不执行任何操作。A'
- en: Let’s see an example of both the cases
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一下这两种情况的示例
- en: '**Key exists in the Map**'
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**键存在于映射中**'
- en: Below is the program for the case where the key exists in the Map
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是键存在于映射中的程序
- en: '[PRE1]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**Output**'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出**'
- en: '[PRE2]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Notice in the output that the key “a” got deleted from the map. It is always
    a good practice to check if a key exists in the map and then delete it. Below
    is the code snippet for that.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 注意输出中，键“a”已从映射中删除。检查键是否存在于映射中，然后再删除总是一个好习惯。以下是相关的代码片段。
- en: '[PRE3]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '**Output**'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出**'
- en: '[PRE4]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '**The Key doesn’t exist in the Map**'
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**键在映射中不存在**'
- en: In this case, also it is a good practice to check if the key exists and then
    delete it. Even if we delete directly without checking, then also it is not a
    problem though. The below code snippet shows both the cases
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，检查键是否存在然后再删除也是一个好习惯。即使我们直接删除而不检查，也不是问题。以下代码片段显示了这两种情况
- en: '[PRE5]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '**Output**'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出**'
- en: '[PRE6]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '**Note:** Check out our Golang Advanced Tutorial. The tutorials in this series
    are elaborative and we have tried to cover all concepts with examples. This tutorial
    is for those who are looking to gain expertise and a solid understanding of golang
    – [Golang Advance Tutorial](https://golangbyexample.com/golang-comprehensive-tutorial/)'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意：** 请查看我们的Golang高级教程。本系列的教程内容详尽，我们尝试用示例覆盖所有概念。这个教程是为了那些希望获得Golang专业知识和扎实理解的人—[Golang高级教程](https://golangbyexample.com/golang-comprehensive-tutorial/)'
- en: Also if you are interested in understanding how all design patterns can be implemented
    in Golang. If yes, then this post is for you –
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有兴趣了解如何在Golang中实现所有设计模式。如果是的话，这篇文章就是为你准备的—
- en: '[All Design Patterns Golang](https://golangbyexample.com/all-design-patterns-golang/)*'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '[所有设计模式 Golang](https://golangbyexample.com/all-design-patterns-golang/)*'
