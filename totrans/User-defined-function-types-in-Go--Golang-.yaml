- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-10-13 06:11:19'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: User defined function types in Go (Golang)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://golangbyexample.com/user-defined-function-type-go/](https://golangbyexample.com/user-defined-function-type-go/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Table of Contents
  prefs: []
  type: TYPE_NORMAL
- en: '**   [Overview](#Overview "Overview")'
  prefs: []
  type: TYPE_NORMAL
- en: '[Code](#Code "Code")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Example 1](#Example_1 "Example 1")'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Example 2](#Example_2 "Example 2")*  *# **Overview**'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: In GO, the function is also a type. Two functions will be of the same type if
  prefs: []
  type: TYPE_NORMAL
- en: They have the same number of arguments with each argument is of the same type
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: They have the same number of return values and each return value is of the same
    type
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Function as user-defined type can be declared using the **type** keyword like
    below. **area** is the name of the function of type **func(int, int) int**
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '**Code**'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Example 1**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this example, we create a user-defined function type area. Then we create
    a variable of type area in the main function.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '**Output:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**Example 2**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this example also we create a user-defined function type **area.** Then we
    create a function **getAreaFunc()** which returns the function of type **area**
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '**Output:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '[golang](https://golangbyexample.com/tag/golang/)*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
