- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-10-13 06:35:13'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: Print string with double quotes in Go (Golang)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://golangbyexample.com/print-double-quotes-string-golang/](https://golangbyexample.com/print-double-quotes-string-golang/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Table of Contents
  prefs: []
  type: TYPE_NORMAL
- en: '**   [Overview](#Overview "Overview")'
  prefs: []
  type: TYPE_NORMAL
- en: '[Program for double-quoted string](#Program_for_double-quoted_string "Program
    for double-quoted string")*  *## **Overview**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The backslash is the escaping character. To print any string that contains literal
    double quotes, we need to escape both these quotes when the string is enclosed
    within double quotes. However, a string enclosed in backquotes is a raw literal
    string and doesn’t honor any kind of escaping. So back quotes can also be used
    to print a string with literal double quotes
  prefs: []
  type: TYPE_NORMAL
- en: '**Program for double-quoted string**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '**Output**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Noticed that we escaped both single quotes and double quotes within that string
  prefs: []
  type: TYPE_NORMAL
- en: '**Program for back quotes**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**Output**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '[go](https://golangbyexample.com/tag/go/)*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
