["```\napplication/json\n```", "```\ntype employee struct {\n\tName string `json:\"name\"`\n\tAge  int    `json:\"age\"`\n}\n```", "```\n{\n  \"name\" : \"John\",\n  \"age\"  : 21\n}\n```", "```\ntype employee struct {\n\tName string `json:\"n\"`\n\tAge  int    `json:\"ag\"`\n}\n\n{\n  \"n\" : \"John\",\n  \"age\"  : 21\n}\n```", "```\n'{\"Name\":\"John\", \"Age\": 21, \"Gender\": \"M\"}'\n```", "```\nunknown field \"Gender\"\n```", "```\n'{\"Name\": \"John\", \"Age\":}'\n```", "```\ninvalid character '}' looking for beginning of value\n```", "```\n''\n```", "```\nEOF\n```", "```\n'{\"Name\":\"John\", \"Age\": \"21\"}'\n```", "```\njson: cannot unmarshal string into Go struct field employee.age of type int\n```", "```\ndecore.DisallowUnknownFields()\n```", "```\npackage main\n\nimport (\n\t\"encoding/json\"\n\t\"errors\"\n\t\"net/http\"\n)\n\ntype employee struct {\n\tName string `json:\"name\"`\n\tAge  int    `json:\"age\"`\n}\n\nfunc main() {\n\tcreateEmployeeHanlder := http.HandlerFunc(createEmployee)\n\thttp.Handle(\"/employee\", createEmployeeHanlder)\n\thttp.ListenAndServe(\":8080\", nil)\n}\n\nfunc createEmployee(w http.ResponseWriter, r *http.Request) {\n\theaderContentTtype := r.Header.Get(\"Content-Type\")\n\tif headerContentTtype != \"application/json\" {\n\t\terrorResponse(w, \"Content Type is not application/json\", http.StatusUnsupportedMediaType)\n\t\treturn\n\t}\n\tvar e employee\n\tvar unmarshalErr *json.UnmarshalTypeError\n\n\tdecoder := json.NewDecoder(r.Body)\n\tdecoder.DisallowUnknownFields()\n\terr := decoder.Decode(&e)\n\tif err != nil {\n\t\tif errors.As(err, &unmarshalErr) {\n\t\t\terrorResponse(w, \"Bad Request. Wrong Type provided for field \"+unmarshalErr.Field, http.StatusBadRequest)\n\t\t} else {\n\t\t\terrorResponse(w, \"Bad Request \"+err.Error(), http.StatusBadRequest)\n\t\t}\n\t\treturn\n\t}\n\terrorResponse(w, \"Success\", http.StatusOK)\n\treturn\n}\n\nfunc errorResponse(w http.ResponseWriter, message string, httpStatusCode int) {\n\tw.Header().Set(\"Content-Type\", \"application/json\")\n\tw.WriteHeader(httpStatusCode)\n\tresp := make(map[string]string)\n\tresp[\"message\"] = message\n\tjsonResp, _ := json.Marshal(resp)\n\tw.Write(jsonResp)\n}\n```", "```\ncurl -X POST -H \"content-type: application/json\" http://localhost:8080/employee -d '{\"Name\":\"John\", \"Age\": 21}'\n```", "```\nResponse Code: 200\nResponse Body: {\"message\":\"Success\"}\n```", "```\ncurl -v -X POST -H \"content-type: application/json\" http://localhost:8080/employee -d '{\"Name\":\"John\", \"Age\": 21, \"Gender\": \"M\"}'\n```", "```\nResponse Code: 400\nResponse Body: {\"message\":\"Bad Request json: unknown field \\\"Gender\\\"\"}\n```", "```\ncurl -v -X POST -H \"content-type: application/json\" http://localhost:8080/employee -d '{\"Name\": \"John\", \"Age\":}'\n```", "```\nResponse Code: 400\nResponse Body: {\"message\":\"Bad Request invalid character '}' looking for beginning of value\"}\n```", "```\ncurl -v -X POST -H \"content-type: application/json\" http://localhost:8080/employee\n```", "```\nResponse Code: 400\nResponse Body: {\"message\":\"Bad Request EOF\"}\n```", "```\ncurl -v -X POST -H \"content-type: application/json\" http://localhost:8080/employee -d '{\"Name\":\"John\", \"Age\": \"21\"}'\n```", "```\nResponse Code: 400\nResponse Body: {\"message\":\"Bad Request. Wrong Type provided for field age\"}\n```", "```\ncurl -X POST -H \"content-type: application/json\" http://localhost:8080/employee -d '{\"Name\":\"John\", \"Age\": 21}'\n```", "```\nResponse Code: 415 Unsupported Media Type\nResponse Body: {\"message\":\"Content Type is not application/json\"}\n```"]