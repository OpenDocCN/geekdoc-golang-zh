["```\nabcd?\n```", "```\npackage main\n\nimport (\n\t\"fmt\"\n\t\"regexp\"\n)\n\nfunc main() {\n\tsampleRegexp := regexp.MustCompile(\"abcd?\")\n\n\tmatch := sampleRegexp.Match([]byte(\"abc\"))\n\tfmt.Printf(\"For abc: %t\\n\", match)\n\n\tmatch = sampleRegexp.Match([]byte(\"abcd\"))\n\tfmt.Printf(\"For abcd: %t\\n\", match)\n\n}\n```", "```\nFor abc: true\nFor abcd: true\n```", "```\nabc(de)?\n```", "```\npackage main\n\nimport (\n\t\"fmt\"\n\t\"regexp\"\n)\n\nfunc main() {\n\tsampleRegexp := regexp.MustCompile(\"abc(de)?\")\n\n\tmatch := sampleRegexp.Match([]byte(\"abc\"))\n\tfmt.Printf(\"For abc: %t\\n\", match)\n\n\tmatch = sampleRegexp.Match([]byte(\"abcde\"))\n\tfmt.Printf(\"For abcde: %t\\n\", match)\n\n\tmatch = sampleRegexp.Match([]byte(\"abcd\"))\n\tfmt.Printf(\"For abcd: %t\\n\", match)\n}\n```", "```\nFor abc: true\nFor abcde: true\nFor abcd: true\n```", "```\npackage main\n\nimport (\n\t\"fmt\"\n\t\"regexp\"\n)\n\nfunc main() {\n\tsampleRegexp := regexp.MustCompile(\"^abc(de)?$\")\n\n\tmatch := sampleRegexp.Match([]byte(\"abc\"))\n\tfmt.Printf(\"For abc: %t\\n\", match)\n\n\tmatch = sampleRegexp.Match([]byte(\"abcde\"))\n\tfmt.Printf(\"For abcde: %t\\n\", match)\n\n\tmatch = sampleRegexp.Match([]byte(\"abcd\"))\n\tfmt.Printf(\"For abcd: %t\\n\", match)\n}\n```", "```\nFor abc: true\nFor abcde: true\nFor abcd: false\n```", "```\nhttps? \n```", "```\nBetter is https\n```", "```\npackage main\n\nimport (\n\t\"fmt\"\n\t\"regexp\"\n)\n\nfunc main() {\n\tsampleRegexp := regexp.MustCompile(\"https?\")\n\n\tmatch := sampleRegexp.Find([]byte(\"Better is https\"))\n\tfmt.Printf(\"Match: %s\\n\", match)\n}\n```", "```\nMatch: https\n```", "```\npackage main\n\nimport (\n\t\"fmt\"\n\t\"regexp\"\n)\n\nfunc main() {\n\tsampleRegexp := regexp.MustCompile(\"https??\")\n\n\tmatch := sampleRegexp.Find([]byte(\"Better is https\"))\n\tfmt.Printf(\"Match: %s\\n\", match)\n}\n```", "```\nMatch: http\n```", "```\npackage main\n\nimport (\n\t\"fmt\"\n\t\"regexp\"\n)\n\nfunc main() {\n\tsampleRegexp := regexp.MustCompile(\"http(s+?)\")\n\n\tmatch := sampleRegexp.Find([]byte(\"Better is httpsss\"))\n\tfmt.Printf(\"Match: %s\\n\", match)\n\n\tsampleRegexp = regexp.MustCompile(\"http(s*?)\")\n\n\tmatch = sampleRegexp.Find([]byte(\"Better is httpsss\"))\n\tfmt.Printf(\"Match: %s\\n\", match)\n}\n```", "```\nMatch: https\nMatch: http\n```", "```\nBetter is httpsss\n```", "```\n\"http(s+?)\"\n```", "```\n\"http(s*?)\"\n```", "```\npackage main\n\nimport (\n\t\"fmt\"\n\t\"regexp\"\n)\n\nfunc main() {\n\tsampleRegexp := regexp.MustCompile(\"(a+?)(a*)\")\n\n\tmatch := sampleRegexp.FindStringSubmatch(\"aaaaaaa\")\n\tfmt.Printf(\"Match: %s Length: %d\\n\", match, len(match))\n\n\tsampleRegexp = regexp.MustCompile(\"(a*?)(a*)\")\n\n\tmatch = sampleRegexp.FindStringSubmatch(\"aaaaaaa\")\n\tfmt.Printf(\"Match: %s Length: %d\\n\", match, len(match))\n}\n```", "```\nMatch: [aaaaaaa a aaaaaa] Length: 3\nMatch: [aaaaaaa  aaaaaaa] Length: 3\n```", "```\n(a+?)(a*)\n```", "```\n(a*?)(a*)\n```"]