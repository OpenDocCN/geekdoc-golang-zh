["```\nnrConfig := newrelic.NewConfig(\"test\", \"somekey\")\nnrapp, err = newrelic.NewApplication(nrConfig)\nr := gin.Default()\nr.Use(nrgin.Middleware(nrapp))\n```", "```\npackage main\n\nimport (\n\t\"context\"\n\t\"net/http\"\n\t\"time\"\n\n\t\"github.com/gin-gonic/gin\"\n\tnr \"github.com/newrelic/go-agent\"\n\t\"github.com/newrelic/go-agent/_integrations/nrgin/v1\"\n)\n\ntype key int\n\nconst (\n   keyNrID key = iota\n)\n\nvar (\n    nrapp newrelic.Application\n)\n\nfunc main() {\n\tinitNewRelic()\n\tr := gin.Default()\n\tr.Use(nrgin.Middleware(nrapp))\n\tr.Use(setNewRelicInContext())\n\n\tsetUpRoutes(r)\n\t// Listen and Server in 0.0.0.0:8080\n\ts := &http.Server{\n\t\tAddr:         \":8080\",\n\t\tHandler:      r,\n\t}\n\ts.ListenAndServe()\n}\n\n//populateNewRelicInContext get the request context populated\nfunc setNewRelicInContext() gin.HandlerFunc {\n\n\treturn func(c *gin.Context) {\n\t\t//Setup context\n\t\tctx := c.Request.Context()\n\n\t\t//Set newrelic context\n\t\tvar txn nr.Transaction\n\t\t//newRelicTransaction is the key populated by nrgin Middleware\n\t\tvalue, exists := c.Get(\"newRelicTransaction\")\n\t\tif exists {\n\t\t\tif v, ok := value.(nr.Transaction); ok {\n\t\t\t\ttxn = v\n\t\t\t}\n\t\t\tctx = context.WithValue(ctx, keyNrID, txn)\n\t\t}\n\t\tc.Request = c.Request.WithContext(ctx)\n\t\tc.Next()\n\t}\n}\n\nfunc initNewRelic() {\n\tvar err error\n\tnrConfig := newrelic.NewConfig(\"test\", \"somekey\")\n\tnrapp, err = newrelic.NewApplication(nrConfig)\n\tif err != nil {\n\t\tpanic(\"Failed to setup NewRelic: \" + err.Error())\n\t}\n} \n```", "```\npackage main\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"net/http\"\n\t\"time\"\n\t\"github.com/gin-gonic/gin\"\n\tnr \"github.com/newrelic/go-agent\"\n)\n\n//setUpRoutes set all the routes\nfunc setUpRoutes(r *gin.Engine) {\n\tr.GET(\"/app/status\", getStatus)\n}\n\nfunc getStatus(c *gin.Context) {\n\tctx := c.Request.Context()\n\terr := callGoogle(ctx)\n\tif err != nil {\n\t\tc.Writer.WriteHeader(400)\n\t\treturn\n\t}\n\tdoSomeThing(ctx)\n\tc.Writer.WriteHeader(200)\n}\n\nfunc callGoogle(ctx context.Context) error {\n\tif t := ctx.Value(keyNrID); t != nil {\n\t\ttxn := t.(nr.Transaction)\n\t\tdefer nr.StartSegment(txn, \"callGoogle\").End()\n\t}\n\tresp, err := http.Get(\"http://google.com/\")\n\tif err != nil {\n\t\treturn fmt.Errorf(\"Some error occuerd %s\", err.Error())\n\t}\n\tdefer resp.Body.Close()\n\treturn nil\n}\n\nfunc doSomeThing(ctx context.Context) {\n\tif t := ctx.Value(keyNrID); t != nil {\n\t\ttxn := t.(nr.Transaction)\n\t\tdefer nr.StartSegment(txn, \"doSomeThing\").End()\n\t}\n\ttime.Sleep(time.Millisecond * 100)\n}\n```"]