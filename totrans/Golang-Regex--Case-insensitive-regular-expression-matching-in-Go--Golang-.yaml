- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-10-13 06:37:12'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: 'Golang Regex: Case insensitive regular expression matching in Go (Golang)'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://golangbyexample.com/case-insensitive-regex-golang/](https://golangbyexample.com/case-insensitive-regex-golang/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Table of Contents
  prefs: []
  type: TYPE_NORMAL
- en: '**   [Overview](#Overview "Overview")'
  prefs: []
  type: TYPE_NORMAL
- en: '[Program](#Program "Program")*  *## **Overview**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The default behavior for regular expression matching in golang is case sensitive.
    But the default behavior can be changed by adding a set of flags to the beginning
    of the regular expression. The flag we need to add to the beginning of regex is:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: The flag **‘i’** is used to indicate that the regex will be case insensitive.
  prefs: []
  type: TYPE_NORMAL
- en: Here is the example regex for case sensitive and insensitive regex.
  prefs: []
  type: TYPE_NORMAL
- en: '**Case sensitive regex**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '**Case insensitive regex**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**Program**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Let’s see a program for the same.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '**Output**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Notice the regex in the above program. We prefixed the regex with **(?i)** flag
    to indicate that this regex will be case insensitive
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: As we can notice from the output, it gives a correct match for text **“abc”**
    as well as text **“ABC”**.
  prefs: []
  type: TYPE_NORMAL
- en: If we remove the prefix flag then it will  give afalse match for **“ABC”**
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '**Output**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Notice the regex in the above program. We do not prefix the regex with **(?i)**
    flag. So it will fall back to the default behavior of being case sensitive.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: As we can notice from the output, it gives a correct match for text **“abc”**
    but it does not give a match for text **“ABC”**.
  prefs: []
  type: TYPE_NORMAL
- en: This is all about case insensitive regex matching in golang. Hope you have liked
    this article.
  prefs: []
  type: TYPE_NORMAL
- en: Please share the feedback in the comments.Also, check out our Golang advance
    tutorial Series – [Golang Advance Tutorial](https://golangbyexample.com/golang-comprehensive-tutorial/)
  prefs: []
  type: TYPE_NORMAL
- en: '[go](https://golangbyexample.com/tag/go/)*   [golang](https://golangbyexample.com/tag/golang/)*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
