- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 类别：未分类
- en: 'date: 2024-10-13 06:52:56'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-10-13 06:52:56
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Ruby convert string to bool
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Ruby 将字符串转换为布尔值
- en: 来源：[https://golangbyexample.com/string-bool-ruby/](https://golangbyexample.com/string-bool-ruby/)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://golangbyexample.com/string-bool-ruby/](https://golangbyexample.com/string-bool-ruby/)
- en: Table of Contents
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 目录
- en: '**   [Overview](#Overview "Overview")*  *# **Overview**'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**[概述](#Overview "概述")**  # **概述**'
- en: In the Ruby language, strings “true” and “false” are interpreted as true when
    used in the **if** condition. See example below
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Ruby 语言中，字符串“true”和“false”在 **if** 条件中被解释为 true。请参见下面的示例。
- en: '[PRE0]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '**Output**'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出**'
- en: '[PRE1]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: “false” evaluates to true
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: “false” 计算为 true。
- en: Therefore it becomes important to handle string “false” or string “true” correctly.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，正确处理字符串“false”或字符串“true”变得很重要。
- en: We can create a custom method that can return boolean true or false based on
    the content of the string
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以创建一个自定义方法，根据字符串的内容返回布尔值 true 或 false
- en: '[PRE2]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: We can try out the above function
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以尝试上述函数。
- en: '[PRE3]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Also, note that for strings other than “false” it will give true in return,
    but the function could be easily modified to handle that case*
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，请注意，对于除“false”以外的字符串，它将返回 true，但该函数可以轻松修改以处理这种情况。
