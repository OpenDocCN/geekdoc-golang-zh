["```\nconst a int32 = 8\n```", "```\npackage main\n\nfunc main() {\n    const a int32 = 8\n\n    var i1 int32\n    var i2 int64\n\n    i1 = a\n    i2 = a\n}\n```", "```\ncannot use a (type int32) as type int64 in assignment\n```", "```\n123        //Default hidden type is int\n\"circle\"   //Default hidden type is string\n5.6\\.       //Default hidden type is float64\ntrue       //Default hidden type is bool\n'a'        //Default hidden type is rune\n3+5i       //Default hidden type is complex128\n```", "```\nconst a = 123        //Default hidden type is int\nconst b = \"circle\"   //Default hidden type is string\nconst c = 5.6       //Default hidden type is float64\nconst d = true       //Default hidden type is bool\nconst e = 'a'        //Default hidden type is rune\nconst f = 3+5i       //Default hidden type is complex128\n```", "```\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n    //Unanamed untyped constant\n    fmt.Printf(\"Type: %T Value: %v\\n\", 123, 123)\n    fmt.Printf(\"Type: %T Value: %v\\n\", \"circle\", \"circle\")\n    fmt.Printf(\"Type: %T Value: %v\\n\", 5.6, 5.6)\n    fmt.Printf(\"Type: %T Value: %v\\n\", true, true)\n    fmt.Printf(\"Type: %T Value: %v\\n\", 'a', 'a')\n    fmt.Printf(\"Type: %T Value: %v\\n\", 3+5i, 3+5i)\n\n    //Named untyped constant\n    const a = 123      //Default hidden type is int\n    const b = \"circle\" //Default hidden type is string\n    const c = 5.6      //Default hidden type is float64\n    const d = true     //Default hidden type is bool\n    const e = 'a'      //Default hidden type is rune\n    const f = 3 + 5i   //Default hidden type is complex128\n\n    fmt.Println(\"\")\n    fmt.Printf(\"Type: %T Value: %v\\n\", a, a)\n    fmt.Printf(\"Type: %T Value: %v\\n\", b, b)\n    fmt.Printf(\"Type: %T Value: %v\\n\", c, c)\n    fmt.Printf(\"Type: %T Value: %v\\n\", d, d)\n    fmt.Printf(\"Type: %T Value: %v\\n\", e, e)\n    fmt.Printf(\"Type: %T Value: %v\\n\", f, f)\n}\n```", "```\nType: int Value: 123\nType: string Value: circle\nType: float64 Value: 5.6\nType: bool Value: true\nType: int32 Value: 97\nType: complex128 Value: (3+5i)\n\nType: int Value: 123\nType: string Value: circle\nType: float64 Value: 5.6\nType: bool Value: true\nType: int32 Value: 97\nType: complex128 Value: (3+5i)\n```", "```\nvar a = 123\n```", "```\npackage main\nimport \"fmt\"\nfunc main() {\n    //Untyped\n    var u = 123      //Default hidden type is int\n    var v = \"circle\" //Default hidden type is string\n    var w = 5.6      //Default hidden type is float64\n    var x = true     //Default hidden type is bool\n    var y = 'a'      //Default hidden type is rune\n    var z = 3 + 5i   //Default hidden type is complex128\n    fmt.Printf(\"Type: %T Value: %v\\n\", u, u)\n    fmt.Printf(\"Type: %T Value: %v\\n\", v, v)\n    fmt.Printf(\"Type: %T Value: %v\\n\", w, w)\n    fmt.Printf(\"Type: %T Value: %v\\n\", x, x)\n    fmt.Printf(\"Type: %T Value: %v\\n\", y, y)\n    fmt.Printf(\"Type: %T Value: %v\\n\", z, z)\n}\n```", "```\nType: int Value: 123\nType: string Value: circle\nType: float64 Value: 5.6\nType: bool Value: true\nType: int32 Value: 97\nType: complex128 Value: (3+5i)\n```", "```\nconst Pi = 3.14159265358979323846264338327950288419716939937510582097494459\n```", "```\npackage main\nimport (\n    \"fmt\"\n    \"math\"\n)\nfunc main() {\n    var f1 float32\n    var f2 float64\n    f1 = math.Pi\n    f2 = math.Pi\n\n    fmt.Printf(\"Type: %T Value: %v\\n\", math.Pi, math.Pi)\n    fmt.Printf(\"Type: %T Value: %v\\n\", f1, f1)\n    fmt.Printf(\"Type: %T Value: %v\\n\", f2, f2)\n}\n```", "```\nType: float64 Value: 3.141592653589793\nType: float32 Value: 3.1415927\nType: float64 Value: 3.141592653589793\n```"]