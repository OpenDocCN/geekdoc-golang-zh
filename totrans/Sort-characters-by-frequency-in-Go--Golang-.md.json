["```\nInput: \"bcabcb\"\nOutput: \"bbbcca\"\n```", "```\nInput: \"mniff\"\nOutput: \"ffmni\"\n```", "```\npackage main\n\nimport (\n\t\"fmt\"\n\t\"sort\"\n)\n\nfunc frequencySort(s string) string {\n\tstringMap := make(map[byte]int)\n\tlenS := len(s)\n\tfor i := 0; i < lenS; i++ {\n\t\tstringMap[s[i]]++\n\t}\n\n\titemArray := make([]item, 0)\n\n\tfor key, value := range stringMap {\n\t\ti := item{\n\t\t\tchar:      key,\n\t\t\tfrequency: value,\n\t\t}\n\t\titemArray = append(itemArray, i)\n\t}\n\n\tsort.Slice(itemArray, func(i, j int) bool {\n\t\treturn itemArray[i].frequency > itemArray[j].frequency\n\t})\n\n\toutput := \"\"\n\n\tfor i := 0; i < len(itemArray); i++ {\n\t\tfor j := 0; j < itemArray[i].frequency; j++ {\n\t\t\toutput = output + string(itemArray[i].char)\n\t\t}\n\t}\n\n\treturn output\n\n}\n\ntype item struct {\n\tchar      byte\n\tfrequency int\n}\n\nfunc main() {\n\toutput := frequencySort(\"bcabcb\")\n\tfmt.Println(output)\n\n\toutput = frequencySort(\"mniff\")\n\tfmt.Println(output)\n\n}\n```", "```\nbbbcca\nffmni\n```"]