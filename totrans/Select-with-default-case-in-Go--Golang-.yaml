- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-10-13 06:23:33'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: Select with default case in Go (Golang)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://golangbyexample.com/select-default-case-go/](https://golangbyexample.com/select-default-case-go/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Table of Contents
  prefs: []
  type: TYPE_NORMAL
- en: '**   [Overview](#Overview "Overview")'
  prefs: []
  type: TYPE_NORMAL
- en: '[Code](#Code "Code")*  *# **Overview**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Similar to switch  select can also have a default case.  This default case will
    be executed if no send it or receive operation is  ready on any of the case statement.
    So in a way default statement prevent the select from blocking forever.  So a
    very important point to note is that the default statement makes the select non-blocking.
    If the select statement doesn’t contain a default case then it can block forever
    until one send or receive operation is ready on any case statement. Let’s see
    a example to fully understand it
  prefs: []
  type: TYPE_NORMAL
- en: '**Code**'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '**Output**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: In the above program have a select statement which is waiting for receive operation
    on **ch1** and a default statement. Since no goroutine is sending to channel **ch1**,
    hence the default case is executed and then select exits.
  prefs: []
  type: TYPE_NORMAL
- en: The select statement checks if the value is available in any of the channels
    in case statements. If it is available  then that case is executed otherwise the
    default case will be executed immediately.
  prefs: []
  type: TYPE_NORMAL
- en: Let's see another example where the value is immediately available in one of
    the channels. We will see that  default case is not executed in this scenario
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**Output**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: We can see in the above program that the value was available on the ch1 channel
    that is why that case is executed and the default case is not executed. Same is
    also evident from the output
  prefs: []
  type: TYPE_NORMAL
- en: '[go](https://golangbyexample.com/tag/go/)*   [golang](https://golangbyexample.com/tag/golang/)*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
