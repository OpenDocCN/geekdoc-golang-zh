["```\nsample := \"aÂ£c\"\n```", "```\nfmt.Printf(\"Length is %d\\n\", len(sample))\n```", "```\nfunc Sort(data Interface)\n```", "```\ntype Interface interface {\n\t// Len is the number of elements in the collection.\n\tLen() int\n\n\t// Less reports whether the element with index i\n\t// must sort before the element with index j.\n\tLess(i, j int) bool\n\n\t// Swap swaps the elements with indexes i and j.\n\tSwap(i, j int)\n}\n```", "```\npackage main\n\nimport (\n\t\"fmt\"\n\t\"sort\"\n)\n\nfunc main() {\n\tsortString(\"bac\")\n}\n\nfunc sortString(input string) {\n\truneArray := []rune(input)\n\tsort.Sort(sortRuneString(runeArray))\n\tfmt.Println(string(runeArray))\n}\n\ntype sortRuneString []rune\n\nfunc (s sortRuneString) Swap(i, j int) {\n\ts[i], s[j] = s[j], s[i]\n}\n\nfunc (s sortRuneString) Less(i, j int) bool {\n\treturn s[i] < s[j]\n}\n\nfunc (s sortRuneString) Len() int {\n\treturn len(s)\n}\n```", "```\nabc\n```"]