- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 分类：未分类
- en: 'date: 2024-10-13 06:33:26'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-10-13 06:33:26
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Convert an array/slice into a JSON in Go (Golang)
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Go (Golang) 中将数组/切片转换为 JSON
- en: 来源：[https://golangbyexample.com/array-slice-json-golang/](https://golangbyexample.com/array-slice-json-golang/)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://golangbyexample.com/array-slice-json-golang/](https://golangbyexample.com/array-slice-json-golang/)
- en: Table of Contents
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 目录
- en: '**   [Overview](#Overview "Overview")'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**   [概述](#Overview "Overview")'
- en: '[Example](#Example "Example")*  *# **Overview**'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[示例](#Example "Example")*  *# **概述**'
- en: '**encoding/json** package provides the **Marshal** function which can be used
    to convert a golang array or slice into a JSON string and vice versa.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**encoding/json** 包提供了 **Marshal** 函数，可用于将 golang 数组或切片转换为 JSON 字符串，反之亦然。'
- en: Let’s see an example
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看一个例子
- en: '**Example**'
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**示例**'
- en: '[PRE0]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '**Output**'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出**'
- en: '[PRE1]*'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE1]*'
