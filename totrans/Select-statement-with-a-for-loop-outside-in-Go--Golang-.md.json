["```\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n    ch1 := make(chan string)\n    ch2 := make(chan string)\n    go goOne(ch1)\n    go goTwo(ch2)\n    for i := 0; i < 2; i++ {\n        select {\n        case msg1 := <-ch1:\n            fmt.Println(msg1)\n        case msg2 := <-ch2:\n            fmt.Println(msg2)\n        }\n    }\n}\n\nfunc goOne(ch chan string) {\n    ch <- \"From goOne goroutine\"\n}\n\nfunc goTwo(ch chan string) {\n    ch <- \"From goTwo goroutine\"\n}\n```", "```\nFrom goOne goroutine\nFrom goTwo goroutine\n```", "```\npackage main\n\nimport (\n\t\"fmt\"\n\t\"time\"\n)\n\nfunc main() {\n\tnews := make(chan string)\n\tgo newsFeed(news)\n\n\tprintAllNews(news)\n}\n\nfunc printAllNews(news chan string) {\n\tfor {\n\t\tselect {\n\t\tcase n := <-news:\n\t\t\tfmt.Println(n)\n\t\tcase <-time.After(time.Second * 1):\n\t\t\tfmt.Println(\"Timeout: News feed finished\")\n\t\t\treturn\n\t\t}\n\t}\n}\n\nfunc newsFeed(ch chan string) {\n\tfor i := 0; i < 2; i++ {\n\t\ttime.Sleep(time.Millisecond * 400)\n\t\tch <- fmt.Sprintf(\"News: %d\", i+1)\n\t}\n}\n```", "```\nNews: 1\nNews: 2\nTimeout: News feed finished\n```"]