["```\nInput: [1,2,3]\nOutput: [1,3,2]\n\nInput: [2,1]\nOutput: [2,1]\n\nInput: [1, 3, 5, 4, 1]\nOutput: [1, 4, 1, 3, 5]\n\nInput: [1, 3, 2]\nOutput: [2, 1, 3]\n```", "```\npackage main\n\nimport (\n\t\"fmt\"\n\t\"sort\"\n)\n\nfunc main() {\n\tnextPermutation([]int{1, 2, 3})\n\n\tnextPermutation([]int{2, 1})\n\n\tnextPermutation([]int{1, 3, 5, 4, 1})\n\n\tnextPermutation([]int{1, 3, 2})\n}\n\nfunc nextPermutation(nums []int) {\n\n\tnumsLen := len(nums)\n\tfirst := -1\n\tsecond := -1\n\n\tfor i, j := numsLen-2, numsLen-1; i >= 0; {\n\t\tif nums[i] < nums[j] {\n\t\t\tfirst = i\n\t\t\tsecond = j\n\t\t\tbreak\n\t\t} else {\n\t\t\ti--\n\t\t\tj--\n\t\t}\n\t}\n\n\tif !(first == -1) {\n\t\tsmallestGreaterIndex := second\n\t\tfor i := second + 1; i < numsLen; i++ {\n\t\t\tif nums[i] > nums[first] && nums[i] < nums[smallestGreaterIndex] {\n\t\t\t\tsmallestGreaterIndex = i\n\t\t\t}\n\t\t}\n\t\tnums[first], nums[smallestGreaterIndex] = nums[smallestGreaterIndex], nums[first]\n\n\t\tsort.Slice(nums[second:numsLen], func(i, j int) bool {\n\t\t\treturn nums[second+i] < nums[second+j]\n\t\t})\n\t}\n\n\tfmt.Println(nums)\n\n}\n```", "```\n[1 3 2]\n[2 1]\n[1 4 1 3 5]\n[2 1 3]\n```"]