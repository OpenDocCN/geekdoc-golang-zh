["```\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n    var aaa int\n    fmt.Println(aaa)\n}\n```", "```\n0\n```", "```\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n    var aaa int = 8\n    fmt.Println(aaa)\n}\n```", "```\n8\n```", "```\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n    var aaa, bbb int\n    fmt.Println(aaa)\n    fmt.Println(bbb)\n}\n```", "```\n0\n0\n```", "```\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n    var aaa, bbb int = 8, 9\n    fmt.Println(aaa)\n    fmt.Println(bbb)\n}\n```", "```\n8\n9\n```", "```\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n    var (\n        aaa int\n        bbb int    = 8\n        ccc string = \"a\"\n    )\n\n    fmt.Println(aaa)\n    fmt.Println(bbb)\n    fmt.Println(ccc)\n}\n```", "```\n0\n8\na\n```", "```\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n    var t = 123      //Type Inferred will be int\n    var u = \"circle\" //Type Inferred will be string\n    var v = 5.6      //Type Inferred will be float64\n    var w = true     //Type Inferred will be bool\n    var x = 'a'      //Type Inferred will be rune\n    var y = 3 + 5i   //Type Inferred will be complex128\n    var z = sample{name: \"test\"}  //Type Inferred will be main.Sample\n\n    fmt.Printf(\"Type: %T Value: %v\\n\", t, t)\n    fmt.Printf(\"Type: %T Value: %v\\n\", u, u)\n    fmt.Printf(\"Type: %T Value: %v\\n\", v, v)\n    fmt.Printf(\"Type: %T Value: %v\\n\", w, w)\n    fmt.Printf(\"Type: %T Value: %v\\n\", x, x)\n    fmt.Printf(\"Type: %T Value: %v\\n\", y, y)\n    fmt.Printf(\"Type: %T Value: %v\\n\", z, z)\n}\n\ntype sample struct {\n    name string\n}\n```", "```\nType: int Value: 123\nType: string Value: circle\nType: float64 Value: 5.6\nType: bool Value: true\nType: int32 Value: 97\nType: complex128 Value: (3+5i)\nType: main.sample Value: &{test}\n```", "```\n <variable_name>:= <value></value></variable_name>\n```", "```\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n    t := 123      //Type Inferred will be int\n    u := \"circle\" //Type Inferred will be string\n    v := 5.6      //Type Inferred will be float64\n    w := true     //Type Inferred will be bool\n    x := 'a'      //Type Inferred will be rune\n    y := 3 + 5i   //Type Inferred will be complex128\n    z := sample{name: \"test\"}  //Type Inferred will be main.Sample\n\n    fmt.Printf(\"Type: %T Value: %v\\n\", t, t)\n    fmt.Printf(\"Type: %T Value: %v\\n\", u, u)\n    fmt.Printf(\"Type: %T Value: %v\\n\", v, v)\n    fmt.Printf(\"Type: %T Value: %v\\n\", w, w)\n    fmt.Printf(\"Type: %T Value: %v\\n\", x, x)\n    fmt.Printf(\"Type: %T Value: %v\\n\", y, y)\n    fmt.Printf(\"Type: %T Value: %v\\n\", z, z)\n}\n\ntype sample struct {\n    name string\n}\n```", "```\nType: int Value: 123\nType: string Value: circle\nType: float64 Value: 5.6\nType: bool Value: true\nType: int32 Value: 97\nType: complex128 Value: (3+5i)\nType: main.sample Value: &{test}\n```", "```\na := 8\na := 16\n```", "```\na,b := 1, 2\n```", "```\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n    a, b := 1, 2\n    b, c := 3, 4\n    fmt.Println(a, b, c)\n}\n```", "```\n1, 3, 4\n```", "```\na declared but not used\n```", "```\npackage main\n\nfunc main() {\n    var a = 1\n}\n```", "```\npackage main\n\nimport \"fmt\"\n\nvar a = 123\n\nfunc main() {\n    var a = 456\n    fmt.Println(a)\n}\n```", "```\n456\n```", "```\npackage main\nimport (\n    \"fmt\"\n    \"math\"\n)\nfunc main() {\n    a := 5 + 3\n    b := math.Max(4, 5)\n    fmt.Println(a)\n    fmt.Println(b)\n}\n```", "```\n8\n5\n```", "```\npackage main\n\nfunc main() {\n    var aaa int = 1\n    aaa = \"atest\"\n\n    bbb := 1\n    bbb = \"btest\"\n}\n```", "```\ncannot use \"atest\" (type untyped string) as type int in assignment\ncannot use \"btest\" (type untyped string) as type int in assignment\n```", "```\nundefined: i\nundefined: aaa\n```", "```\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n    var aaa = \"test\"\n    fmt.Println(aaa)\n    for i := 0; i < 3; i++ {\n        fmt.Println(i)\n    }\n    fmt.Println(i)\n}\n\nfunc testLocal() {\n    fmt.Println(aaa)\n}\n```", "```\npackage main\n\nimport \"fmt\"\n\nvar aaa = \"test\"\n\nfunc main() {\n    testGlobal()\n}\n\nfunc testGlobal() {\n    fmt.Println(aaa)\n}\n```", "```\ntest\n```"]