["```\ns1: aabcc\ns2: dbbca\ns3: aadbbcbcac\n\nOutput: true\n```", "```\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\toutput := isInterleave(\"aabcc\", \"dbbca\", \"aadbbcbcac\")\n\tfmt.Println(output)\n\n\toutput = isInterleave(\"\", \"\", \"\")\n\tfmt.Println(output)\n}\nfunc isInterleave(s1 string, s2 string, s3 string) bool {\n\ts1Rune := []rune(s1)\n\ts2Rune := []rune(s2)\n\ts3Rune := []rune(s3)\n\n\tlenS1 := len(s1Rune)\n\tlenS2 := len(s2Rune)\n\tlenS3 := len(s3Rune)\n\n\tif lenS1+lenS2 != lenS3 {\n\t\treturn false\n\t}\n\n\treturn isInterleaveUtil(s1Rune, s2Rune, s3Rune, 0, 0, 0, lenS1, lenS2, lenS3)\n}\n\nfunc isInterleaveUtil(s1, s2, s3 []rune, x, y, z, lenS1, lenS2, lenS3 int) bool {\n\tif x == lenS1 && y == lenS2 && z == lenS3 {\n\t\treturn true\n\t}\n\n\tif x < lenS1 && z < lenS3 && s1[x] == s3[z] {\n\t\tmatch := isInterleaveUtil(s1, s2, s3, x+1, y, z+1, lenS1, lenS2, lenS3)\n\t\tif match {\n\t\t\treturn true\n\t\t}\n\t}\n\n\tif y < lenS2 && z < lenS3 && s2[y] == s3[z] {\n\t\treturn isInterleaveUtil(s1, s2, s3, x, y+1, z+1, lenS1, lenS2, lenS3)\n\n\t}\n\treturn false\n}\n```", "```\ntrue\ntrue\n```", "```\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\toutput := isInterleave(\"aabcc\", \"dbbca\", \"aadbbcbcac\")\n\tfmt.Println(output)\n\n\toutput = isInterleave(\"\", \"\", \"\")\n\tfmt.Println(output)\n}\nfunc isInterleave(s1 string, s2 string, s3 string) bool {\n\ts1Rune := []rune(s1)\n\ts2Rune := []rune(s2)\n\ts3Rune := []rune(s3)\n\n\tlenS1 := len(s1Rune)\n\tlenS2 := len(s2Rune)\n\tlenS3 := len(s3Rune)\n\n\tif lenS1+lenS2 != lenS3 {\n\t\treturn false\n\t}\n\n\tinterleavingMatrix := make([][]bool, lenS1+1)\n\n\tfor i := range interleavingMatrix {\n\t\tinterleavingMatrix[i] = make([]bool, lenS2+1)\n\t}\n\n\ti := 1\n\tk := 1\n\n\tinterleavingMatrix[0][0] = true\n\n\tfor i <= lenS1 && k <= lenS3 {\n\t\tif s1Rune[i-1] == s3Rune[k-1] {\n\t\t\tinterleavingMatrix[i][0] = true\n\t\t\ti++\n\t\t\tk++\n\t\t} else {\n\t\t\tbreak\n\t\t}\n\t}\n\n\ti = 1\n\tk = 1\n\n\tfor i <= lenS2 && k <= lenS3 {\n\t\tif s2Rune[i-1] == s3Rune[k-1] {\n\t\t\tinterleavingMatrix[0][i] = true\n\t\t\ti++\n\t\t\tk++\n\t\t} else {\n\t\t\tbreak\n\t\t}\n\t}\n\n\tfor i := 1; i <= lenS1; i++ {\n\t\tfor j := 1; j <= lenS2; j++ {\n\n\t\t\tif s1Rune[i-1] == s3Rune[i+j-1] {\n\t\t\t\tinterleavingMatrix[i][j] = interleavingMatrix[i-1][j]\n\t\t\t}\n\n\t\t\tif s2Rune[j-1] == s3Rune[i+j-1] && !interleavingMatrix[i][j] {\n\t\t\t\tinterleavingMatrix[i][j] = interleavingMatrix[i][j-1]\n\t\t\t}\n\n\t\t}\n\t}\n\n\treturn interleavingMatrix[lenS1][lenS2]\n}\n```", "```\ntrue\ntrue\n```"]