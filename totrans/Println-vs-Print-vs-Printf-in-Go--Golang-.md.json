["```\nfunc Println(a ...interface{}) (n int, err error)\n```", "```\n%v\n```", "```\npackage main\nimport \"fmt\"\ntype employee struct {\n    Name string\n    Age  int\n}\nfunc main() {\n    name := \"John\"\n    age := 21\n    fmt.Println(\"Name is: \", name)\n    fmt.Println(\"Age is: \", age)\n    e := employee{\n        Name: name,\n        Age:  age,\n    }\n    fmt.Println(e)\n    fmt.Println(\"a\", 12, \"b\", 12.0)\n\n    bytesPrinted, err := fmt.Println(\"Name is: \", name)\n    if err != nil {\n\tlog.Fatalln(\"Error occured\", err)\n    }\n    fmt.Println(bytesPrinted)\n}\n```", "```\nName is: John\nAge is: 21\n{John 21}\na 12 b 12\nName is: John\n14\n```", "```\nfmt.Println(\"Name is: \", name)\n```", "```\nName is: John\n```", "```\nbytesPrinted, err := fmt.Println(\"Name is: \", name)\nif err != nil {\n    log.Fatalln(\"Error occured\", err)\n}\nfmt.Println(bytesPrinted)\n```", "```\nName is: John\n14\n```", "```\nfunc Print(a ...interface{}) (n int, err error)\n```", "```\npackage main\n\nimport \"fmt\"\n\ntype employee struct {\n\tName string\n\tAge  int\n}\n\nfunc main() {\n\tname := \"John\"\n\tage := 21\n\tfmt.Print(\"Name is:\", name, \"\\n\")\n\tfmt.Print(\"Age is:\", age, \"\\n\")\n\n\te := employee{\n\t\tName: name,\n\t\tAge:  age,\n\t}\n\n\tfmt.Print(e, \"\\n\")\n\n\tfmt.Print(\"a\", 12, \"b\", 12.0, \"\\n\")\n\n\tfmt.Print(12, 12.0, \"\\n\")\n\n        bytesPrinted, err := fmt.Print(\"Name is: \", name, \"\\n\")\n\tif err != nil {\n\t\tlog.Fatalln(\"Error occured\", err)\n\t}\n\tfmt.Print(bytesPrinted)\n}\n```", "```\nName is:John\nAge is:21\n{John 21}\na12b12\n12 12\nName is: John\n14\n```", "```\nfmt.Print(12, 12.0, \"\\n\")\n```", "```\n12 12\n```", "```\nfmt.Print(\"a\", 12, \"b\", 12.0, \"\\n\")\n```", "```\na12b12\n```", "```\nfunc Printf(format string, a ...interface{}) (n int, err error)\n```", "```\nname := \"John\"\nfmt.Printf(\"Name is: %s\\n\", name)\n```", "```\nage := 21\nfmt.Printf(\"Age is: %d\\n\", age)\n```", "```\nfmt.Printf(\"Employee is %v\\n\", e)\nfmt.Printf(\"Employee is %+v\\n\", e)\nfmt.Printf(\"Employee is %#v\\n\", e)\n```", "```\nEmployee is {John 21}\nEmployee is {Name:John Age:21}\nEmployee is main.employee{Name:\"John\", Age:21}\n```", "```\npackage main\n\nimport (\n\t\"fmt\"\n\t\"log\"\n)\n\ntype employee struct {\n\tName string\n\tAge  int\n}\n\nfunc main() {\n\tname := \"John\"\n\tage := 21\n\n\tfmt.Printf(\"Name is: %s\\n\", name)\n\tfmt.Printf(\"Age is: %d\\n\", age)\n\n\tfmt.Printf(\"Name: %s Age: %d\\n\", name, age)\n\n\te := employee{\n\t\tName: name,\n\t\tAge:  age,\n\t}\n\n\tfmt.Printf(\"Employee is %v\\n\", e)\n\tfmt.Printf(\"Employee is %+v\\n\", e)\n\tfmt.Printf(\"Employee is %#v\\n\", e)\n\n\tbytesPrinted, err := fmt.Printf(\"Name is: %s\\n\", name)\n\tif err != nil {\n\t\tlog.Fatalln(\"Error occured\", err)\n\t}\n\tfmt.Println(bytesPrinted)\n}\n```", "```\nName is: John\nAge is: 21\nName: John Age: 21\nEmployee is {John 21}\nEmployee is {Name:John Age:21}\nEmployee is main.employee{Name:\"John\", Age:21}\nName is: John\n14\n```", "```\nfmt.Printf(\"Name: %s Age: %d\\n\", name, age)\n```", "```\npackage main\nimport \"fmt\"\ntype employee struct {\n    Name string\n    Age  int\n}\nfunc main() {\n    name := \"John\"\n    fmt.Printf(\"Name is: %s %d\\n\", name)\n}\n```", "```\nName is: John %!d(MISSING)\n```"]