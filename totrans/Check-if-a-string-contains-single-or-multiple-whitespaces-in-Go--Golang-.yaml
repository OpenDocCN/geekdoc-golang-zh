- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 类别：未分类
- en: 'date: 2024-10-13 06:52:44'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-10-13 06:52:44
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Check if a string contains single or multiple whitespaces in Go (Golang)
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检查字符串在 Go (Golang) 中是否包含单个或多个空格
- en: 来源：[https://golangbyexample.com/string-whitespace-golang/](https://golangbyexample.com/string-whitespace-golang/)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://golangbyexample.com/string-whitespace-golang/](https://golangbyexample.com/string-whitespace-golang/)
- en: Table of Contents
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 目录
- en: '**   [Overview](#Overview "Overview")'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**   [概述](#Overview "Overview")'
- en: '[Program](#Program "Program")*  *# **Overview**'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[程序](#Program "Program")*  *# **概述**'
- en: A simple regex can be used to check if a string contains single or multiple
    white spaces in Go.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用简单的正则表达式来检查字符串在 Go 中是否包含单个或多个空格。
- en: Here is the program for the same
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这是相同的程序
- en: '**Program**'
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**程序**'
- en: '[PRE0]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '**Output**'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出**'
- en: '[PRE1]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**Note:** Check out our Golang Advanced Tutorial. The tutorials in this series
    are elaborative and we have tried to cover all concepts with examples. This tutorial
    is for those who are looking to gain expertise and a solid understanding of golang
    – [Golang Advance Tutorial](https://golangbyexample.com/golang-comprehensive-tutorial/)'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意：** 请查看我们的 Golang 高级教程。该系列教程内容详尽，我们尝试用例子覆盖所有概念。本教程适合那些希望获得专业知识和对 Golang
    有深入理解的人— [Golang 高级教程](https://golangbyexample.com/golang-comprehensive-tutorial/)'
- en: Also if you are interested in understanding how all design patterns can be implemented
    in Golang. If yes, then this post is for you –
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有兴趣了解所有设计模式如何在Golang中实现。如果是的话，那么这篇文章就是为你准备的—
- en: '[All Design Patterns Golang](https://golangbyexample.com/all-design-patterns-golang/)'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[所有设计模式 Golang](https://golangbyexample.com/all-design-patterns-golang/)'
- en: '**Note:** Check out our system design tutorial series [System Design Questions](https://techbyexample.com/system-design-questions/)'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意：** 请查看我们的系统设计教程系列 [系统设计问题](https://techbyexample.com/system-design-questions/)'
- en: '[go](https://golangbyexample.com/tag/go/)*   [golang](https://golangbyexample.com/tag/golang/)*'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[go](https://golangbyexample.com/tag/go/)*   [golang](https://golangbyexample.com/tag/golang/)*'
