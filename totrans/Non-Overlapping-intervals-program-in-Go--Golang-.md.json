["```\nInput: intervals = [[2,3],[3,4],[4,5],[2,4]]\nOutput: 1\nExplanation: [2,4] can be removed and the rest of the intervals are non-overlapping.\n```", "```\npackage main\n\nimport (\n\t\"fmt\"\n\t\"sort\"\n)\n\nfunc eraseOverlapIntervals(intervals [][]int) int {\n\tlenIntervals := len(intervals)\n\n\tsort.Slice(intervals, func(i, j int) bool {\n\t\treturn intervals[i][0] < intervals[j][0]\n\t})\n\n\tprevIntervalEnd := intervals[0][1]\n\n\tminIntervals := 0\n\tfor i := 1; i < lenIntervals; i++ {\n\t\tcurrentIntervalStart := intervals[i][0]\n\t\tcurrentIntervalEnd := intervals[i][1]\n\n\t\tif currentIntervalStart < prevIntervalEnd {\n\t\t\tminIntervals++\n\t\t\tif prevIntervalEnd >= currentIntervalEnd {\n\t\t\t\tprevIntervalEnd = currentIntervalEnd\n\t\t\t}\n\t\t} else {\n\t\t\tprevIntervalEnd = currentIntervalEnd\n\t\t}\n\t}\n\treturn minIntervals\n}\n\nfunc main() {\n\n\toutput := eraseOverlapIntervals([][]int{{2, 3}, {3, 4}, {4, 5}, {2, 4}})\n\tfmt.Println(output)\n}\n```", "```\n6\n13\n```"]