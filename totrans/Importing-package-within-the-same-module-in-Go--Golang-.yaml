- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-10-13 06:29:32'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: Importing package within the same module in Go (Golang)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://golangbyexample.com/importing-package-same-module-go/](https://golangbyexample.com/importing-package-same-module-go/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Any package within the same module can be imported using the import path of
    module + directory containing that package. To illustrate lets create a module
  prefs: []
  type: TYPE_NORMAL
- en: Make a **learn** directory
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Create a module with an import path as **“learn”**
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Now create main.go (Having main package and main function)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: And math/math.go – math package
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**main.go**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '**math/math.go**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: See how we have imported the math package in the main.go file
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Here the import path is import path of module which is **learn** +  directory
    containing the package which is **math.** Hence “learn/math” . Packages in nested
    directory can also be imported in the same way. The way it works is that since
    the prefix is the module import path, hence go will know that you are trying to
    import from the same module. So it will directly refer it instead of downloading
    it.
  prefs: []
  type: TYPE_NORMAL
- en: '[go](https://golangbyexample.com/tag/go/)*   [golang](https://golangbyexample.com/tag/golang/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
