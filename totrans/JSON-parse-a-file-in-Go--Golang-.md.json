["```\nfunc Unmarshal(data []byte, v interface{}) error\n```", "```\n{\"Name\":\"John\",\"Age\":21}\n```", "```\npackage main\n\nimport (\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"io/ioutil\"\n\t\"log\"\n)\n\ntype employee struct {\n\tName string `json:\"Name\"`\n\tAge  int    `json:\"Age\"`\n}\n\nfunc main() {\n\n\tvar emp employee\n\tfile, err := ioutil.ReadFile(\"employee.json\")\n\tif err != nil {\n\t\tlog.Fatalf(\"Some error occured while reading file. Error: %s\", err)\n\t}\n\terr = json.Unmarshal([]byte(file), &emp)\n\tif err != nil {\n\t\tlog.Fatalf(\"Error occured during unmarshaling. Error: %s\", err.Error())\n\t}\n\tfmt.Printf(\"emp Struct: %#v\\n\", emp)\n}\n```", "```\nemp Struct: main.employee{Name:\"John\", Age:21}\n```", "```\ntype employee struct {\n\tName string `json:\"Name\"`\n\tAge  int    `json:\"Age\"`\n}\n```", "```\nerr = json.Unmarshal([]byte(file), &emp)\n```", "```\n{\"1\":\"John\", \"2\": \"Simon\"}\n```", "```\npackage main\n\nimport (\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"io/ioutil\"\n\t\"log\"\n)\n\nfunc main() {\n\ta := make(map[int]string)\n\n\tfile, err := ioutil.ReadFile(\"temp.json\")\n\tif err != nil {\n\t\tlog.Fatalf(\"Error occured during unmarshaling. Error: %s\", err.Error())\n\t}\n\tjson.Unmarshal([]byte(file), &a)\n\n\tfmt.Println(a)\n}\n```", "```\nmap[1:John 2:Simon]\n```"]