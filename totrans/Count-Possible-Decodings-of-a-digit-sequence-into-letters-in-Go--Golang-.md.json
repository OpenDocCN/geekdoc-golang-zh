["```\n'A' -> \"1\"\n'B' -> \"2\"\n...\n'Z' -> \"26\"\n```", "```\nInput: '15'\nOutput: 2\n\n15 can be decoded as \"AE\" or \"O\"\n```", "```\npackage main\n\nimport (\n\t\"fmt\"\n\t\"strconv\"\n)\n\nfunc numDecodings(s string) int {\n\n\truneArray := []rune(s)\n\tlength := len(runeArray)\n\tif length == 0 {\n\t\treturn 0\n\t}\n\n\tif string(runeArray[0]) == \"0\" {\n\t\treturn 0\n\t}\n\n\tnumwaysArray := make([]int, length)\n\n\tnumwaysArray[0] = 1\n\n\tif length == 1 {\n\t\treturn numwaysArray[0]\n\t}\n\n\tsecondDigit := string(runeArray[0:2])\n\tnum, _ := strconv.Atoi(secondDigit)\n\tif num > 10 && num <= 19 {\n\t\tnumwaysArray[1] = 2\n\t} else if num > 20 && num <= 26 {\n\t\tnumwaysArray[1] = 2\n\t} else if num == 10 || num == 20 {\n\t\tnumwaysArray[1] = 1\n\t} else if num%10 == 0 {\n\t\tnumwaysArray[1] = 0\n\t} else {\n\t\tnumwaysArray[1] = 1\n\t}\n\n\tfor i := 2; i < length; i++ {\n\t\tfirstDigit := string(runeArray[i])\n\t\tif firstDigit != \"0\" {\n\t\t\tnumwaysArray[i] = numwaysArray[i] + numwaysArray[i-1]\n\t\t}\n\n\t\tsecondDigit := string(runeArray[i-1 : i+1])\n\t\tfmt.Println(i)\n\t\tfmt.Println(secondDigit)\n\n\t\tnum, _ := strconv.Atoi(secondDigit)\n\n\t\tif num >= 10 && num <= 26 {\n\t\t\tnumwaysArray[i] = numwaysArray[i] + numwaysArray[i-2]\n\t\t}\n\t}\n\n\treturn numwaysArray[length-1]\n\n}\n\nfunc main() {\n\toutput := numDecodings(\"15\")\n\tfmt.Println(output)\n}\n```", "```\n2\n```"]