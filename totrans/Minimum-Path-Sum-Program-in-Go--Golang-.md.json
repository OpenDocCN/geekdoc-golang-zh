["```\n[{0,0}, {1,0}, {1,1}, {2,1}, {2,2}\n```", "```\npackage main\n\nimport \"fmt\"\n\nfunc minPathSum(grid [][]int) int {\n\trows := len(grid)\n\tcolumns := len(grid[0])\n\tsums := make([][]int, rows)\n\n\tfor i := 0; i < rows; i++ {\n\t\tsums[i] = make([]int, columns)\n\t}\n\n\tsums[0][0] = grid[0][0]\n\n\tfor i := 1; i < rows; i++ {\n\t\tsums[i][0] = grid[i][0] + sums[i-1][0]\n\t}\n\n\tfor i := 1; i < columns; i++ {\n\t\tsums[0][i] = grid[0][i] + sums[0][i-1]\n\t}\n\n\tfor i := 1; i < rows; i++ {\n\t\tfor j := 1; j < columns; j++ {\n\t\t\tif sums[i-1][j] < sums[i][j-1] {\n\t\t\t\tsums[i][j] = grid[i][j] + sums[i-1][j]\n\t\t\t} else {\n\t\t\t\tsums[i][j] = grid[i][j] + sums[i][j-1]\n\t\t\t}\n\t\t}\n\t}\n\n\treturn sums[rows-1][columns-1]\n\n}\n\nfunc main() {\n\tinput := [][]int{{1, 4, 2}, {1, 3, 2}, {2, 2, 1}}\n\toutput := minPathSum(input)\n\tfmt.Println(output)\n}\n```", "```\n7\n```"]