- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-10-13 06:06:37'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: Hex and Octal in Golang
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://golangbyexample.com/hex-and-octal-in-golang/](https://golangbyexample.com/hex-and-octal-in-golang/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Table of Contents
  prefs: []
  type: TYPE_NORMAL
- en: '**   [Overview](#Overview "Overview")'
  prefs: []
  type: TYPE_NORMAL
- en: '[Hex Numbers](#Hex_Numbers "Hex Numbers")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Octal Numbers](#Octal_Numbers "Octal Numbers")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Combined Example of Octal and Hex](#Combined_Example_of_Octal_and_Hex "Combined
    Example of Octal and Hex")*  *# **Overview**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hex numbers are base 16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Octal numbers are base 8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Hex Numbers**'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Hex numbers can be written using prefix 0x or 0X in GO. When Go sees any number
    starting with 0x or 0X, it treats it as a hexadecimal number. In the below example,
    we added  **0x14** in hexadecimal to number 10\. **0x14** in hexadecimal is equal
    to **20** in decimal. Therefore the output will be 30\. See conversion table –
    [https://ascii.cl/conversion.htm](https://ascii.cl/conversion.htm)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '**Output:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '**Octal Numbers**'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Octal numbers can be written using prefix **0** in Go. When Go sees any number
    starting with **0**, it treats it as a octal number. In the below example, we
    added  **024** in **octal** to 10\. **024** in **octal** is equal to **20** in
    decimal. Therefore the output will be 30
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**Output:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '**Combined Example of Octal and Hex**'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the below example, **0x14** in **hexa** is added to **024** in **octa** and
    **10**. **0x14** in **hexa** is equal to **20** in **decimal**. **024** in **octal**
    is equal to **20** in **decimal**. Therefore the output is 50
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '**Output:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '[golang](https://golangbyexample.com/tag/golang/)*   [hex](https://golangbyexample.com/tag/hex/)*   [octal](https://golangbyexample.com/tag/octal/)*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
