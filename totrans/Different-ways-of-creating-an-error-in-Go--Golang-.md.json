["```\ntype error interface {  \n    Error() string\n}\n```", "```\npackage main\n\nimport (\n    \"errors\"\n    \"fmt\"\n)\n\nfunc main() {\n    sampleErr := errors.New(\"error occured\")\n    fmt.Println(sampleErr)\n}\n```", "```\nerror occured\n```", "```\npackage main\n\nimport (\n    \"fmt\"\n)\n\nfunc main() {\n    sampleErr := fmt.Errorf(\"Err is: %s\", \"database connection issue\")\n    fmt.Println(sampleErr)\n}\n```", "```\nErr is: database connection issue\n```", "```\npackage main\n\nimport \"fmt\"\n\ntype inputError struct {\n    message      string\n    missingField string\n}\n\nfunc (i *inputError) Error() string {\n    return i.message\n}\n\nfunc (i *inputError) getMissingField() string {\n    return i.missingField\n}\n\nfunc main() {\n    err := validate(\"\", \"\")\n    if err != nil {\n        if err, ok := err.(*inputError); ok {\n            fmt.Println(err)\n            fmt.Printf(\"Missing Field is %s\\n\", err.getMissingField())\n        }\n    }\n}\n\nfunc validate(name, gender string) error {\n    if name == \"\" {\n        return &inputError{message: \"Name is mandatory\", missingField: \"name\"}\n    }\n    if gender == \"\" {\n        return &inputError{message: \"Gender is mandatory\", missingField: \"gender\"}\n    }\n    return nil\n}\n```", "```\nName is mandatory\nMissing Field is name\n```"]