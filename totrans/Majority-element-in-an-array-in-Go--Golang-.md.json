["```\nInput: [2, 1, 2, 2, 3]\nOutput: 2\n```", "```\nInput: [1]\nOutput: 1\n```", "```\npackage main\n\nimport \"fmt\"\n\nfunc majorityElement(nums []int) int {\n\tlenNums := len(nums)\n\n\tif lenNums == 1 {\n\t\treturn nums[0]\n\t}\n\n\tnumsMap := make(map[int]int)\n\n\tfor i := 0; i < lenNums; i++ {\n\t\t_, ok := numsMap[nums[i]]\n\t\tif ok {\n\t\t\tnumsMap[nums[i]] = numsMap[nums[i]] + 1\n\t\t\tif numsMap[nums[i]] > lenNums/2 {\n\t\t\t\treturn nums[i]\n\t\t\t}\n\t\t} else {\n\t\t\tnumsMap[nums[i]] = 1\n\t\t}\n\t}\n\n\treturn 0\n\n}\n\nfunc main() {\n\toutput := majorityElement([]int{2, 1, 2, 2, 3})\n\tfmt.Println(output)\n\n\toutput = majorityElement([]int{1})\n\tfmt.Println(output)\n}\n```", "```\n2\n1\n```"]