["```\nInput: [4,7,3,8,2,1]\nOutput: 4\nReason: The longest consecutive sequence is [1,2,3,4]\n```", "```\nInput: [4,7,3,8,2,1,9,24,10,11]\nOutput: 5\nReason: The longest consecutive sequence is [7,8,9,10,11]\n```", "```\npackage main\n\nimport \"fmt\"\n\nfunc longestConsecutive(nums []int) int {\n\tnumsMap := make(map[int]int)\n\n\tlenNums := len(nums)\n\n\tfor i := 0; i < lenNums; i++ {\n\t\tnumsMap[nums[i]] = 0\n\t}\n\n\tmaxLCS := 0\n\tfor i := 0; i < lenNums; i++ {\n\t\tcurrentLen := 1\n\t\tcounter := 1\n\n\t\tfor {\n\t\t\tval, ok := numsMap[nums[i]+counter]\n\t\t\tif ok {\n\t\t\t\tif val != 0 {\n\t\t\t\t\tcurrentLen += val\n\t\t\t\t\tbreak\n\t\t\t\t} else {\n\t\t\t\t\tcurrentLen += 1\n\t\t\t\t\tcounter += 1\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\n\t\tif currentLen > maxLCS {\n\t\t\tmaxLCS = currentLen\n\t\t}\n\t\tnumsMap[nums[i]] = currentLen\n\t}\n\n\treturn maxLCS\n}\n\nfunc main() {\n\toutput := longestConsecutive([]int{4, 7, 3, 8, 2, 1})\n\tfmt.Println(output)\n\n\toutput = longestConsecutive([]int{4, 7, 3, 8, 2, 1, 9, 24, 10, 11})\n\tfmt.Println(output)\n\n}\n```", "```\n4\n5\n```"]