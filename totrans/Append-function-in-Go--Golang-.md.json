["```\nfunc append(slice []Type, elems ...Type) []Type\n```", "```\nelems ...Type\n```", "```\nnumbers := []int{1,2}\nnumbers := append(numbers, 4) //Slice will become [1, 2, 3, 4]\n```", "```\nnumbers := []int{1,2}\nnumbers := append(numbers, 3, 4, 5) //Slice will become [1, 2, 3, 4, 5]\n```", "```\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n    numbers := make([]int, 3, 5)\n    numbers[0] = 1\n    numbers[1] = 2\n    numbers[2] = 3\n    fmt.Printf(\"numbers=%v\\n\", numbers)\n    fmt.Printf(\"length=%d\\n\", len(numbers))\n    fmt.Printf(\"capacity=%d\\n\", cap(numbers))\n\n    //Append number 4\n    numbers = append(numbers, 4)\n    fmt.Println(\"\\nAppend Number 4\")\n    fmt.Printf(\"numbers=%v\\n\", numbers)\n    fmt.Printf(\"length=%d\\n\", len(numbers))\n    fmt.Printf(\"capacity=%d\\n\", cap(numbers))\n\n    //Append number 5\n    numbers = append(numbers, 4)\n    fmt.Println(\"\\nAppend Number 5\")\n    fmt.Printf(\"numbers=%v\\n\", numbers)\n    fmt.Printf(\"length=%d\\n\", len(numbers))\n    fmt.Printf(\"capacity=%d\\n\", cap(numbers))\n}\n```", "```\nnumbers=[1 2 3]\nlength=3\ncapacity=5\n\nAppend Number 4\nnumbers=[1 2 3 4]\nlength=4\ncapacity=5\n\nAppend Number 5\nnumbers=[1 2 3 4 4]\nlength=5\ncapacity=5\n```", "```\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n    numbers := make([]int, 3, 3)\n    numbers[0] = 1\n    numbers[1] = 2\n    numbers[2] = 3\n\n    fmt.Printf(\"numbers=%v\\n\", numbers)\n    fmt.Printf(\"length=%d\\n\", len(numbers))\n    fmt.Printf(\"capacity=%d\\n\", cap(numbers))\n\n    //Append number 4\n    numbers = append(numbers, 4)\n    fmt.Println(\"\\nAppend Number 4\")\n    fmt.Printf(\"numbers=%v\\n\", numbers)\n    fmt.Printf(\"length=%d\\n\", len(numbers))\n    fmt.Printf(\"capacity=%d\\n\", cap(numbers))\n}\n```", "```\nnumbers=[1 2 3]\nlength=3\ncapacity=3\n\nAppend Number 4\nnumbers=[1 2 3 4]\nlength=4\ncapacity=6\n```", "```\nres := append(slice1, slice2...)\n```", "```\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n    numbers1 := []int{1, 2}\n    numbers2 := []int{3, 4}\n    numbers := append(numbers1, numbers2...)\n    fmt.Printf(\"numbers=%v\\n\", numbers)\n    fmt.Printf(\"length=%d\\n\", len(numbers))\n    fmt.Printf(\"capacity=%d\\n\", cap(numbers))\n}\n```", "```\nnumbers=[1 2 3 4]\nlength=4\ncapacity=4\n```", "```\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n    sample := \"Hello\"\n    suffix := \"World\"\n\n    result := append([]byte(sample), suffix...)\n    fmt.Printf(\"sample: %s\\n\", string(result))\n}\n```", "```\nsample: HelloWorld\n```"]