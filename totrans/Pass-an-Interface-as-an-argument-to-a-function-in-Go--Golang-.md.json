["```\ntype animal interface {\n    breathe()\n    walk()\n}\n```", "```\ntype lion struct {\n    age int\n}\n```", "```\ntype dog struct {\n     age int\n}\n```", "```\npackage main\n\nimport \"fmt\"\n\ntype animal interface {\n\tbreathe()\n\twalk()\n}\n\ntype lion struct {\n     age int\n}\n\nfunc (l lion) breathe() {\n\tfmt.Println(\"Lion breathes\")\n}\n\nfunc (l lion) walk() {\n\tfmt.Println(\"Lion walk\")\n}\n\ntype dog struct {\n     age int\n}\n\nfunc (l dog) breathe() {\n\tfmt.Println(\"Dog breathes\")\n}\n\nfunc (l dog) walk() {\n\tfmt.Println(\"Dog walk\")\n}\n\nfunc main() {\n\tl := lion{age: 10}\n\tcallBreathe(l)\n\tcallWalk(l)\n\n\td := dog{age: 5}\n\tcallBreathe(d)\n\tcallWalk(d)\n}\n\nfunc callBreathe(a animal) {\n\ta.breathe()\n}\n\nfunc callWalk(a animal) {\n\ta.breathe()\n}\n```", "```\nLion breathes\nLion walk\nDog breathes\nDog walk\n```", "```\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n    test(\"thisisstring\")\n    test(\"10\")\n    test(true)\n}\n\nfunc test(a interface{}) {\n    fmt.Printf(\"(%v, %T)\\n\", a, a)\n}\n```", "```\n(thisisstring, string)\n(10, string)\n(true, bool)\n```"]