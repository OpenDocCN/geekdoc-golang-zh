- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2024-10-13 06:06:10'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: 2024-10-13 06:06:10'
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Sort a Custom Struct in Go (Golang)
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Go 中排序自定义结构（Golang）
- en: 来源：[https://golangbyexample.com/sort-custom-struct-collection-golang/](https://golangbyexample.com/sort-custom-struct-collection-golang/)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://golangbyexample.com/sort-custom-struct-collection-golang/](https://golangbyexample.com/sort-custom-struct-collection-golang/)
- en: Table of Contents
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 目录
- en: '**   [Introduction](#Introduction "Introduction")'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**   [介绍](#Introduction "介绍")'
- en: '[Full Working Code:](#Full_Working_Code "Full Working Code:")*  *# **Introduction**'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[完整工作代码：](#Full_Working_Code "完整工作代码：")*  *# **介绍**'
- en: GO has a **sort** package that provides utility primitives for the sorting of
    slices and user-defined types. Any collection can be sorted by the **Sort** function
    of **sort** package of GO it if implements the **sort.Interface**.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: GO 有一个 **sort** 包，提供了用于排序切片和用户定义类型的实用工具原语。任何集合只要实现了 **sort.Interface**，就可以通过
    GO 的 **sort** 包的 **Sort** 函数进行排序。
- en: Below are the methods of sort.Interface
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是 sort.Interface 的方法。
- en: '[https://golang.org/pkg/sort/#Interface](https://golang.org/pkg/sort/#Interface)'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://golang.org/pkg/sort/#Interface](https://golang.org/pkg/sort/#Interface)'
- en: '[PRE0]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Let’s see a working example to illustrate how we can use **sort.Interface**
    to sort a user-defined struct. In below example
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一个工作示例，说明如何使用 **sort.Interface** 对用户定义的结构体进行排序。在下面的示例中。
- en: We created a custom struct called **employee** with **name** and **salary**
    in dollars as fields
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们创建了一个名为 **employee** 的自定义结构，字段包括 **name** 和以美元为单位的 **salary**。
- en: We have a **employeeList** which hold the list of **employee**.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们有一个 **employeeList**，它保存 **employee** 的列表。
- en: '**employeeList** implements the **Len(), Less(), Swap()** method hence it implements
    the **sort.Interface**'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**employeeList** 实现了 **Len()、Less()、Swap()** 方法，因此它实现了 **sort.Interface**。'
- en: We sort the employee from highest salary to lowest salary. To sort employeeList
    we pass it to **sort.Sort()** function
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们按薪资从高到低对员工进行排序。要排序 **employeeList**，我们将其传递给 **sort.Sort()** 函数。
- en: '**Full Working Code:**'
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**完整工作代码：**'
- en: '[PRE1]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**Output:**'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出：**'
- en: '[PRE2]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: To sort from lowest salary to highest salary we need to change the **Less**
    function with **‘>’** sign
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 要从最低薪资排序到最高薪资，我们需要用 **‘>’** 符号更改 **Less** 函数。
- en: '[PRE3]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'After changing it when we run the program then output will be:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 修改后，当我们运行程序时，输出将是：
- en: '[PRE4]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[array](https://golangbyexample.com/tag/array/)*   [custom](https://golangbyexample.com/tag/custom/)*   [go](https://golangbyexample.com/tag/go/)*   [structs](https://golangbyexample.com/tag/structs/)*'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[array](https://golangbyexample.com/tag/array/)*   [custom](https://golangbyexample.com/tag/custom/)*   [go](https://golangbyexample.com/tag/go/)*   [structs](https://golangbyexample.com/tag/structs/)*'
