["```\nfunc Printf(format string, a ...interface{}) (n int, err error)\n```", "```\nname := \"John\"\nfmt.Printf(\"Name is: %s\\n\", name)\n```", "```\nage := 21\nfmt.Printf(\"Age is: %d\\n\", age)\n```", "```\nfmt.Printf(\"Employee is %v\\n\", e)\nfmt.Printf(\"Employee is %+v\\n\", e)\nfmt.Printf(\"Employee is %#v\\n\", e)\n```", "```\nEmployee is {John 21}\nEmployee is {Name:John Age:21}\nEmployee is main.employee{Name:\"John\", Age:21}\n```", "```\npackage main\n\nimport (\n\t\"fmt\"\n\t\"log\"\n)\n\ntype employee struct {\n\tName string\n\tAge  int\n}\n\nfunc main() {\n\tname := \"John\"\n\tage := 21\n\n\tfmt.Printf(\"Name is: %s\\n\", name)\n\tfmt.Printf(\"Age is: %d\\n\", age)\n\n\tfmt.Printf(\"Name: %s Age: %d\\n\", name, age)\n\n\te := employee{\n\t\tName: name,\n\t\tAge:  age,\n\t}\n\n\tfmt.Printf(\"Employee is %v\\n\", e)\n\tfmt.Printf(\"Employee is %+v\\n\", e)\n\tfmt.Printf(\"Employee is %#v\\n\", e)\n\n\tbytesPrinted, err := fmt.Printf(\"Name is: %s\\n\", name)\n\tif err != nil {\n\t\tlog.Fatalln(\"Error occured\", err)\n\t}\n\tfmt.Println(bytesPrinted)\n}\n```", "```\nName is: John\nAge is: 21\nName: John Age: 21\nEmployee is {John 21}\nEmployee is {Name:John Age:21}\nEmployee is main.employee{Name:\"John\", Age:21}\nName is: John\n14\n```", "```\nfmt.Printf(\"Name: %s Age: %d\\n\", name, age)\n```", "```\npackage main\nimport \"fmt\"\ntype employee struct {\n    Name string\n    Age  int\n}\nfunc main() {\n    name := \"John\"\n    fmt.Printf(\"Name is: %s %d\\n\", name)\n}\n```", "```\nName is: John %!d(MISSING)\n```"]