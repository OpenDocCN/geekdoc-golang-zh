- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 分类：未分类
- en: 'date: 2024-10-13 06:16:09'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-10-13 06:16:09
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Pick a random element in an array or slice in Go (Golang)
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Go (Golang) 中随机选择数组或切片中的元素
- en: 来源：[https://golangbyexample.com/pick-random-element-array-slice-go/](https://golangbyexample.com/pick-random-element-array-slice-go/)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://golangbyexample.com/pick-random-element-array-slice-go/](https://golangbyexample.com/pick-random-element-array-slice-go/)
- en: Table of Contents
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 目录
- en: '**   [Overview](#Overview "Overview")'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**   [概述](#Overview "Overview")'
- en: '[Code](#Code "Code")*  *# **Overview**'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[代码](#Code "Code")*  *# **概述**'
- en: '**‘mat/rand’** package of golang contains a **Intn** function that can be used
    to generate a pseudo-random number between [0,n). Bracket at the end means that
    n is exclusive. This function can be utilized to pick a random element in an array
    or slice of int or string.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: Go 的 **‘mat/rand’** 包包含一个 **Intn** 函数，可以用来生成一个在 [0,n) 范围内的伪随机数。末尾的括号意味着 n 是排除在外的。此函数可用于在整型或字符串的数组或切片中选择一个随机元素。
- en: To know more about what pseudo-random number means, checkout this post – [https://golangbyexample.com/generate-random-number-golang](https://golangbyexample.com/generate-random-number-golang)
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于伪随机数的含义，请查看这篇文章 – [https://golangbyexample.com/generate-random-number-golang](https://golangbyexample.com/generate-random-number-golang)
- en: Below is the signature of this method. It takes input a number n and will return
    a number x in range 0<=x<n.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是此方法的签名。它接收一个数字 n，并将返回一个范围在 0<=x<n 内的数字 x。
- en: '[PRE0]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '**Code**'
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**代码**'
- en: We can directly index an element in a slice of int. See below program for picking
    up random from a slice of int.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以直接通过索引在一个整型切片中选择元素。请参见下面的程序，从整型切片中随机选择。
- en: '[PRE1]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**Output:**'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出：**'
- en: '[PRE2]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[array](https://golangbyexample.com/tag/array/)*   [go](https://golangbyexample.com/tag/go/)*   [golang](https://golangbyexample.com/tag/golang/)*   [pick](https://golangbyexample.com/tag/pick/)*   [slice](https://golangbyexample.com/tag/slice/)*'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[数组](https://golangbyexample.com/tag/array/)*   [go](https://golangbyexample.com/tag/go/)*   [golang](https://golangbyexample.com/tag/golang/)*   [选择](https://golangbyexample.com/tag/pick/)*   [切片](https://golangbyexample.com/tag/slice/)*'
