- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 类别：未分类
- en: 'date: 2024-10-13 06:11:28'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-10-13 06:11:28
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Implement while loop in Go (Golang)
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Go中实现while循环（Golang）
- en: 来源：[https://golangbyexample.com/go-implement-while-loop/](https://golangbyexample.com/go-implement-while-loop/)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://golangbyexample.com/go-implement-while-loop/](https://golangbyexample.com/go-implement-while-loop/)
- en: Go doesn’t have the **while** keyword. Instead, it has the **for** keyword only.
    However **for** keyword can be used to simulate the functionality the same as
    **while**.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: Go没有**while**关键字。相反，它只有**for**关键字。然而，**for**关键字可以用来模拟与**while**相同的功能。
- en: '**for** loop in GO basically has three parts:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: GO中的**for**循环基本上有三个部分：
- en: '[PRE0]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '**for** loop can be implemented to behave the same as **while** if **initialization_part**
    and **increment_part** can be skipped. Here is an example:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 如果**initialization_part**和**increment_part**可以被跳过，**for**循环可以被实现为与**while**行为相同。以下是一个示例：
- en: '[PRE1]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**Output:**'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出：**'
- en: '[PRE2]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[golang](https://golangbyexample.com/tag/golang/)'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[golang](https://golangbyexample.com/tag/golang/)'
