- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-10-13 06:36:17'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: Convert singly linked list into a circular linked list using Go (Golang)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://golangbyexample.com/single-linked-list-circular-golang/](https://golangbyexample.com/single-linked-list-circular-golang/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![](img/2bc3aa339263d40466019d041011a04e.png)'
  prefs: []
  type: TYPE_IMG
- en: Table of Contents
  prefs: []
  type: TYPE_NORMAL
- en: '**   [Overview](#Overview "Overview")'
  prefs: []
  type: TYPE_NORMAL
- en: '[Program](#Program "Program")*  *## **Overview**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Convert singly linked list into a circular linked list using Golang
  prefs: []
  type: TYPE_NORMAL
- en: '**Input singly linked list: **'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '**Output list that should be a circular linked list:**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '**Program**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: There are two important methods in this program
  prefs: []
  type: TYPE_NORMAL
- en: '**ToCircular** – converts a single linked list to a circular linked list'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**IsCircular** – checks if a linked list is a circular linked list'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**Output**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '[circular linked list](https://golangbyexample.com/tag/circular-linked-list/)*   [go](https://golangbyexample.com/tag/go/)*   [golang](https://golangbyexample.com/tag/golang/)*   [single
    linked list](https://golangbyexample.com/tag/single-linked-list/)*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
