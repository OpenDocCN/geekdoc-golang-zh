["```\nhttps://github.com/glenn-brown/golang-pkg-pcre/tree/master/src/pkg/pcre\n```", "```\n1111\n888888888\n444\n```", "```\n(\\d)\\1+\n```", "```\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/glenn-brown/golang-pkg-pcre/src/pkg/pcre\"\n)\n\nfunc main() {\n\tregex := pcre.MustCompile(`(\\d)\\1+`, 0)\n\n\tmatches := regex.MatcherString(\"1111\", 0).Matches()\n\tfmt.Println(\"For 1111 : \", matches)\n\n\tmatches = regex.MatcherString(\"88888888\", 0).Matches()\n\tfmt.Println(\"For 88888888 : \", matches)\n\n\tmatches = regex.MatcherString(\"444\", 0).Matches()\n\tfmt.Println(\"For 444 : \", matches)\n\n\tmatches = regex.MatcherString(\"123\", 0).Matches()\n\tfmt.Println(\"For 123 : \", matches)\n}\n```", "```\nFor 1111 :  true\nFor 88888888 :  true\nFor 444 :  true\nFor 123 :  false\n```", "```\n1111\n888888888\n444\n```", "```\n123\n```", "```\nJohn:John\nThe names are Simon:Simon\n```", "```\n(\\w+):\\1\n```", "```\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/glenn-brown/golang-pkg-pcre/src/pkg/pcre\"\n)\n\nfunc main() {\n\tregex := pcre.MustCompile(`(\\w+):\\1`, 0)\n\n\tmatches := regex.MatcherString(\"John:John\", 0).Matches()\n\tfmt.Println(\"For John:John: \", matches)\n\n\tmatches = regex.MatcherString(\"The names are Simon:Simon\", 0).Matches()\n\tfmt.Println(\"For The names are Simon:Simon: \", matches)\n\n\tmatches = regex.MatcherString(\"John:Simon\", 0).Matches()\n\tfmt.Println(\"For John:Simon: \", matches)\n\n}\n```", "```\nFor John:John:  true\nFor The names are Simon:Simon:  true\nFor John:Simon:  false\n```", "```\nJohn:John\nThe names are Simon:Simon\n```", "```\nJohn:Simon\n```", "```\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/glenn-brown/golang-pkg-pcre/src/pkg/pcre\"\n)\n\nfunc main() {\n\tregex := pcre.MustCompile(`(\\d)\\1+`, 0)\n\n\tinput := \"The number is 91-88888888\"\n\n\tresult := regex.ReplaceAll([]byte(input), []byte(\"redacted\"), 0)\n\tfmt.Println(\"result: \", string(result))\n}\n```", "```\nresult:  The number is 91-redacted\n```", "```\nresult := regex.ReplaceAll([]byte(input), []byte(\"redacted\"), 0)\n```", "```\nresult:  The number is 91-redacted\n```"]