- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 分类：未分类
- en: 'date: 2024-10-13 06:37:02'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-10-13 06:37:02
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Delete a kth node from the front in a Singly Linked List in Go (Golang)
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从单链表的前面删除第k个节点，使用Go (Golang)
- en: 来源：[https://golangbyexample.com/kth-node-front-linked-list-golang/](https://golangbyexample.com/kth-node-front-linked-list-golang/)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://golangbyexample.com/kth-node-front-linked-list-golang/](https://golangbyexample.com/kth-node-front-linked-list-golang/)
- en: Table of Contents
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 目录
- en: '**   [Overview](#Overview "Overview")'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**   [概述](#Overview "Overview")'
- en: '[Program](#Program "Program")'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[程序](#Program "Program")'
- en: '[Explanation](#Explanation "Explanation")*  *## **Overview**'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[解释](#Explanation "Explanation") *  *## **概述**'
- en: Delete a kth node from the front in a Singly Linked List
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 从单链表的前面删除第k个节点
- en: '**Input linked list: **'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**输入链表：**'
- en: '[PRE0]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Let’s say the node to be removed is 3rd from the front, then
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 假设要移除的节点是前面的第3个节点，那么
- en: '**Output linked list: **'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出链表：**'
- en: '[PRE1]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**Program**'
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**程序**'
- en: '[PRE2]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**Output**'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出**'
- en: '[PRE3]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '**Explanation**'
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**解释**'
- en: We created a linked list as below
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 我们创建了如下链表
- en: '[PRE4]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Then we remove the 2nd node from the front which is **B**. We traverse the linked
    list. As you can see from the output that **B** is removed
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们移除前面的第2个节点，即**B**。我们遍历链表。从输出中可以看出**B**被移除。
- en: '[PRE5]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Then we remove the 5th node from the front which is **F**. We traverse the linked
    list. As you can see from the output that **F** is removed
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们移除前面的第5个节点，即**F**。我们遍历链表。从输出中可以看出**F**被移除。
- en: '[PRE6]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Then we try to delete a node from the list from a place greater than the linked
    list size. It gives below error
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们尝试从链表中删除一个节点，位置超过链表的大小。这会产生以下错误。
- en: '[PRE7]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Also, check out our Golang advance tutorial Series – [Golang Advance Tutorial](https://golangbyexample.com/golang-comprehensive-tutorial/)*
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，查看我们的Golang高级教程系列 – [Golang高级教程](https://golangbyexample.com/golang-comprehensive-tutorial/)
    *
