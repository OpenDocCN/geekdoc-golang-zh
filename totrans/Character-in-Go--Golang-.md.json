["```\npackage main\n\nimport (\n    \"fmt\"\n    \"reflect\"\n    \"unsafe\"\n)\n\nfunc main() {\n    //If you don't specify type here\n    var b byte = 'a'\n\n    fmt.Println(\"Priting Byte:\")\n    //Print Size, Type and Character\n    fmt.Printf(\"Size: %d\\nType: %s\\nCharacter: %c\\n\", unsafe.Sizeof(b), reflect.TypeOf(b), b)\n\n    r := '£'\n\n    fmt.Println(\"\\nPriting Rune:\")\n    //Print Size, Type, CodePoint and Character\n    fmt.Printf(\"Size: %d\\nType: %s\\nUnicode CodePoint: %U\\nCharacter: %c\\n\", unsafe.Sizeof(r), reflect.TypeOf(r), r, r)\n\n    s := \"µ\" //Micro sign\n    fmt.Println(\"\\nPriting String:\")\n    fmt.Printf(\"Size: %d\\nType: %s\\nCharacter: %s\\n\", unsafe.Sizeof(s), reflect.TypeOf(s), s)\n}\n```", "```\nPriting Byte:\nSize: 1\nType: uint8\nCharacter: a\n\nPriting Rune:\nSize: 4\nType: int32\nUnicode CodePoint: U+00A3\nCharacter: £\n\nPriting String:\nSize: 16\nType: string\nCharacter: µ\n```", "```\nconstant 285 overflows byte\n```", "```\ninvalid character literal (more than one character)\n```"]