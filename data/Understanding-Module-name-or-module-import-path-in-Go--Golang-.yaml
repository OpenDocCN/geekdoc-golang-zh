- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 分类：未分类
- en: 'date: 2024-10-13 06:29:54'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-10-13 06:29:54
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Understanding Module name or module import path in Go (Golang)
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解 Go (Golang) 中的模块名称或模块导入路径
- en: 来源：[https://golangbyexample.com/module-import-path-golang/](https://golangbyexample.com/module-import-path-golang/)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://golangbyexample.com/module-import-path-golang/](https://golangbyexample.com/module-import-path-golang/)
- en: Table of Contents
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 目录
- en: '**   [Overview](#Overview "Overview")'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**   [概述](#Overview "Overview")'
- en: '[The module is a utility module and you plan to publish your module to VCS
    like git](#The_module_is_a_utility_module_and_you_plan_to_publish_your_module_to_VCS_like_git
    "The module is a utility module and you plan to publish your module to VCS like
    git")'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[该模块是一个实用模块，你计划将其发布到像 git 这样的版本控制系统(VCS)](#The_module_is_a_utility_module_and_you_plan_to_publish_your_module_to_VCS_like_git
    "该模块是一个实用模块，你计划将其发布到像 git 这样的版本控制系统(VCS)")'
- en: '[The module is a utility module and you don’t plan to publish your module](#The_module_is_a_utility_module_and_you_dont_plan_to_publish_your_module
    "The module is a utility module and you don’t plan to publish your module")'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[该模块是一个实用模块，你不打算发布你的模块](#The_module_is_a_utility_module_and_you_dont_plan_to_publish_your_module
    "该模块是一个实用模块，你不打算发布你的模块")'
- en: '[The module is a executable module](#The_module_is_a_executable_module "The
    module is a executable module")*  *# **Overview**'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[该模块是一个可执行模块](#The_module_is_a_executable_module "该模块是一个可执行模块")*  *# **概述**'
- en: Module is go support for dependency management. A module by definition is a
    collection of related packages with **go.mod** at its root.  The **go.mod** file
    defines the
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 模块是 Go 支持的依赖管理。模块的定义是包含相关包的集合，其根目录中有 **go.mod**。**go.mod** 文件定义了
- en: Module import path.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 模块导入路径。
- en: Dependency requirements of the module for a successful build. It defines both
    project’s dependencies requirement and also locks them to their correct version.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 模块成功构建所需的依赖要求。它定义了项目的依赖要求，并将其锁定到正确的版本。
- en: Now let’s discuss more in detail about the module import path. It is the prefix
    path that is used to import all packages of that module. Let’s see an example
    to better understand the module import path. For that let’s create a module
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们更详细地讨论模块导入路径。这是用于导入该模块所有包的前缀路径。让我们看看一个例子来更好地理解模块导入路径。为此，让我们创建一个模块
- en: '[PRE0]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Above command will create a module with import path as [sample.com](http://sample.com)/learn.
    It will also create a **go.mod** file in the same directory. Let’s examine the
    contents of this file. Do a cat **go.mod**
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 上述命令将创建一个导入路径为 [sample.com](http://sample.com)/learn 的模块。它还会在同一目录中创建一个 **go.mod**
    文件。让我们检查一下该文件的内容。执行 cat **go.mod**
- en: '[PRE1]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The first line of the go.mod file will have the module import path as you can
    see in the **go.mod** file above as well. Now where is this module import path
    useful. The import path of a module is used to import any package of that module
    from any other module. This any other module will use module import path as prefix
    path plus the folder path of the package.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: go.mod 文件的第一行将包含模块导入路径，正如你在上面的 **go.mod** 文件中看到的那样。现在，这个模块导入路径有什么用。模块的导入路径用于从任何其他模块导入该模块的任何包。这个其他模块将使用模块导入路径作为前缀路径，加上包的文件夹路径。
- en: '[PRE2]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: So if the **sample.com/learn** module contains a **math** package present at
    directory **math**, then any other module can import the **math** package using
    the path
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，如果 **sample.com/learn** 模块包含位于目录 **math** 中的 **math** 包，那么任何其他模块都可以使用以下路径导入
    **math** 包
- en: '[PRE3]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Now let’s see what factors decide the naming of the module import path. There
    can be three cases that decide what import pathname can be used with modules.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们看看决定模块导入路径命名的因素。可以有三种情况决定可以与模块一起使用的导入路径。
- en: The module is a utility module and you plan to publish your module
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 该模块是一个实用模块，你计划将其发布到 VCS 例如 git
- en: The module is a utility module and you don’t plan to publish your module
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 该模块是一个实用模块，你不打算发布你的模块
- en: The module is an executable module
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 该模块是一个可执行模块
- en: '**The module is a utility module and you plan to publish your module to VCS
    like git**'
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**该模块是一个实用模块，你计划将其发布到像 git 这样的版本控制系统(VCS)**'
- en: If you plan to publish your module then the module name should match the URL
    of the repo that host that module. Go tries to download dependencies from the
    VCS using the import path of the module.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你计划发布你的模块，则模块名称应与托管该模块的仓库的 URL 匹配。Go 尝试使用模块的导入路径从 VCS 下载依赖项。
- en: For example, notice the module import path of this module [https://github.com/pborman/uuid](https://github.com/pborman/uuid)
    . The go.mod file is as below
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，注意该模块的导入路径 [https://github.com/pborman/uuid](https://github.com/pborman/uuid)。go.mod
    文件如下所示
- en: '[PRE4]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Notice that the URL of the module is same as module import path.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，模块的URL与模块导入路径相同。
- en: '**The module is a utility module and you don’t plan to publish your module**'
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**该模块是一个工具模块，您并不打算发布该模块。**'
- en: This is the case when you only mean to use the utility module locally only.
    In this case, the import path can be anything. Refer to this example where we
    illustrated how we can import a local module. In the example, we have used a name
    for the module import path which doesn’t represent the VCS repository.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 当您仅打算在本地使用工具模块时，就是这种情况。在这种情况下，导入路径可以是任何东西。参考这个示例，我们展示了如何导入本地模块。在这个示例中，我们为模块导入路径使用了一个不代表版本控制系统仓库的名称。
- en: '[https://golangbyexample.com/import-local-module-golang](https://golangbyexample.com/import-local-module-golang)/'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://golangbyexample.com/import-local-module-golang](https://golangbyexample.com/import-local-module-golang)/'
- en: '**The module is a executable module**'
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**该模块是一个可执行模块。**'
- en: In this case, also the module import path can be anything. The module import
    path can be a non-URL even if you plan to commit your module into VCS as it will
    not be used by any other module.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，模块导入路径可以是任何东西。即使您计划将模块提交到版本控制系统，该导入路径也可以是非URL，因为它不会被其他模块使用。
- en: However, it is a good practice to use a meaningful import path while creating
    a module
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在创建模块时使用有意义的导入路径是一个好习惯。
- en: '[go](https://golangbyexample.com/tag/go/)*   [golang](https://golangbyexample.com/tag/golang/)*'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[go](https://golangbyexample.com/tag/go/) * [golang](https://golangbyexample.com/tag/golang/)
    *'
