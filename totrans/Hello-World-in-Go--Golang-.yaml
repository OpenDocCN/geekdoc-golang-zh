- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-10-13 06:21:35'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: Hello World in Go (Golang)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://golangbyexample.com/hello-world-golang/](https://golangbyexample.com/hello-world-golang/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Let’s see how to write a simple Hello World program in golang. Create a file
    with an extension .go. Let’s name this file **helloworld.go**. Below will be the
    contents of the file.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Some points to note about above program
  prefs: []
  type: TYPE_NORMAL
- en: Every go file starts with a package name. In the above case it is package **main**
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Only **main** package is executable.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The **main** package will contain a **main** function that denotes the start
    of a program
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We are using the **Println** function of **fmt** package to print the **Hello
    World** string
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Let’s run this file now. For running, go to the directory which contains this
    file. Type below command to run the file. What this command will do is compile
    the go file and immediately run it.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**Output**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
