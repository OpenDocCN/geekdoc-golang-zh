- en: <!--yml
  prefs: []
  type: TYPE_NORMAL
- en: 'category: 未分类'
  prefs: []
  type: TYPE_NORMAL
- en: 'date: 2024-10-13 06:39:30'
  prefs: []
  type: TYPE_NORMAL
- en: -->
  prefs: []
  type: TYPE_NORMAL
- en: Read a file into a variable in Go (Golang)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 来源：[https://golangbyexample.com/read-file-variable-golang/](https://golangbyexample.com/read-file-variable-golang/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Table of Contents
  prefs: []
  type: TYPE_NORMAL
- en: '**   [Overview](#Overview "Overview")'
  prefs: []
  type: TYPE_NORMAL
- en: '[Using ReadFile function provided by the ioutil package](#Using_ReadFile_function_provided_by_the_ioutil_package
    "Using ReadFile function provided by the ioutil package ")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Using os.Open and then using bytes.Buffer](#Using_osOpen_and_then_using_bytesBuffer
    "Using os.Open and then using bytes.Buffer")'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Using os.Open and then using strings.Builder](#Using_osOpen_and_then_using_stringsBuilder
    "Using os.Open and then using strings.Builder")*  *## **Overview**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: There are various ways of reading a file into a variable in golang. Here are
    some of the ways
  prefs: []
  type: TYPE_NORMAL
- en: Using **ReadFile** function provided by the **ioutil** package
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using **os.Open** and then using **bytes.Buffer**
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using **os.Open** and then using **strings.Builder**
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: .Also, note reading the entire file into a variable only makes sense if you
    are reading a small file. If the file is large then it makes sense to read it
    line by line. Refer to this article for the same.
  prefs: []
  type: TYPE_NORMAL
- en: '[https://golangbyexample.com/read-large-file-line-by-line-go/](https://golangbyexample.com/read-large-file-line-by-line-go/)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Note: Before trying out examples in this tutorial, please create a file named
    **test.png** at the location from which you will be running the program'
  prefs: []
  type: TYPE_NORMAL
- en: '**Using ReadFile function provided by the ioutil package**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[https://golang.org/pkg/io/ioutil/#ReadFile](https://golang.org/pkg/io/ioutil/#ReadFile)'
  prefs: []
  type: TYPE_NORMAL
- en: Below is the program for the same
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '**Output**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '**Using os.Open and then using bytes.Buffer**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[https://golang.org/pkg/bytes/#Buffer](https://golang.org/pkg/bytes/#Buffer)'
  prefs: []
  type: TYPE_NORMAL
- en: Below is the program for the same
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**Output**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Using **os.Open** and then using **strings.Builder**
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[https://golang.org/pkg/strings/#Builder](https://golang.org/pkg/strings/#Builder)'
  prefs: []
  type: TYPE_NORMAL
- en: Below is the program for the same
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '**Output**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Also, check out our Golang advance tutorial Series – [Golang Advance Tutorial](https://golangbyexample.com/golang-comprehensive-tutorial/)
  prefs: []
  type: TYPE_NORMAL
- en: '[go](https://golangbyexample.com/tag/go/)*   [golang](https://golangbyexample.com/tag/golang/)*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
