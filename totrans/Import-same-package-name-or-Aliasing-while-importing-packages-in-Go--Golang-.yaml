- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 类别：未分类
- en: 'date: 2024-10-13 06:30:49'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-10-13 06:30:49
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Import same package name or Aliasing while importing packages in Go (Golang)
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Go (Golang) 中导入同名包或在导入包时使用别名
- en: 来源：[https://golangbyexample.com/import-same-package-name-golang/](https://golangbyexample.com/import-same-package-name-golang/)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://golangbyexample.com/import-same-package-name-golang/](https://golangbyexample.com/import-same-package-name-golang/)
- en: Table of Contents
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 目录
- en: '**   [Overview](#Overview "Overview")'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**   [概述](#Overview "Overview")'
- en: '[Example](#Example "Example")*  *# **Overview**'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[示例](#Example "Example")*  *# **概述**'
- en: Aliasing in importing packages means give a different name to the imported package.
    Syntax for it is
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 导入包时的别名意味着给导入的包一个不同的名称。其语法为
- en: '[PRE0]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Above statement means that whatever package is present at directory <directory_path>
    import that package with name <new_name>. Aliasing is useful for giving
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 上述语句的意思是，无论 <directory_path> 目录中存在什么包，都用 <new_name> 导入该包。别名对于命名非常有用。
- en: Giving a more relevant name to the imported package in the current context.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在当前上下文中给导入的包一个更相关的名称。
- en: When two different import path contains the same package name then import one
    of them as a different name to prevent conflict.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当两个不同的导入路径包含相同的包名时，将其中一个作为不同的名称导入以防止冲突。
- en: '**Example**'
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**示例**'
- en: Create a module with import path as [sample.com](http://sample.com)/learn
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个模块，导入路径为 [sample.com](http://sample.com)/learn
- en: '[PRE1]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: In below example we created two directory math and math2.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的示例中，我们创建了两个目录 math 和 math2。
- en: math directory contains file math.go with package declaration as
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: math 目录包含文件 math.go，包声明为
- en: '[PRE2]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: math2 directory contains file math2.go with package declaration as
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: math2 目录包含文件 math2.go，包声明为
- en: Notice that package name (i.e **math**) is same in folder **math** as well in
    folder **math2\.** So both folder **math2** and **math** contains the same package
    which is **math.** Since both directory have the same package name, aliasing is
    the only way to use both the package in the same file. This is how we alias and
    use both the package in main.go
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，包名（即 **math**）在 **math** 文件夹和 **math2\.** 文件夹中是相同的。因此，两个文件夹 **math2** 和
    **math** 都包含相同的包，即 **math.** 由于这两个目录具有相同的包名，别名是将两个包用于同一文件的唯一方法。这就是我们在 main.go
    中如何别名和使用两个包。
- en: '[PRE3]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: We alias **math** package present **“sample.com/learn/math2”** to **math2\.**
    If we haven’t done that then GO will raise a compilation issue as it cannot import
    package with same name from two different folders. This one of the advantage of
    using alias.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将 **math** 包在 **“sample.com/learn/math2”** 中别名为 **math2\.** 如果没有这样做，GO 将会引发编译问题，因为它无法从两个不同的文件夹导入同名的包。这是使用别名的一个优点。
- en: Let’s see full working code
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看完整的工作代码
- en: '**go.mod**'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '**go.mod**'
- en: '[PRE4]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '**learn/math2/math2.go**'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '**learn/math2/math2.go**'
- en: '[PRE5]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '**learn/math/math.go**'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '**learn/math/math.go**'
- en: '[PRE6]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '**learn/main.go**'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '**learn/main.go**'
- en: '[PRE7]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Let’s run this program
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们运行这个程序
- en: '[PRE8]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[go](https://golangbyexample.com/tag/go/)*   [golang](https://golangbyexample.com/tag/golang/)*'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[go](https://golangbyexample.com/tag/go/)*   [golang](https://golangbyexample.com/tag/golang/)*'
