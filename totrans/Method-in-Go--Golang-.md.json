["```\nfunc (receiver receiver_type) some_func_name(arguments) return_values\n```", "```\nfunc some_func_name(arguments) return_values\n```", "```\nfunc (receiver receiver_type) some_func_name(arguments) return_values\n```", "```\npackage main\n\nimport \"fmt\"\n\ntype employee struct {\n    name   string\n    age    int\n    salary int\n}\n\nfunc (e employee) details() {\n    fmt.Printf(\"Name: %s\\n\", e.name)\n    fmt.Printf(\"Age: %d\\n\", e.age)\n}\n\nfunc (e employee) getSalary() int {\n    return e.salary\n}\n\nfunc main() {\n    emp := employee{name: \"Sam\", age: 31, salary: 2000}\n    emp.details()\n    fmt.Printf(\"Salary %d\\n\", emp.getSalary())\n}\n```", "```\nName: Sam\nAge: 31\nSalary 2000\n```", "```\npackage main\n\nimport \"fmt\"\n\ntype employee struct {\n    name   string\n    age    int\n    salary int\n}\n\nfunc (e employee) setNewName(newName string) {\n    e.name = newName\n}\n\nfunc main() {\n    emp := employee{name: \"Sam\", age: 31, salary: 2000}\n    emp.setNewName(\"John\")\n    fmt.Printf(\"Name: %s\\n\", emp.name)\n}\n```", "```\nName: Sam\n```", "```\ne.name = newName\n```", "```\nfunc (e employee) setNewName(newName string)\n```", "```\npackage main\n\nimport \"fmt\"\n\ntype employee struct {\n    name   string\n    age    int\n    salary int\n}\n\nfunc (e *employee) setNewName(newName string) {\n    e.name = newName\n}\n\nfunc main() {\n    emp := &employee{name: \"Sam\", age: 31, salary: 2000}\n    emp.setNewName(\"John\")\n    fmt.Printf(\"Name: %s\\n\", emp.name)\n}\n```", "```\nName: John\n```", "```\nfunc (e *employee) setNewName(newName string)\n```", "```\npackage main\n\nimport \"fmt\"\n\ntype employee struct {\n    name   string\n    age    int\n    salary int\n}\n\nfunc (e *employee) setNewName(newName string) {\n    e.name = newName\n}\n\nfunc main() {\n    emp := employee{name: \"Sam\", age: 31, salary: 2000}\n    emp.setNewName(\"John\")\n\n    fmt.Printf(\"Name: %s\\n\", emp.name)\n\n    (&emp).setNewName(\"Mike\")\n    fmt.Printf(\"Name: %s\\n\", emp.name)\n}\n```", "```\nName: John\nName: Mike\n```", "```\nemp.setNewName(\"John\")\n```", "```\n(&emp).setNewName(\"Mike\")\n```", "```\npackage main\n\nimport \"fmt\"\n\ntype employee struct {\n    name   string\n    age    int\n    salary int\n}\n\nfunc (e employee) setNewName(newName string) {\n    e.name = newName\n}\n\nfunc main() {\n    emp := employee{name: \"Sam\", age: 31, salary: 2000}\n    emp.setNewName(\"John\")\n\n    fmt.Printf(\"Name: %s\\n\", emp.name)\n    (&emp).setNewName(\"Mike\")\n\n    fmt.Printf(\"Name: %s\\n\", emp.name)\n    emp2 := &employee{name: \"Sam\", age: 31, salary: 2000}\n    emp2.setNewName(\"John\")\n    fmt.Printf(\"Name: %s\\n\", emp2.name)\n}\n```", "```\nName: Sam\nName: Sam\nName: Sam\n```", "```\nERROR: cannot define new methods on non-local types\n```", "```\npackage main\n\nimport \"fmt\"\n\ntype employee struct {\n\tname   string\n\tage    int\n\tsalary int\n}\n\nfunc (e employee) details() {\n\tfmt.Printf(\"Name: %s\\n\", e.name)\n\tfmt.Printf(\"Age: %d\\n\", e.age)\n}\n\nfunc (e *employee) setName(newName string) {\n\te.name = newName\n}\n\nfunc main() {\n\temp := employee{name: \"Sam\", age: 31, salary: 2000}\n\temployee.details(emp)\n\n\t(*employee).setName(&emp, \"John\")\n\n\tfmt.Printf(\"Name: %s\\n\", emp.name)\n}\n```", "```\nName: Sam\nAge: 31\nName: John\n```", "```\nemployee.details(emp)\n```", "```\n(*employee).setName(&emp, \"John\")\n```", "```\n(*employee).setName(&emp, \"John\")\n```", "```\npackage main\n\nimport \"fmt\"\n\ntype employee struct {\n\tname   string\n\tage    int\n\tsalary int\n\taddress\n}\n\ntype address struct {\n\tcity    string\n\tcountry string\n}\n\nfunc (a address) details() {\n\tfmt.Printf(\"City: %s\\n\", a.city)\n\tfmt.Printf(\"Country: %s\\n\", a.country)\n}\n\nfunc main() {\n\taddress := address{city: \"London\", country: \"UK\"}\n\n\temp := employee{name: \"Sam\", age: 31, salary: 2000, address: address}\n\n\temp.details()\n\n\temp.address.details()\n}\n```", "```\nCity: London\nCountry: UK\nCity: London\nCountry: UK\n```", "```\nemp.details()\nemp.address.details()\n```", "```\npackage main\n\nimport \"fmt\"\n\n//Person struct\ntype Person struct {\n    Name string\n    age  int\n}\n\n//GetAge of person\nfunc (p *Person) GetAge() int {\n    return p.age\n}\n\nfunc (p *Person) getName() string {\n    return p.Name\n}\n\ntype company struct {\n}\n```", "```\npackage main\n\nimport \"fmt\"\n\n//Test function\nfunc Test() {\n    //STRUCTURE IDENTIFIER\n    p := &Person{\n        Name: \"test\",\n        age:  21,\n    }\n    fmt.Println(p)\n    c := &company{}\n    fmt.Println(c)\n\n    //STRUCTURE'S FIELDS\n    fmt.Println(p.Name)\n    fmt.Println(p.age)\n\n    //STRUCTURE'S METHOD\n    fmt.Println(p.GetAge())\n    fmt.Println(p.getName())\n\n}\n```", "```\n&{test 21}\n&{}\ntest\n21\n21\ntest\n```", "```\np.getName undefined (cannot refer to unexported field or method model.(*Person).getName)\n```", "```\npackage main\n\nimport \"fmt\"\n\ntype employee struct {\n\tname   string\n\tage    int\n\tsalary int\n}\n\nfunc (e employee) printName() employee {\n\tfmt.Printf(\"Name: %s\\n\", e.name)\n\treturn e\n}\n\nfunc (e employee) printAge() employee {\n\tfmt.Printf(\"Age: %d\\n\", e.age)\n\treturn e\n}\n\nfunc (e employee) printSalary() {\n\tfmt.Printf(\"Salary: %d\\n\", e.salary)\n}\n\nfunc main() {\n\temp := employee{name: \"Sam\", age: 31, salary: 2000}\n\temp.printName().printAge().printSalary()\n}\n```", "```\nName: Sam\nAge: 31\nSalary: 2000\n```", "```\ntype {type_name} {built_in_type}\n```", "```\ntype myFloat float64\n```", "```\npackage main\n\nimport (\n    \"fmt\"\n    \"math\"\n)\n\ntype myFloat float64\n\nfunc (m myFloat) ceil() float64 {\n    return math.Ceil(float64(m))\n}\n\nfunc main() {\n    num := myFloat(1.4)\n    fmt.Println(num.ceil())\n}\n```", "```\n2\n```"]