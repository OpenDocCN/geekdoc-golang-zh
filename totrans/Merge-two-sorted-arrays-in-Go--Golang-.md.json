["```\nInput1: [2,3,4,0,0]\nInput2: [1,5]\nOutput: [1, 2, 3, 4, 5]\n\nInput1: [4,5,0,0,0,0]\nInput2: [1, 2, 3, 7]\nOutput: [1, 2, 3, 4, 5, 7]\n```", "```\n[0,0,2,3,4]\n```", "```\n[1, 0, 2, 3, 4]\n```", "```\npackage main\n\nimport \"fmt\"\n\nfunc merge(nums1 []int, m int, nums2 []int, n int) []int {\n\n\tif m == 0 {\n\t\tfor k := 0; k < n; k++ {\n\t\t\tnums1[k] = nums2[k]\n\t\t}\n\t\treturn nums1\n\t}\n\tnums1 = moveToEnd(nums1, m)\n\ti := n\n\tj := 0\n\tfor k := 0; k < m+n; k++ {\n\t\tif i < m+n && j < n {\n\t\t\tif nums1[i] < nums2[j] {\n\t\t\t\tnums1[k] = nums1[i]\n\t\t\t\ti++\n\t\t\t} else {\n\t\t\t\tnums1[k] = nums2[j]\n\t\t\t\tj++\n\t\t\t}\n\t\t} else if j < n {\n\t\t\tnums1[k] = nums2[j]\n\t\t\tj++\n\t\t}\n\n\t}\n\n\treturn nums1\n\n}\n\nfunc moveToEnd(nums []int, m int) []int {\n\tlenNums := len(nums)\n\n\tk := lenNums\n\n\tfor i := m - 1; i >= 0; i-- {\n\t\tnums[k-1] = nums[i]\n\t\tk--\n\t}\n\n\treturn nums\n}\n\nfunc main() {\n\toutput := merge([]int{2, 3, 4, 0, 0}, 3, []int{1, 5}, 2)\n\tfmt.Println(output)\n\n\toutput = merge([]int{4, 5, 0, 0, 0, 0}, 2, []int{1, 2, 3, 7}, 4)\n\tfmt.Println(output)\n}\n```", "```\n[1 2 3 4 5]\n[1 2 3 4 5 7]\n```"]