- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 分类：未分类
- en: 'date: 2024-10-13 06:13:24'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-10-13 06:13:24
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Swap Characters of a string in Go (Golang)
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Go (Golang) 中交换字符串的字符
- en: 来源：[https://golangbyexample.com/swap-characters-string-golang/](https://golangbyexample.com/swap-characters-string-golang/)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://golangbyexample.com/swap-characters-string-golang/](https://golangbyexample.com/swap-characters-string-golang/)
- en: In Golang string is a sequence of bytes. A string literal actually represents
    a UTF-8 sequence of bytes. In UTF-8, ASCII characters are single-byte corresponding
    to the first 128 Unicode characters. All other characters are between 1 -4 bytes.
    Due to this, it is not possible to index a character in a string.  In GO, rune
    data type represents a Unicode point.  Once a string is converted to an array
    of rune then it is possible to index a character in that array of rune. You can
    learn more about rune here – [https://golangbyexample.com/understanding-rune-in-golang](https://golangbyexample.com/understanding-rune-in-golang)
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Golang 中，字符串是字节的序列。字符串字面量实际上代表的是一段 UTF-8 字节序列。在 UTF-8 中，ASCII 字符对应于前 128 个
    Unicode 字符，均为单字节。所有其他字符则在 1 到 4 字节之间。因此，无法直接在字符串中索引字符。在 Go 中，rune 数据类型表示一个 Unicode
    点。一旦将字符串转换为 rune 数组，就可以在该数组中索引字符。你可以在这里了解更多关于 rune 的信息 – [https://golangbyexample.com/understanding-rune-in-golang](https://golangbyexample.com/understanding-rune-in-golang)。
- en: For this reason in the below program for swapping characters in a string, we
    are first converting a string into a rune array so that we can index the rune
    array to get the individual characters.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，在下面的程序中，为了交换字符串中的字符，我们首先将字符串转换为 rune 数组，以便可以通过索引访问该 rune 数组中的单个字符。
- en: '[PRE0]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '**Output:**'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出：**'
- en: '[PRE1]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
