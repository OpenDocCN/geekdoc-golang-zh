- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 分类：未分类
- en: 'date: 2024-10-13 06:35:13'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-10-13 06:35:13
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: Print string with double quotes in Go (Golang)
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Go (Golang) 中用双引号打印字符串
- en: 来源：[https://golangbyexample.com/print-double-quotes-string-golang/](https://golangbyexample.com/print-double-quotes-string-golang/)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://golangbyexample.com/print-double-quotes-string-golang/](https://golangbyexample.com/print-double-quotes-string-golang/)
- en: Table of Contents
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 目录
- en: '**   [Overview](#Overview "Overview")'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**   [概述](#Overview "概述")**'
- en: '[Program for double-quoted string](#Program_for_double-quoted_string "Program
    for double-quoted string")*  *## **Overview**'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[双引号字符串的程序](#Program_for_double-quoted_string "双引号字符串的程序")*  *## **概述**'
- en: The backslash is the escaping character. To print any string that contains literal
    double quotes, we need to escape both these quotes when the string is enclosed
    within double quotes. However, a string enclosed in backquotes is a raw literal
    string and doesn’t honor any kind of escaping. So back quotes can also be used
    to print a string with literal double quotes
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 反斜杠是转义字符。要打印包含字面双引号的任何字符串，我们需要在字符串用双引号括起来时转义这两个引号。然而，用反引号括起来的字符串是原始字面字符串，不会遵循任何转义。因此，反引号也可以用来打印包含字面双引号的字符串。
- en: '**Program for double-quoted string**'
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**双引号字符串的程序**'
- en: '[PRE0]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '**Output**'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出**'
- en: '[PRE1]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Noticed that we escaped both single quotes and double quotes within that string
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 注意到我们在那个字符串中转义了单引号和双引号
- en: '**Program for back quotes**'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**反引号的程序**'
- en: '[PRE2]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**Output**'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出**'
- en: '[PRE3]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[go](https://golangbyexample.com/tag/go/)*'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[go](https://golangbyexample.com/tag/go/)*'
