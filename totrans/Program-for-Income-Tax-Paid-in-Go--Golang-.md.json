["```\nbrackets[i] = [upperi, percenti]\n```", "```\nInput: brackets = [[4,10],[9,20],[12,30]], income = 10\nOutput: 1.7\n```", "```\nInput: brackets = [[3,10]], income = 1\nOutput: 0.3\n```", "```\npackage main\n\nimport \"fmt\"\n\nfunc calculateTax(brackets [][]int, income int) float64 {\n\tif income == 0 {\n\t\treturn 0\n\t}\n\n\tvar totalTax float64\n\n\tnumBrackets := len(brackets)\n\tupper := 0\n\tfor i := 0; i < numBrackets; i++ {\n\n\t\tif i == 0 {\n\t\t\tupper = brackets[i][0]\n\t\t} else {\n\t\t\tupper = brackets[i][0] - brackets[i-1][0]\n\t\t}\n\n\t\ttaxPer := brackets[i][1]\n\t\tif income <= upper {\n\t\t\ttotalTax += float64(income) * float64(taxPer) / 100\n\t\t\tbreak\n\t\t} else {\n\t\t\ttotalTax += float64(upper) * float64(taxPer) / 100\n\t\t\tincome = income - upper\n\t\t}\n\t}\n\n\treturn totalTax\n}\n\nfunc main() {\n\toutput := calculateTax([][]int{{4, 10}, {9, 20}, {12, 30}}, 10)\n\tfmt.Println(output)\n\n\toutput = calculateTax([][]int{{3, 10}}, 10)\n\tfmt.Println(output)\n\n}\n```", "```\n1.7\n0.3\n```"]